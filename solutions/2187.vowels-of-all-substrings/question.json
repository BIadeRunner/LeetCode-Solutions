{"questionId": "2187", "acRate": 54.23098766069493, "difficulty": "Medium", "freqBar": 17.00303114366409, "frontendQuestionId": "2063", "paidOnly": false, "status": "ac", "title": "Vowels of All Substrings", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Dynamic Programming", "id": "VG9waWNUYWdOb2RlOjEz", "slug": "dynamic-programming"}, {"name": "Combinatorics", "id": "VG9waWNUYWdOb2RlOjYxMDU2", "slug": "combinatorics"}], "titleSlug": "vowels-of-all-substrings", "content": "<p>Given a string <code>word</code>, return <em>the <strong>sum of the number of vowels</strong> (</em><code>&#39;a&#39;</code>, <code>&#39;e&#39;</code><em>,</em> <code>&#39;i&#39;</code><em>,</em> <code>&#39;o&#39;</code><em>, and</em> <code>&#39;u&#39;</code><em>)</em> <em>in every substring of </em><code>word</code>.</p>\n\n<p>A <strong>substring</strong> is a contiguous (non-empty) sequence of characters within a string.</p>\n\n<p><strong>Note:</strong> Due to the large constraints, the answer may not fit in a signed 32-bit integer. Please be careful during the calculations.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;aba&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \nAll possible substrings are: &quot;a&quot;, &quot;ab&quot;, &quot;aba&quot;, &quot;b&quot;, &quot;ba&quot;, and &quot;a&quot;.\n- &quot;b&quot; has 0 vowels in it\n- &quot;a&quot;, &quot;ab&quot;, &quot;ba&quot;, and &quot;a&quot; have 1 vowel each\n- &quot;aba&quot; has 2 vowels in it\nHence, the total sum of vowels = 0 + 1 + 1 + 1 + 1 + 2 = 6. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nAll possible substrings are: &quot;a&quot;, &quot;ab&quot;, &quot;abc&quot;, &quot;b&quot;, &quot;bc&quot;, and &quot;c&quot;.\n- &quot;a&quot;, &quot;ab&quot;, and &quot;abc&quot; have 1 vowel each\n- &quot;b&quot;, &quot;bc&quot;, and &quot;c&quot; have 0 vowels each\nHence, the total sum of vowels = 1 + 1 + 1 + 0 + 0 + 0 = 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;ltcd&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no vowels in any substring of &quot;ltcd&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>word</code> consists of lowercase English letters.</li>\n</ul>\n", "hints": ["Since generating substrings is not an option, can we count the number of substrings a vowel appears in?", "How much does each vowel contribute to the total sum?"], "exampleTestcases": "\"aba\"\n\"abc\"\n\"ltcd\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    long long countVowels(string word) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public long countVowels(String word) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def countVowels(self, word):\n        \"\"\"\n        :type word: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def countVowels(self, word: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "long long countVowels(char* word) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public long CountVowels(string word) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} word\n * @return {number}\n */\nvar countVowels = function(word) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function countVowels(word: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @return Integer\n     */\n    function countVowels($word) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func countVowels(_ word: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun countVowels(word: String): Long {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int countVowels(String word) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func countVowels(word string) int64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} word\n# @return {Integer}\ndef count_vowels(word)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def countVowels(word: String): Long = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn count_vowels(word: String) -> i64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (count-vowels word)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec count_vowels(Word :: unicode:unicode_binary()) -> integer().\ncount_vowels(Word) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_vowels(word :: String.t) :: integer\n  def count_vowels(word) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "number-of-substrings-containing-all-three-characters", "title": "Number of Substrings Containing All Three Characters", "isPaidOnly": false}, {"difficulty": "Hard", "titleSlug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "isPaidOnly": false}]}