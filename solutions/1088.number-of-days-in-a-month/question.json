{"question_id": "1088", "problem_slug": "number-of-days-in-a-month", "problem_title": "Number of Days in a Month", "content": "Given a year year and a month month, return the number of days of that month.\n \nExample 1:\nInput: year = 1992, month = 7\nOutput: 31\nExample 2:\nInput: year = 2000, month = 2\nOutput: 29\nExample 3:\nInput: year = 1900, month = 2\nOutput: 28\n\n \nConstraints:\n\n1583 <= year <= 2100\n1 <= month <= 12\n\n", "hints": ["Does February have 28 days or 29 days?", "Think of Leap years."], "exampleTestcases": "1992\n7\n2000\n2\n1900\n2", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int numberOfDays(int year, int month) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int numberOfDays(int year, int month) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def numberOfDays(self, year, month):\n        \"\"\"\n        :type year: int\n        :type month: int\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def numberOfDays(self, year: int, month: int) -> int:\n        "}, "C": {"langSlug": "c", "code": "int numberOfDays(int year, int month) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int NumberOfDays(int year, int month) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} year\n * @param {number} month\n * @return {number}\n */\nvar numberOfDays = function(year, month) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function numberOfDays(year: number, month: number): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $year\n     * @param Integer $month\n     * @return Integer\n     */\n    function numberOfDays($year, $month) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func numberOfDays(_ year: Int, _ month: Int) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun numberOfDays(year: Int, month: Int): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int numberOfDays(int year, int month) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func numberOfDays(year int, month int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} year\n# @param {Integer} month\n# @return {Integer}\ndef number_of_days(year, month)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def numberOfDays(year: Int, month: Int): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn number_of_days(year: i32, month: i32) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (number-of-days year month)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec number_of_days(Year :: integer(), Month :: integer()) -> integer().\nnumber_of_days(Year, Month) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec number_of_days(year :: integer, month :: integer) :: integer\n  def number_of_days(year, month) do\n    \n  end\nend"}}}