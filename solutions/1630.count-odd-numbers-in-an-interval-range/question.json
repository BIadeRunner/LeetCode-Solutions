{"question_id": "1630", "problem_slug": "count-odd-numbers-in-an-interval-range", "problem_title": "Count Odd Numbers in an Interval Range", "content": "Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).\n \nExample 1:\n\r\nInput: low = 3, high = 7\r\nOutput: 3\r\nExplanation: The odd numbers between 3 and 7 are [3,5,7].\nExample 2:\n\r\nInput: low = 8, high = 10\r\nOutput: 1\r\nExplanation: The odd numbers between 8 and 10 are [9].\n \nConstraints:\n\n0 <= low <= high <= 10^9\n", "hints": ["If the range (high - low + 1) is even, the number of even and odd numbers in this range will be the same.", "If the range (high - low + 1) is odd, the solution will depend on the parity of high and low."], "exampleTestcases": "3\n7\n8\n10", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int countOdds(int low, int high) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int countOdds(int low, int high) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def countOdds(self, low, high):\n        \"\"\"\n        :type low: int\n        :type high: int\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def countOdds(self, low: int, high: int) -> int:\n        "}, "C": {"langSlug": "c", "code": "\n\nint countOdds(int low, int high){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int CountOdds(int low, int high) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} low\n * @param {number} high\n * @return {number}\n */\nvar countOdds = function(low, high) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function countOdds(low: number, high: number): number {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $low\n     * @param Integer $high\n     * @return Integer\n     */\n    function countOdds($low, $high) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func countOdds(_ low: Int, _ high: Int) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun countOdds(low: Int, high: Int): Int {\n        \n    }\n}"}, "Go": {"langSlug": "golang", "code": "func countOdds(low int, high int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} low\n# @param {Integer} high\n# @return {Integer}\ndef count_odds(low, high)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def countOdds(low: Int, high: Int): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn count_odds(low: i32, high: i32) -> i32 {\n        \n    }\n}"}}}