{"questionId": "2899", "acRate": 92.99410029498524, "difficulty": "Easy", "freqBar": 47.08291471517694, "frontendQuestionId": "2796", "paidOnly": true, "status": "ac", "title": "Repeat String", "topicTags": [], "titleSlug": "repeat-string", "content": "<p>Write code that enhances all strings such that you can call the&nbsp;<code>string.replicate(x)</code>&nbsp;method on any string and it will return repeated string <code>x</code> times.</p>\n\n<p>Try to implement it without using the built-in method <code>string.repeat</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;hello&quot;, times = 2\n<strong>Output:</strong> &quot;hellohello&quot;\n<strong>Explanation:</strong> &quot;hello&quot; is repeated 2 times\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;code&quot;, times = 3\n<strong>Output:</strong> &quot;codecodecode&quot;\n<strong>Explanation:</strong> &quot;code&quot; is repeated 3 times\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> str = &quot;js&quot;, times = 1\n<strong>Output:</strong> &quot;js&quot;\n<strong>Explanation:</strong> &quot;js&quot; is repeated 1 time\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= times &lt;=&nbsp;10<sup>5</sup></code></li>\n\t<li><code>1 &lt;=&nbsp;str.length &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Let&#39;s assume, for the sake of simplifying analysis, that concatenating strings is a constant time operation <code>O(1)</code>. With this assumption in mind, can you write an algorithm with a runtime complexity of <code>O(log n)</code>?", "hints": [], "exampleTestcases": "\"hello\"\n2\n\"code\"\n3\n\"js\"\n1", "codeSnippets": [{"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} times\n * @return {string}\n */\nString.prototype.replicate = function(times) {\n    \n}"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "interface String {\n    replicate(times: number): string;\n}\n\nString.prototype.replicate = function(times): string {\n    \n}"}], "similarQuestionList": []}