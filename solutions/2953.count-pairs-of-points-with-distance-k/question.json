{"questionId": "2953", "acRate": 32.34335803465875, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2857", "paidOnly": false, "status": "ac", "title": "Count Pairs of Points With Distance k", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "Bit Manipulation", "id": "VG9waWNUYWdOb2RlOjE5", "slug": "bit-manipulation"}], "titleSlug": "count-pairs-of-points-with-distance-k", "content": "<p>You are given a <strong>2D</strong> integer array <code>coordinates</code> and an integer <code>k</code>, where <code>coordinates[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> are the coordinates of the <code>i<sup>th</sup></code> point in a 2D plane.</p>\n\n<p>We define the <strong>distance</strong> between two points <code>(x<sub>1</sub>, y<sub>1</sub>)</code> and <code>(x<sub>2</sub>, y<sub>2</sub>)</code> as <code>(x1 XOR x2) + (y1 XOR y2)</code> where <code>XOR</code> is the bitwise <code>XOR</code> operation.</p>\n\n<p>Return <em>the number of pairs </em><code>(i, j)</code><em> such that </em><code>i &lt; j</code><em> and the distance between points </em><code>i</code><em> and </em><code>j</code><em> is equal to </em><code>k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> coordinates = [[1,2],[4,2],[1,3],[5,2]], k = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We can choose the following pairs:\n- (0,1): Because we have (1 XOR 4) + (2 XOR 2) = 5.\n- (2,3): Because we have (1 XOR 5) + (3 XOR 2) = 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> coordinates = [[1,3],[1,3],[1,3],[1,3],[1,3]], k = 0\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Any two chosen pairs will have a distance of 0. There are 10 ways to choose two pairs.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= coordinates.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 100</code></li>\n</ul>\n", "hints": ["<div class=\"_1l1MA\">Suppose that <code>x = x<sub>1</sub> XOR x<sub>2</sub></code> and y = y<sub>1</sub> XOR y<sub>2</sub> then we can get <code>x<sub>2</sub> = x XOR x<sub>1</sub></code> and <code>y<sub>2</sub> = y XOR y<sub>1</sub></code>.</div>", "<div class=\"_1l1MA\">We are supposed to have\u00a0k = x + y so we can get\u00a0<code>x<sub>2</sub> = x XOR x<sub>1</sub></code>\u00a0and\u00a0<code>y<sub>2</sub> = (k - x)\u00a0XOR y<sub>1</sub></code>.</div>", "<div class=\"_1l1MA\">We can iterate over all possible values of <code>x</code> and count the number of points\u00a0<code>(x<sub>1</sub>, x<sub>2</sub>)</code> and <code>(x<sub>2</sub>, y<sub>2</sub>)</code>.</div>"], "exampleTestcases": "[[1,2],[4,2],[1,3],[5,2]]\n5\n[[1,3],[1,3],[1,3],[1,3],[1,3]]\n0", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int countPairs(vector<vector<int>>& coordinates, int k) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int countPairs(List<List<Integer>> coordinates, int k) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def countPairs(self, coordinates, k):\n        \"\"\"\n        :type coordinates: List[List[int]]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def countPairs(self, coordinates: List[List[int]], k: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int countPairs(int** coordinates, int coordinatesSize, int* coordinatesColSize, int k) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int CountPairs(IList<IList<int>> coordinates, int k) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} coordinates\n * @param {number} k\n * @return {number}\n */\nvar countPairs = function(coordinates, k) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function countPairs(coordinates: number[][], k: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $coordinates\n     * @param Integer $k\n     * @return Integer\n     */\n    function countPairs($coordinates, $k) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func countPairs(_ coordinates: [[Int]], _ k: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun countPairs(coordinates: List<List<Int>>, k: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int countPairs(List<List<int>> coordinates, int k) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func countPairs(coordinates [][]int, k int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} coordinates\n# @param {Integer} k\n# @return {Integer}\ndef count_pairs(coordinates, k)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def countPairs(coordinates: List[List[Int]], k: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn count_pairs(coordinates: Vec<Vec<i32>>, k: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (count-pairs coordinates k)\n  (-> (listof (listof exact-integer?)) exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec count_pairs(Coordinates :: [[integer()]], K :: integer()) -> integer().\ncount_pairs(Coordinates, K) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_pairs(coordinates :: [[integer]], k :: integer) :: integer\n  def count_pairs(coordinates, k) do\n    \n  end\nend"}], "similarQuestionList": []}