{"questionId": "2781", "acRate": 69.9666295884316, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2775", "paidOnly": true, "status": "ac", "title": "Undefined to Null", "topicTags": [], "titleSlug": "undefined-to-null", "content": "<p>Given a deeply nested object or array <code>obj</code>, return the object <code>obj</code> with any <code>undefined</code> values replaced by <code>null</code>.</p>\n\n<p><code>undefined</code> values are handled differently than <code>null</code> values when objects are converted to a JSON string using <code>JSON.stringify()</code>. This function helps ensure serialized data is free of unexpected errors.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> obj = {&quot;a&quot;: undefined, &quot;b&quot;: 3}\n<strong>Output:</strong> {&quot;a&quot;: null, &quot;b&quot;: 3}\n<strong>Explanation:</strong> The value for obj.a has been changed from undefined to null\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> obj = {&quot;a&quot;: undefined, &quot;b&quot;: [&quot;a&quot;, undefined]}\n<strong>Output:</strong> {&quot;a&quot;: null,&quot;b&quot;: [&quot;a&quot;, null]}\n<strong>Explanation:</strong> The values for obj.a and obj.b[1] have been changed from undefined to null\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>obj</code> is a valid JSON object or array</li>\n\t<li><code>2 &lt;= JSON.stringify(obj).length &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "hints": [], "exampleTestcases": "{\"a\": undefined, \"b\":3}\n{\"a\": undefined, \"b\":[\"a\", undefined]}", "codeSnippets": [{"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {Object|Array} obj\n * @return {Object|Array}\n */\nvar undefinedToNull = function(obj) {\n    \n};\n\n/**\n * undefinedToNull({\"a\": undefined, \"b\": 3}) // {\"a\": null, \"b\": 3}\n * undefinedToNull([undefined, undefined]) // [null, null] \n */"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype Value = undefined | null | boolean | number | string | Value[] | { [key: string]: Value };\n\ntype Obj1 = Record<string, Value> | Array<Value>\ntype Obj2 = Record<string, JSONValue> | Array<JSONValue>\n\nfunction undefinedToNull(obj: Obj1): Obj2 {\n    \n};\n\n/**\n * undefinedToNull({\"a\": undefined, \"b\": 3}) // {\"a\": null, \"b\": 3}\n * undefinedToNull([undefined, undefined]) // [null, null] \n */"}], "similarQuestionList": []}