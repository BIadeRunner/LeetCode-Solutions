{"questionId": "2369", "acRate": 61.816687217427045, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2219", "paidOnly": true, "status": "ac", "title": "Maximum Sum Score of Array", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Prefix Sum", "id": "VG9waWNUYWdOb2RlOjYxMDY4", "slug": "prefix-sum"}], "titleSlug": "maximum-sum-score-of-array", "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of length <code>n</code>.</p>\n\n<p>The <strong>sum </strong><strong>score</strong> of <code>nums</code> at an index <code>i</code> where <code>0 &lt;= i &lt; n</code> is the <strong>maximum</strong> of:</p>\n\n<ul>\n\t<li>The sum of the <strong>first</strong> <code>i + 1</code> elements of <code>nums</code>.</li>\n\t<li>The sum of the <strong>last</strong> <code>n - i</code> elements of <code>nums</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum</strong> <strong>sum </strong><strong>score</strong> of </em><code>nums</code><em> at any index.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,3,-2,5]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong>\nThe sum score at index 0 is max(4, 4 + 3 + -2 + 5) = max(4, 10) = 10.\nThe sum score at index 1 is max(4 + 3, 3 + -2 + 5) = max(7, 6) = 7.\nThe sum score at index 2 is max(4 + 3 + -2, -2 + 5) = max(5, 3) = 5.\nThe sum score at index 3 is max(4 + 3 + -2 + 5, 5) = max(10, 5) = 10.\nThe maximum sum score of nums is 10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-3,-5]\n<strong>Output:</strong> -3\n<strong>Explanation:</strong>\nThe sum score at index 0 is max(-3, -3 + -5) = max(-3, -8) = -3.\nThe sum score at index 1 is max(-3 + -5, -5) = max(-8, -5) = -5.\nThe maximum sum score of nums is -3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "hints": ["How can we use precalculation to efficiently calculate the average difference at an index?", "Create a prefix and/or suffix sum array."], "exampleTestcases": "[4,3,-2,5]\n[-3,-5]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    long long maximumSumScore(vector<int>& nums) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public long maximumSumScore(int[] nums) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def maximumSumScore(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def maximumSumScore(self, nums: List[int]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "long long maximumSumScore(int* nums, int numsSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public long MaximumSumScore(int[] nums) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maximumSumScore = function(nums) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function maximumSumScore(nums: number[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maximumSumScore($nums) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func maximumSumScore(_ nums: [Int]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun maximumSumScore(nums: IntArray): Long {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int maximumSumScore(List<int> nums) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func maximumSumScore(nums []int) int64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef maximum_sum_score(nums)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def maximumSumScore(nums: Array[Int]): Long = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn maximum_sum_score(nums: Vec<i32>) -> i64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (maximum-sum-score nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec maximum_sum_score(Nums :: [integer()]) -> integer().\nmaximum_sum_score(Nums) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec maximum_sum_score(nums :: [integer]) :: integer\n  def maximum_sum_score(nums) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "subarray-sum-equals-k", "title": "Subarray Sum Equals K", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "find-pivot-index", "title": "Find Pivot Index", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "find-the-middle-index-in-array", "title": "Find the Middle Index in Array", "isPaidOnly": false}]}