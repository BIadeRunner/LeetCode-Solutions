{"questionId": "2907", "acRate": 89.28238583410997, "difficulty": "Easy", "freqBar": 0.0, "frontendQuestionId": "2804", "paidOnly": true, "status": "ac", "title": "Array Prototype ForEach", "topicTags": [], "titleSlug": "array-prototype-foreach", "content": "<p>Write your version of method&nbsp;<code>forEach</code>&nbsp;that enhances all arrays such that you can call the&nbsp;<code>array.forEach(callback, context)</code>&nbsp;method on any array and it will execute <code>callback</code> on each element of the array.&nbsp;Method&nbsp;<code>forEach</code> should not return anything.</p>\n\n<p><code>callback</code> accepts the following arguments:</p>\n\n<ul>\n\t<li><code>currentValue</code> -&nbsp;represents the current element being processed in the array. It is the value of the element in the current iteration.</li>\n\t<li><code>index</code> -&nbsp;represents the index of the current element being processed in the array.</li>\n\t<li><code>array</code> -&nbsp;represents the array itself, allowing access to the entire array within the callback function.</li>\n</ul>\n\n<p>The <code>context</code> is the object that should be passed as the function context parameter to the <code>callback</code> function, ensuring that the <code>this</code>&nbsp;keyword within the <code>callback</code> function refers to this <code>context</code> object.</p>\n\n<p>Try to implement it without using the built-in array methods.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \narr = [1,2,3], \ncallback = (val, i, arr) =&gt; arr[i] = val * 2, \ncontext = {&quot;context&quot;:true}\n<strong>Output:</strong> [2,4,6]\n<strong>Explanation:</strong> \narr.forEach(callback, context)&nbsp; \nconsole.log(arr) // [2,4,6]\n\nThe callback is executed on each element of the array.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \narr = [true, true, false, false], \ncallback = (val, i, arr) =&gt; arr[i] = this, \ncontext = {&quot;context&quot;: false}\n<strong>Output:</strong> [{&quot;context&quot;:false},{&quot;context&quot;:false},{&quot;context&quot;:false},{&quot;context&quot;:false}]\n<strong>Explanation:</strong> \narr.forEach(callback, context)&nbsp;\nconsole.log(arr) // [{&quot;context&quot;:false},{&quot;context&quot;:false},{&quot;context&quot;:false},{&quot;context&quot;:false}]\n\nThe callback is executed on each element of the array with the right context.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> \narr = [true, true, false, false], \ncallback = (val, i, arr) =&gt; arr[i] = !val, \ncontext = {&quot;context&quot;: 5}\n<strong>Output:</strong> [false,false,true,true]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>arr</code> is a valid JSON array</li>\n\t<li><code>context</code> is a valid JSON object</li>\n\t<li><code>fn</code> is a function</li>\n\t<li><code>0 &lt;= arr.length &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "hints": [], "exampleTestcases": "[1,2,3]\nfunction(val, i, arr){ arr[i] = val * 2 }\n{\"context\": true}\n[true, true, false, false]\nfunction(val, i, arr){ arr[i] = this }\n{\"context\": false}\n[true, true, false, false]\nfunction(val, i, arr){ arr[i] = !val }\n{\"context\": 5}", "codeSnippets": [{"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {Function} callback\n * @param {Object} context\n * @return {void}\n */\nArray.prototype.forEach = function(callback, context) {\n    \n}\n\n/**\n *  const arr = [1,2,3];\n *  const callback = (val, i, arr) => arr[i] = val * 2;\n *  const context = {\"context\":true};\n *\n *  arr.forEach(callback, context)\u00a0 \n *\n *  console.log(arr) // [2,4,6]\n */"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype Callback = (currentValue: JSONValue, index: number, array: JSONValue[]) => any\ntype Context = Record<string, JSONValue>\n\nArray.prototype.forEach = function(callback: Callback, context: Context): void {\n    \n}\n\n/**\n *  const arr = [1,2,3];\n *  const callback = (val, i, arr) => arr[i] = val * 2;\n *  const context = {\"context\":true};\n *\n *  arr.forEach(callback, context)\u00a0 \n *\n *  console.log(arr) // [2,4,6]\n */"}], "similarQuestionList": []}