{"question_id": "2528", "problem_slug": "number-of-valid-clock-times", "problem_title": "Number of Valid Clock Times", "content": "You are given a string of length 5 called time, representing the current time on a digital clock in the format \"hh:mm\". The earliest possible time is \"00:00\" and the latest possible time is \"23:59\".\nIn the string time, the digits represented by the ? symbol are unknown, and must be replaced with a digit from 0 to 9.\nReturn an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\n \nExample 1:\n\nInput: time = \"?5:00\"\nOutput: 2\nExplanation: We can replace the ? with either a 0 or 1, producing \"05:00\" or \"15:00\". Note that we cannot replace it with a 2, since the time \"25:00\" is invalid. In total, we have two choices.\n\nExample 2:\n\nInput: time = \"0?:0?\"\nOutput: 100\nExplanation: Each ? can be replaced by any digit from 0 to 9, so we have 100 total choices.\n\nExample 3:\n\nInput: time = \"??:??\"\nOutput: 1440\nExplanation: There are 24 possible choices for the hours, and 60 possible choices for the minutes. In total, we have 24 * 60 = 1440 choices.\n\n \nConstraints:\n\ntime is a valid string of length 5 in the format \"hh:mm\".\n\"00\" <= hh <= \"23\"\n\"00\" <= mm <= \"59\"\nSome of the digits might be replaced with '?' and need to be replaced with digits from 0 to 9.\n\n", "hints": ["Brute force all possible clock times.", "Checking if a clock time is valid can be done with Regex."], "exampleTestcases": "\"?5:00\"\n\"0?:0?\"\n\"??:??\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int countTime(string time) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int countTime(String time) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def countTime(self, time):\n        \"\"\"\n        :type time: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def countTime(self, time: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int countTime(char* time) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int CountTime(string time) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} time\n * @return {number}\n */\nvar countTime = function(time) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function countTime(time: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $time\n     * @return Integer\n     */\n    function countTime($time) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func countTime(_ time: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun countTime(time: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int countTime(String time) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func countTime(time string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} time\n# @return {Integer}\ndef count_time(time)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def countTime(time: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn count_time(time: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (count-time time)\n  (-> string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec count_time(Time :: unicode:unicode_binary()) -> integer().\ncount_time(Time) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_time(time :: String.t) :: integer\n  def count_time(time) do\n    \n  end\nend"}}}