{"questionId": "2727", "acRate": 81.6699745268718, "difficulty": "Easy", "freqBar": 76.34981502962285, "frontendQuestionId": "2678", "paidOnly": false, "status": "ac", "title": "Number of Senior Citizens", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "number-of-senior-citizens", "content": "<p>You are given a <strong>0-indexed</strong> array of strings <code>details</code>. Each element of <code>details</code> provides information about a given passenger compressed into a string of length <code>15</code>. The system is such that:</p>\n\n<ul>\n\t<li>The first ten characters consist of the phone number of passengers.</li>\n\t<li>The next character denotes the gender of the person.</li>\n\t<li>The following two characters are used to indicate the age of the person.</li>\n\t<li>The last two characters determine the seat allotted to that person.</li>\n</ul>\n\n<p>Return <em>the number of passengers who are <strong>strictly </strong><strong>more than 60 years old</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> details = [&quot;7868190130M7522&quot;,&quot;5303914400F9211&quot;,&quot;9273338290F4010&quot;]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The passengers at indices 0, 1, and 2 have ages 75, 92, and 40. Thus, there are 2 people who are over 60 years old.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> details = [&quot;1313579440F2036&quot;,&quot;2921522980M5644&quot;]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> None of the passengers are older than 60.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= details.length &lt;= 100</code></li>\n\t<li><code>details[i].length == 15</code></li>\n\t<li><code>details[i] consists of digits from &#39;0&#39; to &#39;9&#39;.</code></li>\n\t<li><code>details[i][10] is either &#39;M&#39; or &#39;F&#39; or &#39;O&#39;.</code></li>\n\t<li>The phone numbers and seat numbers of the passengers are distinct.</li>\n</ul>\n", "hints": ["Convert the value at index 11 and 12 to a numerical value.", "The age of the person at index i is equal to details[i][11]*10+details[i][12]."], "exampleTestcases": "[\"7868190130M7522\",\"5303914400F9211\",\"9273338290F4010\"]\n[\"1313579440F2036\",\"2921522980M5644\"]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int countSeniors(vector<string>& details) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int countSeniors(String[] details) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def countSeniors(self, details):\n        \"\"\"\n        :type details: List[str]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def countSeniors(self, details: List[str]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int countSeniors(char** details, int detailsSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int CountSeniors(string[] details) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string[]} details\n * @return {number}\n */\nvar countSeniors = function(details) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function countSeniors(details: string[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String[] $details\n     * @return Integer\n     */\n    function countSeniors($details) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func countSeniors(_ details: [String]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun countSeniors(details: Array<String>): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int countSeniors(List<String> details) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func countSeniors(details []string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String[]} details\n# @return {Integer}\ndef count_seniors(details)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def countSeniors(details: Array[String]): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn count_seniors(details: Vec<String>) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (count-seniors details)\n  (-> (listof string?) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec count_seniors(Details :: [unicode:unicode_binary()]) -> integer().\ncount_seniors(Details) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_seniors(details :: [String.t]) :: integer\n  def count_seniors(details) do\n    \n  end\nend"}], "similarQuestionList": []}