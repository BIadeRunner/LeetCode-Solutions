{"question_id": "3487", "problem_slug": "find-maximum-removals-from-source-string", "problem_title": "Find Maximum Removals From Source String", "content": "You are given a string source of size n, a string pattern that is a subsequence of source, and a sorted integer array targetIndices that contains distinct numbers in the range [0, n - 1].\nWe define an operation as removing a character at an index idx from source such that:\n\nidx is an element of targetIndices.\npattern remains a subsequence of source after removing the character.\n\nPerforming an operation does not change the indices of the other characters in source. For example, if you remove 'c' from \"acb\", the character at index 2 would still be 'b'.\nReturn the maximum number of operations that can be performed.\n \nExample 1:\n\nInput: source = \"abbaa\", pattern = \"aba\", targetIndices = [0,1,2]\nOutput: 1\nExplanation:\nWe can't remove source[0] but we can do either of these two operations:\n\nRemove source[1], so that source becomes \"a_baa\".\nRemove source[2], so that source becomes \"ab_aa\".\n\n\nExample 2:\n\nInput: source = \"bcda\", pattern = \"d\", targetIndices = [0,3]\nOutput: 2\nExplanation:\nWe can remove source[0] and source[3] in two operations.\n\nExample 3:\n\nInput: source = \"dda\", pattern = \"dda\", targetIndices = [0,1,2]\nOutput: 0\nExplanation:\nWe can't remove any character from source.\n\nExample 4:\n\nInput: source = \"yeyeykyded\", pattern = \"yeyyd\", targetIndices = [0,2,3,4]\nOutput: 2\nExplanation:\nWe can remove source[2] and source[3] in two operations.\n\n \nConstraints:\n\n1 <= n == source.length <= 3 * 103\n1 <= pattern.length <= n\n1 <= targetIndices.length <= n\ntargetIndices is sorted in ascending order.\nThe input is generated such that targetIndices contains distinct elements in the range [0, n - 1].\nsource and pattern consist only of lowercase English letters.\nThe input is generated such that pattern appears as a subsequence in source.\n\n", "hints": ["Use dynamic programming.", "At each index in <code>targetIndices</code>, make the choice to remove or not remove the character."], "exampleTestcases": "\"abbaa\"\n\"aba\"\n[0,1,2]\n\"bcda\"\n\"d\"\n[0,3]\n\"dda\"\n\"dda\"\n[0,1,2]\n\"yeyeykyded\"\n\"yeyyd\"\n[0,2,3,4]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int maxRemovals(string source, string pattern, vector<int>& targetIndices) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int maxRemovals(String source, String pattern, int[] targetIndices) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def maxRemovals(self, source, pattern, targetIndices):\n        \"\"\"\n        :type source: str\n        :type pattern: str\n        :type targetIndices: List[int]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def maxRemovals(self, source: str, pattern: str, targetIndices: List[int]) -> int:\n        "}, "C": {"langSlug": "c", "code": "int maxRemovals(char* source, char* pattern, int* targetIndices, int targetIndicesSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int MaxRemovals(string source, string pattern, int[] targetIndices) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} source\n * @param {string} pattern\n * @param {number[]} targetIndices\n * @return {number}\n */\nvar maxRemovals = function(source, pattern, targetIndices) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function maxRemovals(source: string, pattern: string, targetIndices: number[]): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $source\n     * @param String $pattern\n     * @param Integer[] $targetIndices\n     * @return Integer\n     */\n    function maxRemovals($source, $pattern, $targetIndices) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func maxRemovals(_ source: String, _ pattern: String, _ targetIndices: [Int]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun maxRemovals(source: String, pattern: String, targetIndices: IntArray): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int maxRemovals(String source, String pattern, List<int> targetIndices) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func maxRemovals(source string, pattern string, targetIndices []int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} source\n# @param {String} pattern\n# @param {Integer[]} target_indices\n# @return {Integer}\ndef max_removals(source, pattern, target_indices)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def maxRemovals(source: String, pattern: String, targetIndices: Array[Int]): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn max_removals(source: String, pattern: String, target_indices: Vec<i32>) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (max-removals source pattern targetIndices)\n  (-> string? string? (listof exact-integer?) exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec max_removals(Source :: unicode:unicode_binary(), Pattern :: unicode:unicode_binary(), TargetIndices :: [integer()]) -> integer().\nmax_removals(Source, Pattern, TargetIndices) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_removals(source :: String.t, pattern :: String.t, target_indices :: [integer]) :: integer\n  def max_removals(source, pattern, target_indices) do\n    \n  end\nend"}}}