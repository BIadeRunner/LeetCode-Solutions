{"question_id": "2369", "problem_slug": "maximum-sum-score-of-array", "problem_title": "Maximum Sum Score of Array", "content": "You are given a 0-indexed integer array nums of length n.\nThe sum score of nums at an index i where 0 <= i < n is the maximum of:\n\nThe sum of the first i + 1 elements of nums.\nThe sum of the last n - i elements of nums.\n\nReturn the maximum sum score of nums at any index.\n \nExample 1:\n\nInput: nums = [4,3,-2,5]\nOutput: 10\nExplanation:\nThe sum score at index 0 is max(4, 4 + 3 + -2 + 5) = max(4, 10) = 10.\nThe sum score at index 1 is max(4 + 3, 3 + -2 + 5) = max(7, 6) = 7.\nThe sum score at index 2 is max(4 + 3 + -2, -2 + 5) = max(5, 3) = 5.\nThe sum score at index 3 is max(4 + 3 + -2 + 5, 5) = max(10, 5) = 10.\nThe maximum sum score of nums is 10.\n\nExample 2:\n\nInput: nums = [-3,-5]\nOutput: -3\nExplanation:\nThe sum score at index 0 is max(-3, -3 + -5) = max(-3, -8) = -3.\nThe sum score at index 1 is max(-3 + -5, -5) = max(-8, -5) = -5.\nThe maximum sum score of nums is -3.\n\n \nConstraints:\n\nn == nums.length\n1 <= n <= 105\n-105 <= nums[i] <= 105\n\n", "hints": ["How can we use precalculation to efficiently calculate the average difference at an index?", "Create a prefix and/or suffix sum array."], "exampleTestcases": "[4,3,-2,5]\n[-3,-5]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    long long maximumSumScore(vector<int>& nums) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public long maximumSumScore(int[] nums) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def maximumSumScore(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def maximumSumScore(self, nums: List[int]) -> int:\n        "}, "C": {"langSlug": "c", "code": "long long maximumSumScore(int* nums, int numsSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public long MaximumSumScore(int[] nums) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maximumSumScore = function(nums) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function maximumSumScore(nums: number[]): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maximumSumScore($nums) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func maximumSumScore(_ nums: [Int]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun maximumSumScore(nums: IntArray): Long {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int maximumSumScore(List<int> nums) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func maximumSumScore(nums []int) int64 {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef maximum_sum_score(nums)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def maximumSumScore(nums: Array[Int]): Long = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn maximum_sum_score(nums: Vec<i32>) -> i64 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (maximum-sum-score nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec maximum_sum_score(Nums :: [integer()]) -> integer().\nmaximum_sum_score(Nums) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec maximum_sum_score(nums :: [integer]) :: integer\n  def maximum_sum_score(nums) do\n    \n  end\nend"}}}