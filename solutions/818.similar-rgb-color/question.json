{"questionId": "818", "acRate": 67.65213390083976, "difficulty": "Easy", "freqBar": 0.0, "frontendQuestionId": "800", "paidOnly": true, "status": "ac", "title": "Similar RGB Color", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Enumeration", "id": "VG9waWNUYWdOb2RlOjYxMDY2", "slug": "enumeration"}], "titleSlug": "similar-rgb-color", "content": "<p>The red-green-blue color <code>&quot;#AABBCC&quot;</code> can be written as <code>&quot;#ABC&quot;</code> in shorthand.</p>\n\n<ul>\n\t<li>For example, <code>&quot;#15c&quot;</code> is shorthand for the color <code>&quot;#1155cc&quot;</code>.</li>\n</ul>\n\n<p>The similarity between the two colors <code>&quot;#ABCDEF&quot;</code> and <code>&quot;#UVWXYZ&quot;</code> is <code>-(AB - UV)<sup>2</sup> - (CD - WX)<sup>2</sup> - (EF - YZ)<sup>2</sup></code>.</p>\n\n<p>Given a string <code>color</code> that follows the format <code>&quot;#ABCDEF&quot;</code>, return a string represents the color that is most similar to the given color and has a shorthand (i.e., it can be represented as some <code>&quot;#XYZ&quot;</code>).</p>\n\n<p><strong>Any answer</strong> which has the same highest similarity as the best answer will be accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> color = &quot;#09f166&quot;\n<strong>Output:</strong> &quot;#11ee66&quot;\n<strong>Explanation:</strong> \nThe similarity is -(0x09 - 0x11)<sup>2</sup> -(0xf1 - 0xee)<sup>2</sup> - (0x66 - 0x66)<sup>2</sup> = -64 -9 -0 = -73.\nThis is the highest among any shorthand color.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> color = &quot;#4e3fe1&quot;\n<strong>Output:</strong> &quot;#5544dd&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>color.length == 7</code></li>\n\t<li><code>color[0] == &#39;#&#39;</code></li>\n\t<li><code>color[i]</code> is either digit or character in the range <code>[&#39;a&#39;, &#39;f&#39;]</code> for <code>i &gt; 0</code>.</li>\n</ul>\n", "hints": [], "exampleTestcases": "\"#09f166\"\n\"#4e3fe1\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string similarRGB(string color) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String similarRGB(String color) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def similarRGB(self, color):\n        \"\"\"\n        :type color: str\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def similarRGB(self, color: str) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* similarRGB(char* color) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string SimilarRGB(string color) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} color\n * @return {string}\n */\nvar similarRGB = function(color) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function similarRGB(color: string): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $color\n     * @return String\n     */\n    function similarRGB($color) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func similarRGB(_ color: String) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun similarRGB(color: String): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String similarRGB(String color) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func similarRGB(color string) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} color\n# @return {String}\ndef similar_rgb(color)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def similarRGB(color: String): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn similar_rgb(color: String) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (similar-rgb color)\n  (-> string? string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec similar_rgb(Color :: unicode:unicode_binary()) -> unicode:unicode_binary().\nsimilar_rgb(Color) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec similar_rgb(color :: String.t) :: String.t\n  def similar_rgb(color) do\n    \n  end\nend"}], "similarQuestionList": []}