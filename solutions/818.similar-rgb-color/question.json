{"question_id": "818", "problem_slug": "similar-rgb-color", "problem_title": "Similar RGB Color", "content": "The red-green-blue color \"#AABBCC\" can be written as \"#ABC\" in shorthand.\n\nFor example, \"#15c\" is shorthand for the color \"#1155cc\".\n\nThe similarity between the two colors \"#ABCDEF\" and \"#UVWXYZ\" is -(AB - UV)2 - (CD - WX)2 - (EF - YZ)2.\nGiven a string color that follows the format \"#ABCDEF\", return a string represents the color that is most similar to the given color and has a shorthand (i.e., it can be represented as some \"#XYZ\").\nAny answer which has the same highest similarity as the best answer will be accepted.\n \nExample 1:\n\nInput: color = \"#09f166\"\nOutput: \"#11ee66\"\nExplanation: \nThe similarity is -(0x09 - 0x11)2 -(0xf1 - 0xee)2 - (0x66 - 0x66)2 = -64 -9 -0 = -73.\nThis is the highest among any shorthand color.\n\nExample 2:\n\nInput: color = \"#4e3fe1\"\nOutput: \"#5544dd\"\n\n \nConstraints:\n\ncolor.length == 7\ncolor[0] == '#'\ncolor[i] is either digit or character in the range ['a', 'f'] for i > 0.\n\n", "hints": [], "exampleTestcases": "\"#09f166\"\n\"#4e3fe1\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string similarRGB(string color) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String similarRGB(String color) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def similarRGB(self, color):\n        \"\"\"\n        :type color: str\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def similarRGB(self, color: str) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* similarRGB(char* color) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string SimilarRGB(string color) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} color\n * @return {string}\n */\nvar similarRGB = function(color) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function similarRGB(color: string): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $color\n     * @return String\n     */\n    function similarRGB($color) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func similarRGB(_ color: String) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun similarRGB(color: String): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String similarRGB(String color) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func similarRGB(color string) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} color\n# @return {String}\ndef similar_rgb(color)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def similarRGB(color: String): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn similar_rgb(color: String) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (similar-rgb color)\n  (-> string? string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec similar_rgb(Color :: unicode:unicode_binary()) -> unicode:unicode_binary().\nsimilar_rgb(Color) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec similar_rgb(color :: String.t) :: String.t\n  def similar_rgb(color) do\n    \n  end\nend"}}}