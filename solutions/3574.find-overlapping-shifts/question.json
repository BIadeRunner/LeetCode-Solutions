{"question_id": "3574", "problem_slug": "find-overlapping-shifts", "problem_title": "Find Overlapping Shifts", "content": "Table: EmployeeShifts\n\n+------------------+---------+\n| Column Name      | Type    |\n+------------------+---------+\n| employee_id      | int     |\n| start_time       | time    |\n| end_time         | time    |\n+------------------+---------+\n(employee_id, start_time) is the unique key for this table.\nThis table contains information about the shifts worked by employees, including the start and end times on a specific date.\n\nWrite a solution to count the number of overlapping shifts for each employee. Two shifts are considered overlapping if one shift’s end_time is later than another shift’s start_time.\nReturn the result table ordered by employee_id in ascending order.\nThe query result format is in the following example.\n \nExample:\n\nInput:\nEmployeeShifts table:\n\n+-------------+------------+----------+\n| employee_id | start_time | end_time |\n+-------------+------------+----------+\n| 1           | 08:00:00   | 12:00:00 |\n| 1           | 11:00:00   | 15:00:00 |\n| 1           | 14:00:00   | 18:00:00 |\n| 2           | 09:00:00   | 17:00:00 |\n| 2           | 16:00:00   | 20:00:00 |\n| 3           | 10:00:00   | 12:00:00 |\n| 3           | 13:00:00   | 15:00:00 |\n| 3           | 16:00:00   | 18:00:00 |\n| 4           | 08:00:00   | 10:00:00 |\n| 4           | 09:00:00   | 11:00:00 |\n+-------------+------------+----------+\n\nOutput:\n\n+-------------+--------------------+\n| employee_id | overlapping_shifts |\n+-------------+--------------------+\n| 1           | 2                  |\n| 2           | 1                  |\n| 4           | 1                  |\n+-------------+--------------------+\n\nExplanation:\n\nEmployee 1 has 3 shifts:\n\t\n08:00:00 to 12:00:00\n11:00:00 to 15:00:00\n14:00:00 to 18:00:00\n\n\tThe first shift overlaps with the second, and the second overlaps with the third, resulting in 2 overlapping shifts.\nEmployee 2 has 2 shifts:\n\t\n09:00:00 to 17:00:00\n16:00:00 to 20:00:00\n\n\tThese shifts overlap with each other, resulting in 1 overlapping shift.\nEmployee 3 has 3 shifts:\n\t\n10:00:00 to 12:00:00\n13:00:00 to 15:00:00\n16:00:00 to 18:00:00\n\n\tNone of these shifts overlap, so Employee 3 is not included in the output.\nEmployee 4 has 2 shifts:\n\t\n08:00:00 to 10:00:00\n09:00:00 to 11:00:00\n\n\tThese shifts overlap with each other, resulting in 1 overlapping shift.\n\nThe output shows the employee_id and the count of overlapping shifts for each employee who has at least one overlapping shift, ordered by employee_id in ascending order.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"EmployeeShifts\":[\"employee_id\",\"start_time\",\"end_time\"]},\"rows\":{\"EmployeeShifts\":[[1,\"08:00:00\",\"12:00:00\"],[1,\"11:00:00\",\"15:00:00\"],[1,\"14:00:00\",\"18:00:00\"],[2,\"09:00:00\",\"17:00:00\"],[2,\"16:00:00\",\"20:00:00\"],[3,\"10:00:00\",\"12:00:00\"],[3,\"13:00:00\",\"15:00:00\"],[3,\"16:00:00\",\"18:00:00\"],[4,\"08:00:00\",\"10:00:00\"],[4,\"09:00:00\",\"11:00:00\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_overlapping_shifts(employee_shifts: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}