{"questionId": "1189", "acRate": 69.99560052793666, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "1256", "paidOnly": true, "status": "ac", "title": "Encode Number", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Bit Manipulation", "id": "VG9waWNUYWdOb2RlOjE5", "slug": "bit-manipulation"}], "titleSlug": "encode-number", "content": "<p>Given a non-negative integer <code>num</code>, Return its <em>encoding</em> string.</p>\r\n\r\n<p>The encoding is done by converting the integer to a string using a secret function that you should deduce from the following table:</p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/06/21/encode_number.png\" style=\"width: 164px; height: 360px;\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> num = 23\r\n<strong>Output:</strong> &quot;1000&quot;\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> num = 107\r\n<strong>Output:</strong> &quot;101100&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= num &lt;= 10^9</code></li>\r\n</ul>", "hints": ["Try to find the number of binary digits returned by the function.", "The pattern is to start counting from zero after determining the number of binary digits."], "exampleTestcases": "23\n107", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string encode(int num) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String encode(int num) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def encode(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def encode(self, num: int) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "\n\nchar * encode(int num){\n\n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string Encode(int num) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} num\n * @return {string}\n */\nvar encode = function(num) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function encode(num: number): string {\n\n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $num\n     * @return String\n     */\n    function encode($num) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func encode(_ num: Int) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun encode(num: Int): String {\n        \n    }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func encode(num int) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} num\n# @return {String}\ndef encode(num)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def encode(num: Int): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn encode(num: i32) -> String {\n        \n    }\n}"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "convert-to-base-2", "title": "Convert to Base -2", "isPaidOnly": false}]}