{"question_id": "2901", "problem_slug": "factorial-generator", "problem_title": "Factorial Generator", "content": "Write a generator function that takes an integer n as an argument and returns a generator object which yields the factorial sequence.\nThe factorial sequence is defined by the relation n! = n * (n-1) * (n-2) * ... * 2 * 1​​​.\nThe factorial of 0 is defined as 1.\n \nExample 1:\n\nInput: n = 5\nOutput: [1,2,6,24,120]\nExplanation: \nconst gen = factorial(5)\ngen.next().value // 1\ngen.next().value // 2\ngen.next().value // 6\ngen.next().value // 24\ngen.next().value // 120\n\nExample 2:\n\nInput: n = 2\nOutput: [1,2]\nExplanation: \nconst gen = factorial(2) \ngen.next().value // 1 \ngen.next().value // 2 \n\nExample 3:\n\nInput: n = 0\nOutput: [1]\nExplanation: \nconst gen = factorial(0) \ngen.next().value // 1 \n\n \nConstraints:\n\n0 <= n <= 18\n\n", "hints": [], "exampleTestcases": "5\n2\n0", "codeSnippets": {"JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} n\n * @yields {number}\n */\nfunction* factorial(n) {\n    \n};\n\n/**\n * const gen = factorial(2);\n * gen.next().value; // 1\n * gen.next().value; // 2\n */"}, "TypeScript": {"langSlug": "typescript", "code": "function* factorial(n: number): Generator<number> {\n    \n};\n\n/**\n * const gen = factorial(2);\n * gen.next().value; // 1\n * gen.next().value; // 2\n */"}}}