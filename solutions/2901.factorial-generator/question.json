{"questionId": "2901", "acRate": 86.48648648648648, "difficulty": "Easy", "freqBar": 0.0, "frontendQuestionId": "2803", "paidOnly": true, "status": "ac", "title": "Factorial Generator", "topicTags": [], "titleSlug": "factorial-generator", "content": "<p>Write a generator function that takes an integer <code>n</code> as an argument and returns a generator object which yields the <strong>factorial sequence</strong>.</p>\n\n<p>The&nbsp;<strong>factorial sequence</strong>&nbsp;is defined by the relation <code>n!&nbsp;= n *&nbsp;<span style=\"font-size: 13px;\">(</span>n-1)&nbsp;* (n-2)&nbsp;*&nbsp;...&nbsp;* 2 * 1\u200b\u200b\u200b.</code></p>\n\n<p>The factorial of 0 is defined as 1.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> [1,2,6,24,120]\n<strong>Explanation:</strong> \nconst gen = factorial(5)\ngen.next().value // 1\ngen.next().value // 2\ngen.next().value // 6\ngen.next().value // 24\ngen.next().value // 120\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> \nconst gen = factorial(2) \ngen.next().value // 1 \ngen.next().value // 2 \n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> \nconst gen = factorial(0) \ngen.next().value // 1 \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 18</code></li>\n</ul>\n", "hints": [], "exampleTestcases": "5\n2\n0", "codeSnippets": [{"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} n\n * @yields {number}\n */\nfunction* factorial(n) {\n    \n};\n\n/**\n * const gen = factorial(2);\n * gen.next().value; // 1\n * gen.next().value; // 2\n */"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function* factorial(n: number): Generator<number> {\n    \n};\n\n/**\n * const gen = factorial(2);\n * gen.next().value; // 1\n * gen.next().value; // 2\n */"}], "similarQuestionList": []}