{"question_id": "246", "problem_slug": "strobogrammatic-number", "problem_title": "Strobogrammatic Number", "content": "Given a string num which represents an integer, return true if num is a strobogrammatic number.\nA strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).\n \nExample 1:\n\nInput: num = \"69\"\nOutput: true\n\nExample 2:\n\nInput: num = \"88\"\nOutput: true\n\nExample 3:\n\nInput: num = \"962\"\nOutput: false\n\n \nConstraints:\n\n1 <= num.length <= 50\nnum consists of only digits.\nnum does not contain any leading zeros except for zero itself.\n\n", "hints": [], "exampleTestcases": "\"69\"\n\"88\"\n\"962\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    bool isStrobogrammatic(string num) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public boolean isStrobogrammatic(String num) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def isStrobogrammatic(self, num):\n        \"\"\"\n        :type num: str\n        :rtype: bool\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def isStrobogrammatic(self, num: str) -> bool:\n        "}, "C": {"langSlug": "c", "code": "bool isStrobogrammatic(char* num) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public bool IsStrobogrammatic(string num) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} num\n * @return {boolean}\n */\nvar isStrobogrammatic = function(num) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function isStrobogrammatic(num: string): boolean {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $num\n     * @return Boolean\n     */\n    function isStrobogrammatic($num) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func isStrobogrammatic(_ num: String) -> Bool {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun isStrobogrammatic(num: String): Boolean {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  bool isStrobogrammatic(String num) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func isStrobogrammatic(num string) bool {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} num\n# @return {Boolean}\ndef is_strobogrammatic(num)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def isStrobogrammatic(num: String): Boolean = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn is_strobogrammatic(num: String) -> bool {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (is-strobogrammatic num)\n  (-> string? boolean?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec is_strobogrammatic(Num :: unicode:unicode_binary()) -> boolean().\nis_strobogrammatic(Num) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec is_strobogrammatic(num :: String.t) :: boolean\n  def is_strobogrammatic(num) do\n    \n  end\nend"}}}