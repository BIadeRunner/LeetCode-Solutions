{"questionId": "3415", "acRate": 43.67191743617599, "difficulty": "Easy", "freqBar": 22.228174737275815, "frontendQuestionId": "3142", "paidOnly": false, "status": "ac", "title": "Check if Grid Satisfies Conditions", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Matrix", "id": "VG9waWNUYWdOb2RlOjYxMDUz", "slug": "matrix"}], "titleSlug": "check-if-grid-satisfies-conditions", "content": "<p>You are given a 2D matrix <code>grid</code> of size <code>m x n</code>. You need to check if each cell <code>grid[i][j]</code> is:</p>\n\n<ul>\n\t<li>Equal to the cell below it, i.e. <code>grid[i][j] == grid[i + 1][j]</code> (if it exists).</li>\n\t<li>Different from the cell to its right, i.e. <code>grid[i][j] != grid[i][j + 1]</code> (if it exists).</li>\n</ul>\n\n<p>Return <code>true</code> if <strong>all</strong> the cells satisfy these conditions, otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">grid = [[1,0,2],[1,0,2]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/04/15/examplechanged.png\" style=\"width: 254px; height: 186px;padding: 10px; background: #fff; border-radius: .5rem;\" /></strong></p>\n\n<p>All the cells in the grid satisfy the conditions.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">grid = [[1,1,1],[0,0,0]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/03/27/example21.png\" style=\"width: 254px; height: 186px;padding: 10px; background: #fff; border-radius: .5rem;\" /></strong></p>\n\n<p>All cells in the first row are equal.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">grid = [[1],[2],[3]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/03/31/changed.png\" style=\"width: 86px; height: 277px;padding: 10px; background: #fff; border-radius: .5rem;\" /></p>\n\n<p>Cells in the first column have different values.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, m &lt;= 10</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 9</code></li>\n</ul>\n", "hints": ["Check if each column has same value in each cell.", "If the previous condition is satisfied, we can simply check the first cells in adjacent columns."], "exampleTestcases": "[[1,0,2],[1,0,2]]\n[[1,1,1],[0,0,0]]\n[[1],[2],[3]]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    bool satisfiesConditions(vector<vector<int>>& grid) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public boolean satisfiesConditions(int[][] grid) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def satisfiesConditions(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: bool\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def satisfiesConditions(self, grid: List[List[int]]) -> bool:\n        "}, {"lang": "C", "langSlug": "c", "code": "bool satisfiesConditions(int** grid, int gridSize, int* gridColSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public bool SatisfiesConditions(int[][] grid) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} grid\n * @return {boolean}\n */\nvar satisfiesConditions = function(grid) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function satisfiesConditions(grid: number[][]): boolean {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $grid\n     * @return Boolean\n     */\n    function satisfiesConditions($grid) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func satisfiesConditions(_ grid: [[Int]]) -> Bool {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun satisfiesConditions(grid: Array<IntArray>): Boolean {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  bool satisfiesConditions(List<List<int>> grid) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func satisfiesConditions(grid [][]int) bool {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} grid\n# @return {Boolean}\ndef satisfies_conditions(grid)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def satisfiesConditions(grid: Array[Array[Int]]): Boolean = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn satisfies_conditions(grid: Vec<Vec<i32>>) -> bool {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (satisfies-conditions grid)\n  (-> (listof (listof exact-integer?)) boolean?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec satisfies_conditions(Grid :: [[integer()]]) -> boolean().\nsatisfies_conditions(Grid) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec satisfies_conditions(grid :: [[integer]]) :: boolean\n  def satisfies_conditions(grid) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Hard", "titleSlug": "candy", "title": "Candy", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "distribute-candies", "title": "Distribute Candies", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "minimum-cost-of-buying-candies-with-discount", "title": "Minimum Cost of Buying Candies With Discount", "isPaidOnly": false}]}