{"question_id": "1970", "problem_slug": "sorting-the-sentence", "problem_title": "Sorting the Sentence", "content": "A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters.\nA sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.\n\nFor example, the sentence \"This is a sentence\" can be shuffled as \"sentence4 a3 is2 This1\" or \"is2 sentence4 This1 a3\".\n\nGiven a shuffled sentence s containing no more than 9 words, reconstruct and return the original sentence.\n \nExample 1:\n\r\nInput: s = \"is2 sentence4 This1 a3\"\r\nOutput: \"This is a sentence\"\r\nExplanation: Sort the words in s to their original positions \"This1 is2 a3 sentence4\", then remove the numbers.\r\n\nExample 2:\n\r\nInput: s = \"Myself2 Me1 I4 and3\"\r\nOutput: \"Me Myself and I\"\r\nExplanation: Sort the words in s to their original positions \"Me1 Myself2 and3 I4\", then remove the numbers.\r\n\n \nConstraints:\n\n2 <= s.length <= 200\ns consists of lowercase and uppercase English letters, spaces, and digits from 1 to 9.\nThe number of words in s is between 1 and 9.\nThe words in s are separated by a single space.\ns contains no leading or trailing spaces.\n", "hints": ["Divide the string into the words as an array of strings", "Sort the words by removing the last character from each word and sorting according to it"], "exampleTestcases": "\"is2 sentence4 This1 a3\"\n\"Myself2 Me1 I4 and3\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string sortSentence(string s) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String sortSentence(String s) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def sortSentence(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def sortSentence(self, s: str) -> str:\n        "}, "C": {"langSlug": "c", "code": "\n\nchar * sortSentence(char * s){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string SortSentence(string s) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {string}\n */\nvar sortSentence = function(s) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function sortSentence(s: string): string {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function sortSentence($s) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func sortSentence(_ s: String) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun sortSentence(s: String): String {\n        \n    }\n}"}, "Go": {"langSlug": "golang", "code": "func sortSentence(s string) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} s\n# @return {String}\ndef sort_sentence(s)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def sortSentence(s: String): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn sort_sentence(s: String) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (sort-sentence s)\n  (-> string? string?)\n\n  )"}}}