{"question_id": "3422", "problem_slug": "find-the-n-th-value-after-k-seconds", "problem_title": "Find the N-th Value After K Seconds", "content": "You are given two integers n and k.\nInitially, you start with an array a of n integers where a[i] = 1 for all 0 <= i <= n - 1. After each second, you simultaneously update each element to be the sum of all its preceding elements plus the element itself. For example, after one second, a[0] remains the same, a[1] becomes a[0] + a[1], a[2] becomes a[0] + a[1] + a[2], and so on.\nReturn the value of a[n - 1] after k seconds.\nSince the answer may be very large, return it modulo 109 + 7.\n \nExample 1:\n\nInput: n = 4, k = 5\nOutput: 56\nExplanation:\n\n\n\nSecond\nState After\n\n\n0\n[1,1,1,1]\n\n\n1\n[1,2,3,4]\n\n\n2\n[1,3,6,10]\n\n\n3\n[1,4,10,20]\n\n\n4\n[1,5,15,35]\n\n\n5\n[1,6,21,56]\n\n\n\n\nExample 2:\n\nInput: n = 5, k = 3\nOutput: 35\nExplanation:\n\n\n\nSecond\nState After\n\n\n0\n[1,1,1,1,1]\n\n\n1\n[1,2,3,4,5]\n\n\n2\n[1,3,6,10,15]\n\n\n3\n[1,4,10,20,35]\n\n\n\n\n \nConstraints:\n\n1 <= n, k <= 1000\n\n", "hints": ["Calculate the prefix sum array of <code>nums</code>, <code>k</code> times."], "exampleTestcases": "4\n5\n5\n3", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int valueAfterKSeconds(int n, int k) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int valueAfterKSeconds(int n, int k) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def valueAfterKSeconds(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def valueAfterKSeconds(self, n: int, k: int) -> int:\n        "}, "C": {"langSlug": "c", "code": "int valueAfterKSeconds(int n, int k) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int ValueAfterKSeconds(int n, int k) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} n\n * @param {number} k\n * @return {number}\n */\nvar valueAfterKSeconds = function(n, k) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function valueAfterKSeconds(n: number, k: number): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return Integer\n     */\n    function valueAfterKSeconds($n, $k) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func valueAfterKSeconds(_ n: Int, _ k: Int) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun valueAfterKSeconds(n: Int, k: Int): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int valueAfterKSeconds(int n, int k) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func valueAfterKSeconds(n int, k int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} n\n# @param {Integer} k\n# @return {Integer}\ndef value_after_k_seconds(n, k)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def valueAfterKSeconds(n: Int, k: Int): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn value_after_k_seconds(n: i32, k: i32) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (value-after-k-seconds n k)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec value_after_k_seconds(N :: integer(), K :: integer()) -> integer().\nvalue_after_k_seconds(N, K) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec value_after_k_seconds(n :: integer, k :: integer) :: integer\n  def value_after_k_seconds(n, k) do\n    \n  end\nend"}}}