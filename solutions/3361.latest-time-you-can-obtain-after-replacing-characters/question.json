{"question_id": "3361", "problem_slug": "latest-time-you-can-obtain-after-replacing-characters", "problem_title": "Latest Time You Can Obtain After Replacing Characters", "content": "You are given a string s representing a 12-hour format time where some of the digits (possibly none) are replaced with a \"?\".\n12-hour times are formatted as \"HH:MM\", where HH is between 00 and 11, and MM is between 00 and 59. The earliest 12-hour time is 00:00, and the latest is 11:59.\nYou have to replace all the \"?\" characters in s with digits such that the time we obtain by the resulting string is a valid 12-hour format time and is the latest possible.\nReturn the resulting string.\n \nExample 1:\n\nInput: s = \"1?:?4\"\nOutput: \"11:54\"\nExplanation: The latest 12-hour format time we can achieve by replacing \"?\" characters is \"11:54\".\n\nExample 2:\n\nInput: s = \"0?:5?\"\nOutput: \"09:59\"\nExplanation: The latest 12-hour format time we can achieve by replacing \"?\" characters is \"09:59\".\n\n \nConstraints:\n\ns.length == 5\ns[2] is equal to the character \":\".\nAll characters except s[2] are digits or \"?\" characters.\nThe input is generated such that there is at least one time between \"00:00\" and \"11:59\" that you can obtain after replacing the \"?\" characters.\n\n", "hints": ["Try using a brute force approach.", "Iterate over all possible times that can be generated from the string and find the latest one."], "exampleTestcases": "\"1?:?4\"\n\"0?:5?\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string findLatestTime(string s) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String findLatestTime(String s) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def findLatestTime(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def findLatestTime(self, s: str) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* findLatestTime(char* s) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string FindLatestTime(string s) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {string}\n */\nvar findLatestTime = function(s) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function findLatestTime(s: string): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function findLatestTime($s) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func findLatestTime(_ s: String) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun findLatestTime(s: String): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String findLatestTime(String s) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func findLatestTime(s string) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} s\n# @return {String}\ndef find_latest_time(s)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def findLatestTime(s: String): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn find_latest_time(s: String) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (find-latest-time s)\n  (-> string? string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec find_latest_time(S :: unicode:unicode_binary()) -> unicode:unicode_binary().\nfind_latest_time(S) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec find_latest_time(s :: String.t) :: String.t\n  def find_latest_time(s) do\n    \n  end\nend"}}}