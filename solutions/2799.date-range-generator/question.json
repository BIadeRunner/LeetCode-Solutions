{"questionId": "2799", "acRate": 81.53241650294696, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2777", "paidOnly": true, "status": "ac", "title": "Date Range Generator", "topicTags": [], "titleSlug": "date-range-generator", "content": "<p>Given a start date <code>start</code>, an end date <code>end</code>, and a positive integer&nbsp;<code>step</code>, return a generator object that yields&nbsp;dates in the range from <code>start</code> to <code>end</code>&nbsp;inclusive.</p>\n\n<p>The value of&nbsp;<code>step</code>&nbsp;indicates the number of days between consecutive yielded values.</p>\n\n<p>All yielded dates&nbsp;must be in the string format&nbsp;<code>YYYY-MM-DD</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;2023-04-01&quot;, end = &quot;2023-04-04&quot;, step = 1\n<strong>Output:</strong> [&quot;2023-04-01&quot;,&quot;2023-04-02&quot;,&quot;2023-04-03&quot;,&quot;2023-04-04&quot;]\n<strong>Explanation:</strong> \nconst g = dateRangeGenerator(start, end, step);\ng.next().value // &#39;2023-04-01&#39;\ng.next().value // &#39;2023-04-02&#39;\ng.next().value // &#39;2023-04-03&#39;\ng.next().value // &#39;2023-04-04&#39;</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;2023-04-10&quot;, end = &quot;2023-04-20&quot;, step = 3\n<strong>Output:</strong> [&quot;2023-04-10&quot;,&quot;2023-04-13&quot;,&quot;2023-04-16&quot;,&quot;2023-04-19&quot;]\n<strong>Explanation:</strong> \nconst g = dateRangeGenerator(start, end, step);\ng.next().value // &#39;2023-04-10&#39;\ng.next().value // &#39;2023-04-13&#39;\ng.next().value // &#39;2023-04-16&#39;\ng.next().value // &#39;2023-04-19&#39;</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;2023-04-10&quot;, end = &quot;2023-04-10&quot;, step = 1\n<strong>Output:</strong> [&quot;2023-04-10&quot;]\n<strong>Explanation:</strong> \nconst g = dateRangeGenerator(start, end, step);\ng.next().value // &#39;2023-04-10&#39;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>new Date(start) &lt;= new Date(end)</code></li>\n\t<li><code>start</code> and <code>end</code> dates&nbsp;are in the string format&nbsp;<code>YYYY-MM-DD</code></li>\n\t<li><code>0 &lt;= The difference in days between the start date and the end date &lt;= 1500</code></li>\n\t<li><code>1 &lt;= step &lt;= 1000</code></li>\n</ul>\n", "hints": [], "exampleTestcases": "\"2023-04-01\"\n\"2023-04-04\"\n1\n\"2023-04-10\"\n\"2023-04-20\"\n3\n\"2023-04-10\"\n\"2023-04-10\"\n1", "codeSnippets": [{"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} start\n * @param {string} end\n * @param {number} step\n * @yields {string}\n */\nvar dateRangeGenerator = function* (start, end, step) {\n    \n};\n\n/**\n * const g = dateRangeGenerator('2023-04-01', '2023-04-04', 1);\n * g.next().value; // '2023-04-01'\n * g.next().value; // '2023-04-02'\n * g.next().value; // '2023-04-03'\n * g.next().value; // '2023-04-04'\n * g.next().done; // true\n */"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function* dateRangeGenerator(start: string, end: string, step: number) : Generator<string> {\n    \n};\n\n/**\n * const g = dateRangeGenerator('2023-04-01', '2023-04-04', 1);\n * g.next().value; // '2023-04-01'\n * g.next().value; // '2023-04-02'\n * g.next().value; // '2023-04-03'\n * g.next().value; // '2023-04-04'\n * g.next().done; // true\n */"}], "similarQuestionList": []}