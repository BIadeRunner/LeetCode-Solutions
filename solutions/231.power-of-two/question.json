{"questionId": "231", "acRate": 48.02507579702909, "difficulty": "Easy", "freqBar": 66.38639319968983, "frontendQuestionId": "231", "paidOnly": false, "status": "ac", "title": "Power of Two", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "Bit Manipulation", "id": "VG9waWNUYWdOb2RlOjE5", "slug": "bit-manipulation"}, {"name": "Recursion", "id": "VG9waWNUYWdOb2RlOjMx", "slug": "recursion"}], "titleSlug": "power-of-two", "content": "<p>Given an integer <code>n</code>, return <em><code>true</code> if it is a power of two. Otherwise, return <code>false</code></em>.</p>\n\n<p>An integer <code>n</code> is a power of two, if there exists an integer <code>x</code> such that <code>n == 2<sup>x</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n<strong>Explanation: </strong>2<sup>0</sup> = 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 16\n<strong>Output:</strong> true\n<strong>Explanation: </strong>2<sup>4</sup> = 16\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without loops/recursion?", "hints": [], "exampleTestcases": "1\n16\n3", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public boolean isPowerOfTwo(int n) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def isPowerOfTwo(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def isPowerOfTwo(self, n: int) -> bool:\n        "}, {"lang": "C", "langSlug": "c", "code": "bool isPowerOfTwo(int n) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public bool IsPowerOfTwo(int n) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} n\n * @return {boolean}\n */\nvar isPowerOfTwo = function(n) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function isPowerOfTwo(n: number): boolean {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function isPowerOfTwo($n) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func isPowerOfTwo(_ n: Int) -> Bool {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun isPowerOfTwo(n: Int): Boolean {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  bool isPowerOfTwo(int n) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func isPowerOfTwo(n int) bool {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} n\n# @return {Boolean}\ndef is_power_of_two(n)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def isPowerOfTwo(n: Int): Boolean = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn is_power_of_two(n: i32) -> bool {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (is-power-of-two n)\n  (-> exact-integer? boolean?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec is_power_of_two(N :: integer()) -> boolean().\nis_power_of_two(N) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec is_power_of_two(n :: integer) :: boolean\n  def is_power_of_two(n) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "number-of-1-bits", "title": "Number of 1 Bits", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "power-of-three", "title": "Power of Three", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "power-of-four", "title": "Power of Four", "isPaidOnly": false}]}