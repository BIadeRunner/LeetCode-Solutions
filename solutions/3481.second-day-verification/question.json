{"question_id": "3481", "problem_slug": "second-day-verification", "problem_title": "Second Day Verification", "content": "Table: emails\n\n+-------------+----------+\n| Column Name | Type     | \n+-------------+----------+\n| email_id    | int      |\n| user_id     | int      |\n| signup_date | datetime |\n+-------------+----------+\n(email_id, user_id) is the primary key (combination of columns with unique values) for this table.\nEach row of this table contains the email ID, user ID, and signup date.\n\nTable: texts\n\n+---------------+----------+\n| Column Name   | Type     | \n+---------------+----------+\n| text_id       | int      |\n| email_id      | int      |\n| signup_action | enum     |\n| action_date   | datetime |\n+---------------+----------+\n(text_id, email_id) is the primary key (combination of columns with unique values) for this table. \nsignup_action is an enum type of ('Verified', 'Not Verified'). \nEach row of this table contains the text ID, email ID, signup action, and action date.\n\nWrite a Solution to find the user IDs of those who verified their sign-up on the second day.\nReturn the result table ordered by user_id in ascending order.\nThe result format is in the following example.\n \nExample:\n\nInput:\nemails table:\n\n+----------+---------+---------------------+\n| email_id | user_id | signup_date         |\n+----------+---------+---------------------+\n| 125      | 7771    | 2022-06-14 09:30:00|\n| 433      | 1052    | 2022-07-09 08:15:00|\n| 234      | 7005    | 2022-08-20 10:00:00|\n+----------+---------+---------------------+\n\ntexts table:\n\n+---------+----------+--------------+---------------------+\n| text_id | email_id | signup_action| action_date         |\n+---------+----------+--------------+---------------------+\n| 1       | 125      | Verified     | 2022-06-15 08:30:00|\n| 2       | 433      | Not Verified | 2022-07-10 10:45:00|\n| 4       | 234      | Verified     | 2022-08-21 09:30:00|\n+---------+----------+--------------+---------------------+\n    \nOutput:\n\n+---------+\n| user_id |\n+---------+\n| 7005    |\n| 7771    |\n+---------+\n\nExplanation:\n\nUser with user_id 7005 and email_id 234 signed up on 2022-08-20 10:00:00 and verified on second day of the signup.\nUser with user_id 7771 and email_id 125 signed up on 2022-06-14 09:30:00 and verified on second day of the signup.\n\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"emails\":[\"email_id\",\"user_id\",\"signup_date\"],\"texts\":[\"text_id\",\"email_id\",\"signup_action\",\"action_date\"]},\"rows\":{\"emails\":[[125,7771,\"2022-06-14 09:30:00\"],[433,1052,\"2022-07-09 08:15:00\"],[234,7005,\"2022-08-20 10:00:00\"]],\"texts\":[[1,125,\"Verified\",\"2022-06-15 08:30:00\"],[2,433,\"Not Verified\",\"2022-07-10 10:45:00\"],[4,234,\"Verified\",\"2022-08-21 09:30:00\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_second_day_signups(emails: pd.DataFrame, texts: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}