{"questionId": "2452", "acRate": 69.90462734016248, "difficulty": "Easy", "freqBar": 0.0, "frontendQuestionId": "2329", "paidOnly": true, "status": "ac", "title": "Product Sales Analysis V", "topicTags": [{"name": "Database", "id": "VG9waWNUYWdOb2RlOjYxMDQz", "slug": "database"}], "titleSlug": "product-sales-analysis-v", "content": "<p>Table: <code>Sales</code></p>\n\n<pre>\n+-------------+-------+\n| Column Name | Type  |\n+-------------+-------+\n| sale_id     | int   |\n| product_id  | int   |\n| user_id     | int   |\n| quantity    | int   |\n+-------------+-------+\nsale_id contains unique values.\nproduct_id is a foreign key (column with unique values) to <code>Product</code> table.\nEach row of this table shows the ID of the product and the quantity purchased by a user.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Product</code></p>\n\n<pre>\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| product_id  | int  |\n| price       | int  |\n+-------------+------+\nproduct_id contains unique values.\nEach row of this table indicates the price of each product.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a solution to report&nbsp;the spending of each user.</p>\n\n<p>Return the resulting table ordered by <code>spending</code> in <strong>descending order</strong>. In case of a tie, order them by <code>user_id</code> in ascending order.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nSales table:\n+---------+------------+---------+----------+\n| sale_id | product_id | user_id | quantity |\n+---------+------------+---------+----------+\n| 1       | 1          | 101     | 10       |\n| 2       | 2          | 101     | 1        |\n| 3       | 3          | 102     | 3        |\n| 4       | 3          | 102     | 2        |\n| 5       | 2          | 103     | 3        |\n+---------+------------+---------+----------+\nProduct table:\n+------------+-------+\n| product_id | price |\n+------------+-------+\n| 1          | 10    |\n| 2          | 25    |\n| 3          | 15    |\n+------------+-------+\n<strong>Output:</strong> \n+---------+----------+\n| user_id | spending |\n+---------+----------+\n| 101     | 125      |\n| 102     | 75       |\n| 103     | 75       |\n+---------+----------+\n<strong>Explanation:</strong> \nUser 101 spent 10 * 10 + 1 * 25 = 125.\nUser 102 spent 3 * 15 + 2 * 15 = 75.\nUser 103 spent 3 * 25 = 75.\nUsers 102 and 103 spent the same amount and we break the tie by their ID while user 101 is on the top.\n</pre>\n", "hints": [], "exampleTestcases": "{\"headers\": {\"Sales\": [\"sale_id\", \"product_id\", \"user_id\", \"quantity\"], \"Product\": [\"product_id\", \"price\"]}, \"rows\": {\"Sales\": [[1, 1, 101, 10], [2, 2, 101, 1], [3, 3, 102, 3], [4, 3, 102, 2], [5, 2, 103, 3]], \"Product\": [[1, 10], [2, 25], [3, 15]]}}", "codeSnippets": [{"lang": "MySQL", "langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, {"lang": "MS SQL Server", "langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, {"lang": "Oracle", "langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, {"lang": "Pandas", "langSlug": "pythondata", "code": "import pandas as pd\n\ndef product_sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\n    "}, {"lang": "PostgreSQL", "langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "product-sales-analysis-i", "title": "Product Sales Analysis I", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "product-sales-analysis-ii", "title": "Product Sales Analysis II", "isPaidOnly": true}, {"difficulty": "Medium", "titleSlug": "product-sales-analysis-iii", "title": "Product Sales Analysis III", "isPaidOnly": false}]}