{"question_id": "1274", "problem_slug": "number-of-days-between-two-dates", "problem_title": "Number of Days Between Two Dates", "content": "Write a program to count the number of days between two dates.\nThe two dates are given as strings, their format is YYYY-MM-DD as shown in the examples.\n \nExample 1:\nInput: date1 = \"2019-06-29\", date2 = \"2019-06-30\"\nOutput: 1\nExample 2:\nInput: date1 = \"2020-01-15\", date2 = \"2019-12-31\"\nOutput: 15\n\n \nConstraints:\n\nThe given dates are valid dates between the years 1971 and 2100.\n\n", "hints": ["Create a function f(date) that counts the number of days from 1900-01-01 to date. How can we calculate the answer ?", "The answer is just |f(date1) - f(date2)|.", "How to construct f(date) ?", "For each year from 1900 to year - 1 sum up 365 or 366 in case of leap years. Then sum up for each month the number of days, consider the case when the current year is leap, finally sum up the days."], "exampleTestcases": "\"2019-06-29\"\n\"2019-06-30\"\n\"2020-01-15\"\n\"2019-12-31\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int daysBetweenDates(string date1, string date2) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int daysBetweenDates(String date1, String date2) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def daysBetweenDates(self, date1, date2):\n        \"\"\"\n        :type date1: str\n        :type date2: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def daysBetweenDates(self, date1: str, date2: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int daysBetweenDates(char* date1, char* date2) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int DaysBetweenDates(string date1, string date2) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} date1\n * @param {string} date2\n * @return {number}\n */\nvar daysBetweenDates = function(date1, date2) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function daysBetweenDates(date1: string, date2: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $date1\n     * @param String $date2\n     * @return Integer\n     */\n    function daysBetweenDates($date1, $date2) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func daysBetweenDates(_ date1: String, _ date2: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun daysBetweenDates(date1: String, date2: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int daysBetweenDates(String date1, String date2) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func daysBetweenDates(date1 string, date2 string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} date1\n# @param {String} date2\n# @return {Integer}\ndef days_between_dates(date1, date2)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def daysBetweenDates(date1: String, date2: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn days_between_dates(date1: String, date2: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (days-between-dates date1 date2)\n  (-> string? string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec days_between_dates(Date1 :: unicode:unicode_binary(), Date2 :: unicode:unicode_binary()) -> integer().\ndays_between_dates(Date1, Date2) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec days_between_dates(date1 :: String.t, date2 :: String.t) :: integer\n  def days_between_dates(date1, date2) do\n    \n  end\nend"}}}