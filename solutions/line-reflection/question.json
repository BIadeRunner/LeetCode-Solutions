{"questionId": "356", "acRate": 35.75155911925671, "difficulty": "Medium", "freqBar": 49.5198007775805, "frontendQuestionId": "356", "paidOnly": true, "status": "ac", "title": "Line Reflection", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}], "titleSlug": "line-reflection", "content": "<p>Given <code>n</code> points on a 2D plane, find if there is such a line parallel to the y-axis that reflects the given points symmetrically.</p>\n\n<p>In other words, answer whether or not if there exists a line that after reflecting all points over the given line, the original points&#39; set is the same as the reflected ones.</p>\n\n<p><strong>Note</strong> that there can be repeated points.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/23/356_example_1.PNG\" style=\"width: 389px; height: 340px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,1],[-1,1]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can choose the line x = 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/04/23/356_example_2.PNG\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,1],[-1,-1]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We can&#39;t choose a line.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == points.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>8</sup> &lt;= points[i][j] &lt;= 10<sup>8</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you do better than <code>O(n<sup>2</sup>)</code>?</p>\n", "hints": ["Find the smallest and largest x-value for all points.", "If there is a line then it should be at y = (minX + maxX) / 2.", "For each point, make sure that it has a reflected point in the opposite side."], "exampleTestcases": "[[1,1],[-1,1]]\n[[1,1],[-1,-1]]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    bool isReflected(vector<vector<int>>& points) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public boolean isReflected(int[][] points) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def isReflected(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: bool\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def isReflected(self, points: List[List[int]]) -> bool:\n        "}, {"lang": "C", "langSlug": "c", "code": "bool isReflected(int** points, int pointsSize, int* pointsColSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public bool IsReflected(int[][] points) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} points\n * @return {boolean}\n */\nvar isReflected = function(points) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function isReflected(points: number[][]): boolean {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $points\n     * @return Boolean\n     */\n    function isReflected($points) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func isReflected(_ points: [[Int]]) -> Bool {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun isReflected(points: Array<IntArray>): Boolean {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  bool isReflected(List<List<int>> points) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func isReflected(points [][]int) bool {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} points\n# @return {Boolean}\ndef is_reflected(points)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def isReflected(points: Array[Array[Int]]): Boolean = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn is_reflected(points: Vec<Vec<i32>>) -> bool {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (is-reflected points)\n  (-> (listof (listof exact-integer?)) boolean?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec is_reflected(Points :: [[integer()]]) -> boolean().\nis_reflected(Points) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec is_reflected(points :: [[integer]]) :: boolean\n  def is_reflected(points) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Hard", "titleSlug": "max-points-on-a-line", "title": "Max Points on a Line", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "number-of-boomerangs", "title": "Number of Boomerangs", "isPaidOnly": false}]}