{"questionId": "2154", "acRate": 55.62243937364924, "difficulty": "Easy", "freqBar": 20.668401688820296, "frontendQuestionId": "2027", "paidOnly": false, "status": "ac", "title": "Minimum Moves to Convert String", "topicTags": [{"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Greedy", "id": "VG9waWNUYWdOb2RlOjE3", "slug": "greedy"}], "titleSlug": "minimum-moves-to-convert-string", "content": "<p>You are given a string <code>s</code> consisting of <code>n</code> characters which are either <code>&#39;X&#39;</code> or <code>&#39;O&#39;</code>.</p>\n\n<p>A <strong>move</strong> is defined as selecting <strong>three</strong> <strong>consecutive characters</strong> of <code>s</code> and converting them to <code>&#39;O&#39;</code>. Note that if a move is applied to the character <code>&#39;O&#39;</code>, it will stay the <strong>same</strong>.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of moves required so that all the characters of </em><code>s</code><em> are converted to </em><code>&#39;O&#39;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;XXX&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> <u>XXX</u> -&gt; OOO\nWe select all the 3 characters and convert them in one move.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;XXOX&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> <u>XXO</u>X -&gt; O<u>OOX</u> -&gt; OOOO\nWe select the first 3 characters in the first move, and convert them to <code>&#39;O&#39;</code>.\nThen we select the last 3 characters and convert them so that the final string contains all <code>&#39;O&#39;</code>s.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;OOOO&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no <code>&#39;X&#39;s</code> in <code>s</code> to convert.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;X&#39;</code> or <code>&#39;O&#39;</code>.</li>\n</ul>\n", "hints": ["Find the smallest substring you need to consider at a time.", "Try delaying a move as long as possible."], "exampleTestcases": "\"XXX\"\n\"XXOX\"\n\"OOOO\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int minimumMoves(string s) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int minimumMoves(String s) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def minimumMoves(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def minimumMoves(self, s: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int minimumMoves(char* s) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int MinimumMoves(string s) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar minimumMoves = function(s) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function minimumMoves(s: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function minimumMoves($s) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func minimumMoves(_ s: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun minimumMoves(s: String): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int minimumMoves(String s) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func minimumMoves(s string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} s\n# @return {Integer}\ndef minimum_moves(s)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def minimumMoves(s: String): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn minimum_moves(s: String) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (minimum-moves s)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec minimum_moves(S :: unicode:unicode_binary()) -> integer().\nminimum_moves(S) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec minimum_moves(s :: String.t) :: integer\n  def minimum_moves(s) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "minimum-cost-to-convert-string-i", "title": "Minimum Cost to Convert String I", "isPaidOnly": false}, {"difficulty": "Hard", "titleSlug": "minimum-cost-to-convert-string-ii", "title": "Minimum Cost to Convert String II", "isPaidOnly": false}]}