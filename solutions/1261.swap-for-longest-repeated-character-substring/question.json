{"questionId": "1261", "acRate": 43.8947913967349, "difficulty": "Medium", "freqBar": 31.648404848272328, "frontendQuestionId": "1156", "paidOnly": false, "status": "ac", "title": "Swap For Longest Repeated Character Substring", "topicTags": [{"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Sliding Window", "id": "VG9waWNUYWdOb2RlOjU1ODIx", "slug": "sliding-window"}], "titleSlug": "swap-for-longest-repeated-character-substring", "content": "<p>You are given a string <code>text</code>. You can swap two of the characters in the <code>text</code>.</p>\n\n<p>Return <em>the length of the longest substring with repeated characters</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;ababa&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can swap the first &#39;b&#39; with the last &#39;a&#39;, or the last &#39;b&#39; with the first &#39;a&#39;. Then, the longest repeated character substring is &quot;aaa&quot; with length 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaabaaa&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Swap &#39;b&#39; with the last &#39;a&#39; (or the first &#39;a&#39;), and we get longest repeated character substring &quot;aaaaaa&quot; with length 6.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaaaa&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> No need to swap, longest repeated character substring is &quot;aaaaa&quot; with length is 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>text</code> consist of lowercase English characters only.</li>\n</ul>\n", "hints": ["There are two cases:  a block of characters, or two blocks of characters between one different character. \r\n By keeping a run-length encoded version of the string, we can easily check these cases."], "exampleTestcases": "\"ababa\"\n\"aaabaaa\"\n\"aaaaa\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int maxRepOpt1(string text) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int maxRepOpt1(String text) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def maxRepOpt1(self, text):\n        \"\"\"\n        :type text: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def maxRepOpt1(self, text: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int maxRepOpt1(char* text) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int MaxRepOpt1(string text) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} text\n * @return {number}\n */\nvar maxRepOpt1 = function(text) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function maxRepOpt1(text: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $text\n     * @return Integer\n     */\n    function maxRepOpt1($text) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func maxRepOpt1(_ text: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun maxRepOpt1(text: String): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int maxRepOpt1(String text) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func maxRepOpt1(text string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} text\n# @return {Integer}\ndef max_rep_opt1(text)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def maxRepOpt1(text: String): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn max_rep_opt1(text: String) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (max-rep-opt1 text)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec max_rep_opt1(Text :: unicode:unicode_binary()) -> integer().\nmax_rep_opt1(Text) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_rep_opt1(text :: String.t) :: integer\n  def max_rep_opt1(text) do\n    \n  end\nend"}], "similarQuestionList": []}