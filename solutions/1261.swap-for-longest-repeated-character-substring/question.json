{"question_id": "1261", "problem_slug": "swap-for-longest-repeated-character-substring", "problem_title": "Swap For Longest Repeated Character Substring", "content": "You are given a string text. You can swap two of the characters in the text.\nReturn the length of the longest substring with repeated characters.\n \nExample 1:\n\nInput: text = \"ababa\"\nOutput: 3\nExplanation: We can swap the first 'b' with the last 'a', or the last 'b' with the first 'a'. Then, the longest repeated character substring is \"aaa\" with length 3.\n\nExample 2:\n\nInput: text = \"aaabaaa\"\nOutput: 6\nExplanation: Swap 'b' with the last 'a' (or the first 'a'), and we get longest repeated character substring \"aaaaaa\" with length 6.\n\nExample 3:\n\nInput: text = \"aaaaa\"\nOutput: 5\nExplanation: No need to swap, longest repeated character substring is \"aaaaa\" with length is 5.\n\n \nConstraints:\n\n1 <= text.length <= 2 * 104\ntext consist of lowercase English characters only.\n\n", "hints": ["There are two cases:  a block of characters, or two blocks of characters between one different character. \r\n By keeping a run-length encoded version of the string, we can easily check these cases."], "exampleTestcases": "\"ababa\"\n\"aaabaaa\"\n\"aaaaa\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int maxRepOpt1(string text) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int maxRepOpt1(String text) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def maxRepOpt1(self, text):\n        \"\"\"\n        :type text: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def maxRepOpt1(self, text: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int maxRepOpt1(char* text) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int MaxRepOpt1(string text) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} text\n * @return {number}\n */\nvar maxRepOpt1 = function(text) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function maxRepOpt1(text: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $text\n     * @return Integer\n     */\n    function maxRepOpt1($text) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func maxRepOpt1(_ text: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun maxRepOpt1(text: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int maxRepOpt1(String text) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func maxRepOpt1(text string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} text\n# @return {Integer}\ndef max_rep_opt1(text)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def maxRepOpt1(text: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn max_rep_opt1(text: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (max-rep-opt1 text)\n  (-> string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec max_rep_opt1(Text :: unicode:unicode_binary()) -> integer().\nmax_rep_opt1(Text) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_rep_opt1(text :: String.t) :: integer\n  def max_rep_opt1(text) do\n    \n  end\nend"}}}