{"question_id": "2214", "problem_slug": "the-winner-university", "problem_title": "The Winner University", "content": "Table: NewYork\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| student_id  | int  |\n| score       | int  |\n+-------------+------+\nIn SQL, student_id is the primary key for this table.\nEach row contains information about the score of one student from New York University in an exam.\n\n \nTable: California\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| student_id  | int  |\n| score       | int  |\n+-------------+------+\nIn SQL, student_id is the primary key for this table.\nEach row contains information about the score of one student from California University in an exam.\n\n \nThere is a competition between New York University and California University. The competition is held between the same number of students from both universities. The university that has more excellent students wins the competition. If the two universities have the same number of excellent students, the competition ends in a draw.\nAn excellent student is a student that scored 90% or more in the exam.\nReturn:\n\n\"New York University\" if New York University wins the competition.\n\"California University\" if California University wins the competition.\n\"No Winner\" if the competition ends in a draw.\n\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nNewYork table:\n+------------+-------+\n| student_id | score |\n+------------+-------+\n| 1          | 90    |\n| 2          | 87    |\n+------------+-------+\nCalifornia table:\n+------------+-------+\n| student_id | score |\n+------------+-------+\n| 2          | 89    |\n| 3          | 88    |\n+------------+-------+\nOutput: \n+---------------------+\n| winner              |\n+---------------------+\n| New York University |\n+---------------------+\nExplanation:\nNew York University has 1 excellent student, and California University has 0 excellent students.\n\nExample 2:\n\nInput: \nNewYork table:\n+------------+-------+\n| student_id | score |\n+------------+-------+\n| 1          | 89    |\n| 2          | 88    |\n+------------+-------+\nCalifornia table:\n+------------+-------+\n| student_id | score |\n+------------+-------+\n| 2          | 90    |\n| 3          | 87    |\n+------------+-------+\nOutput: \n+-----------------------+\n| winner                |\n+-----------------------+\n| California University |\n+-----------------------+\nExplanation:\nNew York University has 0 excellent students, and California University has 1 excellent student.\n\nExample 3:\n\nInput: \nNewYork table:\n+------------+-------+\n| student_id | score |\n+------------+-------+\n| 1          | 89    |\n| 2          | 90    |\n+------------+-------+\nCalifornia table:\n+------------+-------+\n| student_id | score |\n+------------+-------+\n| 2          | 87    |\n| 3          | 99    |\n+------------+-------+\nOutput: \n+-----------+\n| winner    |\n+-----------+\n| No Winner |\n+-----------+\nExplanation:\nBoth New York University and California University have 1 excellent student.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"NewYork\":[\"student_id\",\"score\"],\"California\":[\"student_id\",\"score\"]},\"rows\":{\"NewYork\":[[1,90],[2,87]],\"California\":[[2,89],[3,88]]}}\n{\"headers\":{\"NewYork\":[\"student_id\",\"score\"],\"California\":[\"student_id\",\"score\"]},\"rows\":{\"NewYork\":[[1,89],[2,88]],\"California\":[[2,90],[3,87]]}}\n{\"headers\":{\"NewYork\":[\"student_id\",\"score\"],\"California\":[\"student_id\",\"score\"]},\"rows\":{\"NewYork\":[[1,89],[2,90]],\"California\":[[2,87],[3,99]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_winner(new_york: pd.DataFrame, california: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}