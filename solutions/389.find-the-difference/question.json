{"question_id": "389", "problem_slug": "find-the-difference", "problem_title": "Find the Difference", "content": "You are given two strings s and t.\nString t is generated by random shuffling string s and then add one more letter at a random position.\nReturn the letter that was added to t.\n \nExample 1:\n\nInput: s = \"abcd\", t = \"abcde\"\nOutput: \"e\"\nExplanation: 'e' is the letter that was added.\n\nExample 2:\n\nInput: s = \"\", t = \"y\"\nOutput: \"y\"\n\n \nConstraints:\n\n0 <= s.length <= 1000\nt.length == s.length + 1\ns and t consist of lowercase English letters.\n\n", "hints": [], "exampleTestcases": "\"abcd\"\n\"abcde\"\n\"\"\n\"y\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    char findTheDifference(string s, string t) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public char findTheDifference(String s, String t) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def findTheDifference(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def findTheDifference(self, s: str, t: str) -> str:\n        "}, "C": {"langSlug": "c", "code": "char findTheDifference(char* s, char* t) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public char FindTheDifference(string s, string t) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} s\n * @param {string} t\n * @return {character}\n */\nvar findTheDifference = function(s, t) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function findTheDifference(s: string, t: string): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @return String\n     */\n    function findTheDifference($s, $t) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func findTheDifference(_ s: String, _ t: String) -> Character {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun findTheDifference(s: String, t: String): Char {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String findTheDifference(String s, String t) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func findTheDifference(s string, t string) byte {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} s\n# @param {String} t\n# @return {Character}\ndef find_the_difference(s, t)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def findTheDifference(s: String, t: String): Char = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn find_the_difference(s: String, t: String) -> char {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (find-the-difference s t)\n  (-> string? string? char?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec find_the_difference(S :: unicode:unicode_binary(), T :: unicode:unicode_binary()) -> char().\nfind_the_difference(S, T) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec find_the_difference(s :: String.t, t :: String.t) :: char\n  def find_the_difference(s, t) do\n    \n  end\nend"}}}