{"question_id": "3448", "problem_slug": "consecutive-available-seats-ii", "problem_title": "Consecutive Available Seats II", "content": "Table: Cinema\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| seat_id     | int  |\n| free        | bool |\n+-------------+------+\nseat_id is an auto-increment column for this table.\nEach row of this table indicates whether the ith seat is free or not. 1 means free while 0 means occupied.\n\nWrite a solution to find the length of longest consecutive sequence of available seats in the cinema.\nNote:\n\nThere will always be at most one longest consecutive sequence.\nIf there are multiple consecutive sequences with the same length, include all of them in the output.\n\nReturn the result table ordered by first_seat_id in ascending order.\nThe result format is in the following example.\n \nExample:\n\nInput:\nCinema table:\n\n+---------+------+\n| seat_id | free |\n+---------+------+\n| 1       | 1    |\n| 2       | 0    |\n| 3       | 1    |\n| 4       | 1    |\n| 5       | 1    |\n+---------+------+\n\nOutput:\n\n+-----------------+----------------+-----------------------+\n| first_seat_id   | last_seat_id   | consecutive_seats_len |\n+-----------------+----------------+-----------------------+\n| 3               | 5              | 3                     |\n+-----------------+----------------+-----------------------+\n\nExplanation:\n\nLongest consecutive sequence of available seats starts from seat 3 and ends at seat 5 with a length of 3.\n\nOutput table is ordered by first_seat_id in ascending order.\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Cinema\":[\"seat_id\",\"free\"]},\"rows\":{\"Cinema\":[[1,1],[2,0],[3,1],[4,1],[5,1]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef consecutive_available_seats(cinema: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}