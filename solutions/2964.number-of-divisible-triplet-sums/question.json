{"questionId": "3254", "acRate": 64.90158026060439, "difficulty": "Medium", "freqBar": 55.32861797841616, "frontendQuestionId": "2964", "paidOnly": true, "status": "ac", "title": "Number of Divisible Triplet Sums", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}], "titleSlug": "number-of-divisible-triplet-sums", "content": "Given a <strong>0-indexed</strong> integer array <code>nums</code> and an integer <code>d</code>, return <em>the number of triplets</em> <code>(i, j, k)</code> <em>such that</em> <code>i &lt; j &lt; k</code> <em>and</em> <code>(nums[i] + nums[j] + nums[k]) % d == 0</code>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3,4,7,8], d = 5\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The triplets which are divisible by 5 are: (0, 1, 2), (0, 2, 4), (1, 2, 4).\nIt can be shown that no other triplet is divisible by 5. Hence, the answer is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3,3,3], d = 3\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Any triplet chosen here has a sum of 9, which is divisible by 3. Hence, the answer is the total number of triplets which is 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3,3,3], d = 6\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Any triplet chosen here has a sum of 9, which is not divisible by 6. Hence, the answer is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= d &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "hints": ["Fix index <code>L</code> to be the leftmost element of a triplet.", "Starting from <code>L</code>, go forward and add the remainder of each element to a map.", "Now when you are at index <code>R</code>, consider <code>nums[L] + nums[R]</code> and calculate what the remainder of the third element should be.", "Then use the map to find the number of valid third elements between <code>L</code> and <code>R</code>."], "exampleTestcases": "[3,3,4,7,8]\n5\n[3,3,3,3]\n3\n[3,3,3,3]\n6", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int divisibleTripletCount(vector<int>& nums, int d) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int divisibleTripletCount(int[] nums, int d) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def divisibleTripletCount(self, nums, d):\n        \"\"\"\n        :type nums: List[int]\n        :type d: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def divisibleTripletCount(self, nums: List[int], d: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int divisibleTripletCount(int* nums, int numsSize, int d) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int DivisibleTripletCount(int[] nums, int d) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @param {number} d\n * @return {number}\n */\nvar divisibleTripletCount = function(nums, d) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function divisibleTripletCount(nums: number[], d: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $d\n     * @return Integer\n     */\n    function divisibleTripletCount($nums, $d) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func divisibleTripletCount(_ nums: [Int], _ d: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun divisibleTripletCount(nums: IntArray, d: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int divisibleTripletCount(List<int> nums, int d) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func divisibleTripletCount(nums []int, d int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @param {Integer} d\n# @return {Integer}\ndef divisible_triplet_count(nums, d)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def divisibleTripletCount(nums: Array[Int], d: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn divisible_triplet_count(nums: Vec<i32>, d: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (divisible-triplet-count nums d)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec divisible_triplet_count(Nums :: [integer()], D :: integer()) -> integer().\ndivisible_triplet_count(Nums, D) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec divisible_triplet_count(nums :: [integer], d :: integer) :: integer\n  def divisible_triplet_count(nums, d) do\n    \n  end\nend"}], "similarQuestionList": []}