{"question_id": "1026", "problem_slug": "string-without-aaa-or-bbb", "problem_title": "String Without AAA or BBB", "content": "Given two integers a and b, return any string s such that:\n\ns has length a + b and contains exactly a 'a' letters, and exactly b 'b' letters,\nThe substring 'aaa' does not occur in s, and\nThe substring 'bbb' does not occur in s.\n\n \nExample 1:\n\nInput: a = 1, b = 2\nOutput: \"abb\"\nExplanation: \"abb\", \"bab\" and \"bba\" are all correct answers.\n\nExample 2:\n\nInput: a = 4, b = 1\nOutput: \"aabaa\"\n\n \nConstraints:\n\n0 <= a, b <= 100\nIt is guaranteed such an s exists for the given a and b.\n\n", "hints": [], "exampleTestcases": "1\n2\n4\n1", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string strWithout3a3b(int a, int b) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String strWithout3a3b(int a, int b) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def strWithout3a3b(self, a, b):\n        \"\"\"\n        :type a: int\n        :type b: int\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def strWithout3a3b(self, a: int, b: int) -> str:\n        "}, "C": {"langSlug": "c", "code": "\n\nchar * strWithout3a3b(int a, int b){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string StrWithout3a3b(int a, int b) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} a\n * @param {number} b\n * @return {string}\n */\nvar strWithout3a3b = function(a, b) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function strWithout3a3b(a: number, b: number): string {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $a\n     * @param Integer $b\n     * @return String\n     */\n    function strWithout3a3b($a, $b) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func strWithout3a3b(_ a: Int, _ b: Int) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun strWithout3a3b(a: Int, b: Int): String {\n        \n    }\n}"}, "Go": {"langSlug": "golang", "code": "func strWithout3a3b(a int, b int) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} a\n# @param {Integer} b\n# @return {String}\ndef str_without3a3b(a, b)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def strWithout3a3b(a: Int, b: Int): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn str_without3a3b(a: i32, b: i32) -> String {\n        \n    }\n}"}}}