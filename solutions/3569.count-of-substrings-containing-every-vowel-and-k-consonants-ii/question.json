{"questionId": "3569", "acRate": 20.5761316872428, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "3306", "paidOnly": false, "status": "ac", "title": "Count of Substrings Containing Every Vowel and K Consonants II", "topicTags": [{"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Sliding Window", "id": "VG9waWNUYWdOb2RlOjU1ODIx", "slug": "sliding-window"}], "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii", "content": "<p>You are given a string <code>word</code> and a <strong>non-negative</strong> integer <code>k</code>.</p>\n\n<p>Return the total number of <span data-keyword=\"substring-nonempty\">substrings</span> of <code>word</code> that contain every vowel (<code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>) <strong>at least</strong> once and <strong>exactly</strong> <code>k</code> consonants.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;aeioqq&quot;, k = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no substring with every vowel.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;aeiou&quot;, k = 0</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The only substring with every vowel and zero consonants is <code>word[0..4]</code>, which is <code>&quot;aeiou&quot;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;</span>ieaouqqieaouqq<span class=\"example-io\">&quot;, k = 1</span></p>\n\n<p><strong>Output:</strong> 3</p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substrings with every vowel and one consonant are:</p>\n\n<ul>\n\t<li><code>word[0..5]</code>, which is <code>&quot;ieaouq&quot;</code>.</li>\n\t<li><code>word[6..11]</code>, which is <code>&quot;qieaou&quot;</code>.</li>\n\t<li><code>word[7..12]</code>, which is <code>&quot;ieaouq&quot;</code>.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>5 &lt;= word.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>word</code> consists only of lowercase English letters.</li>\n\t<li><code>0 &lt;= k &lt;= word.length - 5</code></li>\n</ul>\n", "hints": ["We can use sliding window and binary search.", "For each index <code>r</code>, find the maximum <code>l</code> such that both conditions are satisfied using binary search."], "exampleTestcases": "\"aeioqq\"\n1\n\"aeiou\"\n0\n\"ieaouqqieaouqq\"\n1", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    long long countOfSubstrings(string word, int k) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public long countOfSubstrings(String word, int k) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def countOfSubstrings(self, word, k):\n        \"\"\"\n        :type word: str\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def countOfSubstrings(self, word: str, k: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "long long countOfSubstrings(char* word, int k) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public long CountOfSubstrings(string word, int k) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} word\n * @param {number} k\n * @return {number}\n */\nvar countOfSubstrings = function(word, k) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function countOfSubstrings(word: string, k: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @param Integer $k\n     * @return Integer\n     */\n    function countOfSubstrings($word, $k) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func countOfSubstrings(_ word: String, _ k: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun countOfSubstrings(word: String, k: Int): Long {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int countOfSubstrings(String word, int k) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func countOfSubstrings(word string, k int) int64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} word\n# @param {Integer} k\n# @return {Integer}\ndef count_of_substrings(word, k)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def countOfSubstrings(word: String, k: Int): Long = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn count_of_substrings(word: String, k: i32) -> i64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (count-of-substrings word k)\n  (-> string? exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec count_of_substrings(Word :: unicode:unicode_binary(), K :: integer()) -> integer().\ncount_of_substrings(Word, K) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_of_substrings(word :: String.t, k :: integer) :: integer\n  def count_of_substrings(word, k) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "count-vowel-substrings-of-a-string", "title": "Count Vowel Substrings of a String", "isPaidOnly": false}]}