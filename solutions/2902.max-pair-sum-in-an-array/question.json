{"question_id": "2902", "problem_slug": "max-pair-sum-in-an-array", "problem_title": "Max Pair Sum in an Array", "content": "You are given an integer array nums. You have to find the maximum sum of a pair of numbers from nums such that the largest digit in both numbers is equal.\nFor example, 2373 is made up of three distinct digits: 2, 3, and 7, where 7 is the largest among them.\nReturn the maximum sum or -1 if no such pair exists.\n \nExample 1:\n\nInput: nums = [112,131,411]\nOutput: -1\nExplanation:\nEach numbers largest digit in order is [2,3,4].\n\nExample 2:\n\nInput: nums = [2536,1613,3366,162]\nOutput: 5902\nExplanation:\nAll the numbers have 6 as their largest digit, so the answer is 2536 + 3366 = 5902.\n\nExample 3:\n\nInput: nums = [51,71,17,24,42]\nOutput: 88\nExplanation:\nEach number's largest digit in order is [5,7,7,4,4].\nSo we have only two possible pairs, 71 + 17 = 88 and 24 + 42 = 66.\n\n \nConstraints:\n\n2 <= nums.length <= 100\n1 <= nums[i] <= 104\n\n", "hints": ["Find the largest and second largest element with maximum digits equal to x where 1<=x<=9."], "exampleTestcases": "[112,131,411]\n[2536,1613,3366,162]\n[51,71,17,24,42]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int maxSum(vector<int>& nums) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int maxSum(int[] nums) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def maxSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def maxSum(self, nums: List[int]) -> int:\n        "}, "C": {"langSlug": "c", "code": "int maxSum(int* nums, int numsSize){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int MaxSum(int[] nums) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxSum = function(nums) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function maxSum(nums: number[]): number {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxSum($nums) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func maxSum(_ nums: [Int]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun maxSum(nums: IntArray): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int maxSum(List<int> nums) {\n\n  }\n}"}, "Go": {"langSlug": "golang", "code": "func maxSum(nums []int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef max_sum(nums)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def maxSum(nums: Array[Int]): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn max_sum(nums: Vec<i32>) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (max-sum nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec max_sum(Nums :: [integer()]) -> integer().\nmax_sum(Nums) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_sum(nums :: [integer]) :: integer\n  def max_sum(nums) do\n    \n  end\nend"}}}