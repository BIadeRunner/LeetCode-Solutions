{"question_id": "2336", "problem_slug": "the-number-of-users-that-are-eligible-for-discount", "problem_title": "The Number of Users That Are Eligible for Discount", "content": "Table: Purchases\n\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| user_id     | int      |\n| time_stamp  | datetime |\n| amount      | int      |\n+-------------+----------+\n(user_id, time_stamp) is the primary key (combination of columns with unique values) for this table.\nEach row contains information about the purchase time and the amount paid for the user with ID user_id.\n\n \nA user is eligible for a discount if they had a purchase in the inclusive interval of time [startDate, endDate] with at least minAmount amount. To convert the dates to times, both dates should be considered as the start of the day (i.e., endDate = 2022-03-05 should be considered as the time 2022-03-05 00:00:00).\nWrite a solution to report the number of users that are eligible for a discount.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nPurchases table:\n+---------+---------------------+--------+\n| user_id | time_stamp          | amount |\n+---------+---------------------+--------+\n| 1       | 2022-04-20 09:03:00 | 4416   |\n| 2       | 2022-03-19 19:24:02 | 678    |\n| 3       | 2022-03-18 12:03:09 | 4523   |\n| 3       | 2022-03-30 09:43:42 | 626    |\n+---------+---------------------+--------+\nstartDate = 2022-03-08, endDate = 2022-03-20, minAmount = 1000\nOutput: \n+----------+\n| user_cnt |\n+----------+\n| 1        |\n+----------+\nExplanation:\nOut of the three users, only User 3 is eligible for a discount.\n - User 1 had one purchase with at least minAmount amount, but not within the time interval.\n - User 2 had one purchase within the time interval, but with less than minAmount amount.\n - User 3 is the only user who had a purchase that satisfies both conditions.\n\n \nImportant Note: This problem is basically the same as The Users That Are Eligible for Discount.\n", "hints": [], "exampleTestcases": "{\"headers\": {\"Purchases\": [\"user_id\", \"time_stamp\", \"amount\"]}, \"startDate\": \"2022-03-08\", \"endDate\": \"2022-03-20\", \"minAmount\": 1000, \"rows\": {\"Purchases\": [[1, \"2022-04-20 09:03:00\", 4416], [2, \"2022-03-19 19:24:02\", 678], [3, \"2022-03-18 12:03:09\", 4523], [3, \"2022-03-30 09:43:42\", 626]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "CREATE FUNCTION getUserIDs(startDate DATE, endDate DATE, minAmount INT) RETURNS INT\nBEGIN\n  RETURN (\n      # Write your MySQL query statement below.\n      \n  );\nEND"}, "MS SQL Server": {"langSlug": "mssql", "code": "CREATE FUNCTION getUserIDs(@startDate DATE, @endDate DATE, @minAmount INT) RETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        \n    );\nEND"}, "Oracle": {"langSlug": "oraclesql", "code": "CREATE FUNCTION getUserIDs(startDate IN DATE, endDate IN DATE, minAmount IN NUMBER) RETURN NUMBER IS\nresult NUMBER;\nBEGIN\n    /* Write your PL/SQL query statement below */\n    \n    RETURN result;\nEND;"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\nfrom datetime import datetime\n\ndef count_valid_users(purchases: pd.DataFrame, start_date: datetime, end_date: datetime, min_amount: int) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "CREATE OR REPLACE FUNCTION getUserIDs(startDate DATE, endDate DATE, minAmount INT) RETURNS INT AS $$\nBEGIN\n  RETURN (\n\t  -- Write your PostgreSQL query statement below.\n      \n  );\nEND;\n$$ LANGUAGE plpgsql;\n\n\n\n"}}}