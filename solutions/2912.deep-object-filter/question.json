{"question_id": "2912", "problem_slug": "deep-object-filter", "problem_title": "Deep Object Filter", "content": "Given an object or an array obj and a function fn, return a filtered object or array filteredObject. \nFunction deepFilter should perform a deep filter operation on the obj. The deep filter operation should remove properties for which the output of the filter function fn is false, as well as any empty objects or arrays that remain after the keys have been removed.\nIf the deep filter operation results in an empty object or array, with no remaining properties, deepFilter should return undefined to indicate that there is no valid data left in the filteredObject.\n \nExample 1:\n\nInput: \nobj = [-5, -4, -3, -2, -1, 0, 1], \nfn = (x) => x > 0\nOutput: [1]\nExplanation: All values that were not greater than 0 were removed.\n\nExample 2:\n\nInput: \nobj = {\"a\": 1, \"b\": \"2\", \"c\": 3, \"d\": \"4\", \"e\": 5, \"f\": 6, \"g\": {\"a\": 1}}, \nfn = (x) => typeof x === \"string\"\nOutput: {\"b\":\"2\",\"d\":\"4\"}\nExplanation: All keys with values that were not a string were removed. When the object keys were removed during the filtering process, any resulting empty objects were also removed.\n\nExample 3:\n\nInput: \nobj = [-1, [-1, -1, 5, -1, 10], -1, [-1], [-5]], \nfn = (x) => x > 0\nOutput: [[5,10]]\nExplanation: All values that were not greater than 0 were removed. When the values were removed during the filtering process, any resulting empty arrays were also removed.\nExample 4:\n\nInput: \nobj = [[[[5]]]], \nfn = (x) => Array.isArray(x)\nOutput: undefined\n\n \nConstraints:\n\nfn is a function that returns a boolean value\nobj is a valid JSON object or array\n2 <= JSON.stringify(obj).length <= 105\n\n", "hints": [], "exampleTestcases": "[-5,-4,-3,-2,-1,0,1]\n(x) => x > 0\n{\"a\":1,\"b\":\"2\",\"c\":3,\"d\":\"4\",\"e\":5,\"f\":6,\"g\":{\"a\":1}}\n(x) => typeof x === \"string\"\n[-1,[-1,-1,5,-1,10],-1,[-1],[-5]]\n(x) => x > 0\n[[[[5]]]]\n(x) => Array.isArray(x)", "codeSnippets": {"JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {Object|Array} obj\n * @param {Function} fn\n * @return {Object|Array|undefined}\n */\nvar deepFilter = function(obj, fn) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype Obj = Record<string, JSONValue> | Array<JSONValue>\n\nfunction deepFilter(obj: Obj, fn: Function): Obj | undefined {\n    \n};"}}}