{"question_id": "1852", "problem_slug": "biggest-window-between-visits", "problem_title": "Biggest Window Between Visits", "content": "Table: UserVisits\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| user_id     | int  |\n| visit_date  | date |\n+-------------+------+\nThis table does not have a primary key, it might contain duplicate rows.\nThis table contains logs of the dates that users visited a certain retailer.\n\n \nAssume today's date is '2021-1-1'.\nWrite a solution that will, for each user_id, find out the largest window of days between each visit and the one right after it (or today if you are considering the last visit).\nReturn the result table ordered by user_id.\nThe query result format is in the following example.\n \nExample 1:\n\nInput: \nUserVisits table:\n+---------+------------+\n| user_id | visit_date |\n+---------+------------+\n| 1       | 2020-11-28 |\n| 1       | 2020-10-20 |\n| 1       | 2020-12-3  |\n| 2       | 2020-10-5  |\n| 2       | 2020-12-9  |\n| 3       | 2020-11-11 |\n+---------+------------+\nOutput: \n+---------+---------------+\n| user_id | biggest_window|\n+---------+---------------+\n| 1       | 39            |\n| 2       | 65            |\n| 3       | 51            |\n+---------+---------------+\nExplanation: \nFor the first user, the windows in question are between dates:\n    - 2020-10-20 and 2020-11-28 with a total of 39 days. \n    - 2020-11-28 and 2020-12-3 with a total of 5 days. \n    - 2020-12-3 and 2021-1-1 with a total of 29 days.\nMaking the biggest window the one with 39 days.\nFor the second user, the windows in question are between dates:\n    - 2020-10-5 and 2020-12-9 with a total of 65 days.\n    - 2020-12-9 and 2021-1-1 with a total of 23 days.\nMaking the biggest window the one with 65 days.\nFor the third user, the only window in question is between dates 2020-11-11 and 2021-1-1 with a total of 51 days.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"UserVisits\":[\"user_id\",\"visit_date\"]},\"rows\":{\"UserVisits\":[[\"1\",\"2020-11-28\"],[\"1\",\"2020-10-20\"],[\"1\",\"2020-12-3\"],[\"2\",\"2020-10-5\"],[\"2\",\"2020-12-9\"],[\"3\",\"2020-11-11\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef biggest_window(user_visits: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}