{"questionId": "1441", "acRate": 71.18203169129232, "difficulty": "Medium", "freqBar": 42.087881754237415, "frontendQuestionId": "1318", "paidOnly": false, "status": "ac", "title": "Minimum Flips to Make a OR b Equal to c", "topicTags": [{"name": "Bit Manipulation", "id": "VG9waWNUYWdOb2RlOjE5", "slug": "bit-manipulation"}], "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c", "content": "<p>Given 3 positives numbers <code>a</code>, <code>b</code> and <code>c</code>. Return the minimum flips required in some bits of <code>a</code> and <code>b</code> to make (&nbsp;<code>a</code> OR <code>b</code> == <code>c</code>&nbsp;). (bitwise OR operation).<br />\r\nFlip operation&nbsp;consists of change&nbsp;<strong>any</strong>&nbsp;single bit 1 to 0 or change the bit 0 to 1&nbsp;in their binary representation.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/06/sample_3_1676.png\" style=\"width: 260px; height: 87px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 2, b = 6, c = 5\r\n<strong>Output:</strong> 3\r\n<strong>Explanation: </strong>After flips a = 1 , b = 4 , c = 5 such that (<code>a</code> OR <code>b</code> == <code>c</code>)</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 4, b = 2, c = 7\r\n<strong>Output:</strong> 1\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 1, b = 2, c = 3\r\n<strong>Output:</strong> 0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= a &lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= b&nbsp;&lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= c&nbsp;&lt;= 10^9</code></li>\r\n</ul>", "hints": ["Check the bits one by one whether they need to be flipped."], "exampleTestcases": "2\n6\n5\n4\n2\n7\n1\n2\n3", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int minFlips(int a, int b, int c) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int minFlips(int a, int b, int c) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def minFlips(self, a, b, c):\n        \"\"\"\n        :type a: int\n        :type b: int\n        :type c: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def minFlips(self, a: int, b: int, c: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "\n\nint minFlips(int a, int b, int c){\n\n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int MinFlips(int a, int b, int c) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @return {number}\n */\nvar minFlips = function(a, b, c) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function minFlips(a: number, b: number, c: number): number {\n\n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $a\n     * @param Integer $b\n     * @param Integer $c\n     * @return Integer\n     */\n    function minFlips($a, $b, $c) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func minFlips(_ a: Int, _ b: Int, _ c: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun minFlips(a: Int, b: Int, c: Int): Int {\n        \n    }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func minFlips(a int, b int, c int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} a\n# @param {Integer} b\n# @param {Integer} c\n# @return {Integer}\ndef min_flips(a, b, c)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def minFlips(a: Int, b: Int, c: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn min_flips(a: i32, b: i32, c: i32) -> i32 {\n        \n    }\n}"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "minimum-bit-flips-to-convert-number", "title": "Minimum Bit Flips to Convert Number", "isPaidOnly": false}]}