{"question_id": "1920", "problem_slug": "determine-color-of-a-chessboard-square", "problem_title": "Determine Color of a Chessboard Square", "content": "You are given coordinates, a string that represents the coordinates of a square of the chessboard. Below is a chessboard for your reference.\n\nReturn true if the square is white, and false if the square is black.\nThe coordinate will always represent a valid chessboard square. The coordinate will always have the letter first, and the number second.\n \nExample 1:\n\nInput: coordinates = \"a1\"\nOutput: false\nExplanation: From the chessboard above, the square with coordinates \"a1\" is black, so return false.\n\nExample 2:\n\nInput: coordinates = \"h3\"\nOutput: true\nExplanation: From the chessboard above, the square with coordinates \"h3\" is white, so return true.\n\nExample 3:\n\nInput: coordinates = \"c7\"\nOutput: false\n\n \nConstraints:\n\ncoordinates.length == 2\n'a' <= coordinates[0] <= 'h'\n'1' <= coordinates[1] <= '8'\n\n", "hints": ["Convert the coordinates to (x, y) - that is, \"a1\" is (1, 1), \"d7\" is (4, 7).", "Try add the numbers together and look for a pattern."], "exampleTestcases": "\"a1\"\n\"h3\"\n\"c7\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    bool squareIsWhite(string coordinates) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public boolean squareIsWhite(String coordinates) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def squareIsWhite(self, coordinates):\n        \"\"\"\n        :type coordinates: str\n        :rtype: bool\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def squareIsWhite(self, coordinates: str) -> bool:\n        "}, "C": {"langSlug": "c", "code": "bool squareIsWhite(char* coordinates) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public bool SquareIsWhite(string coordinates) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} coordinates\n * @return {boolean}\n */\nvar squareIsWhite = function(coordinates) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function squareIsWhite(coordinates: string): boolean {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $coordinates\n     * @return Boolean\n     */\n    function squareIsWhite($coordinates) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func squareIsWhite(_ coordinates: String) -> Bool {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun squareIsWhite(coordinates: String): Boolean {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  bool squareIsWhite(String coordinates) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func squareIsWhite(coordinates string) bool {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} coordinates\n# @return {Boolean}\ndef square_is_white(coordinates)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def squareIsWhite(coordinates: String): Boolean = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn square_is_white(coordinates: String) -> bool {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (square-is-white coordinates)\n  (-> string? boolean?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec square_is_white(Coordinates :: unicode:unicode_binary()) -> boolean().\nsquare_is_white(Coordinates) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec square_is_white(coordinates :: String.t) :: boolean\n  def square_is_white(coordinates) do\n    \n  end\nend"}}}