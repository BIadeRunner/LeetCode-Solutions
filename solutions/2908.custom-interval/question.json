{"question_id": "2908", "problem_slug": "custom-interval", "problem_title": "Custom Interval", "content": "Function customInterval\nGiven a function fn, a number delay and a number period, return a number id.\ncustomInterval is a function that should execute the provided function fn at intervals based on a linear pattern defined by the formula delay + period * count. \nThe count in the formula represents the number of times the interval has been executed starting from an initial value of 0.\nFunction customClearInterval \nGiven the id. id is the returned value from the function customInterval.\ncustomClearInterval should stop executing provided function fn at intervals.\nNote: The setTimeout and setInterval functions in Node.js return an object, not a number.\n \nExample 1:\n\nInput: delay = 50, period = 20, cancelTime = 225\nOutput: [50,120,210]\nExplanation: \nconst t = performance.now()  \nconst result = []\n        \nconst fn = () => {\n    result.push(Math.floor(performance.now() - t))\n}\nconst id = customInterval(fn, delay, period)\n        \nsetTimeout(() => {\n    customClearInterval(id)\n}, 225)\n\n50 + 20 * 0 = 50 // 50ms - 1st function call\n50 + 20 * 1 = 70 // 50ms + 70ms = 120ms - 2nd function call\n50 + 20 * 2 = 90 // 50ms + 70ms + 90ms = 210ms - 3rd function call\n\nExample 2:\n\nInput: delay = 20, period = 20, cancelTime = 150\nOutput: [20,60,120]\nExplanation: \n20 + 20 * 0 = 20 // 20ms - 1st function call\n20 + 20 * 1 = 40 // 20ms + 40ms = 60ms - 2nd function call\n20 + 20 * 2 = 60 // 20ms + 40ms + 60ms = 120ms - 3rd function call\n\nExample 3:\n\nInput: delay = 100, period = 200, cancelTime = 500\nOutput: [100,400]\nExplanation: \n100 + 200 * 0 = 100 // 100ms - 1st function call\n100 + 200 * 1 = 300 // 100ms + 300ms = 400ms - 2nd function call\n\n \nConstraints:\n\n20 <= delay, period <= 250\n20 <= cancelTime <= 1000\n\n", "hints": [], "exampleTestcases": "50\n20\n225\n20\n20\n150\n100\n200\n500", "codeSnippets": {"JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {Function} fn\n * @param {number} delay\n * @param {number} period\n * @return {number} id\n */\n\nfunction customInterval(fn, delay, period){\n    \n}\n\n/**\n * @param {number} id\n * @return {void}\n */\nfunction customClearInterval(id) {\n    \n}"}, "TypeScript": {"langSlug": "typescript", "code": "function customInterval(fn: Function, delay: number, period: number): number {\n    \n}\n\nfunction customClearInterval(id: number): void {\n    \n}"}}}