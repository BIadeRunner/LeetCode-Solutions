{"question_id": "1500", "problem_slug": "count-largest-group", "problem_title": "Count Largest Group", "content": "You are given an integer n.\nEach number from 1 to n is grouped according to the sum of its digits.\nReturn the number of groups that have the largest size.\n \nExample 1:\n\nInput: n = 13\nOutput: 4\nExplanation: There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:\n[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9].\nThere are 4 groups with largest size.\n\nExample 2:\n\nInput: n = 2\nOutput: 2\nExplanation: There are 2 groups [1], [2] of size 1.\n\n \nConstraints:\n\n1 <= n <= 104\n\n", "hints": ["Count the digit sum for each integer in the range and find out the largest groups."], "exampleTestcases": "13\n2", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int countLargestGroup(int n) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int countLargestGroup(int n) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def countLargestGroup(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def countLargestGroup(self, n: int) -> int:\n        "}, "C": {"langSlug": "c", "code": "int countLargestGroup(int n) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int CountLargestGroup(int n) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} n\n * @return {number}\n */\nvar countLargestGroup = function(n) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function countLargestGroup(n: number): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function countLargestGroup($n) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func countLargestGroup(_ n: Int) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun countLargestGroup(n: Int): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int countLargestGroup(int n) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func countLargestGroup(n int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} n\n# @return {Integer}\ndef count_largest_group(n)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def countLargestGroup(n: Int): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn count_largest_group(n: i32) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (count-largest-group n)\n  (-> exact-integer? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec count_largest_group(N :: integer()) -> integer().\ncount_largest_group(N) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_largest_group(n :: integer) :: integer\n  def count_largest_group(n) do\n    \n  end\nend"}}}