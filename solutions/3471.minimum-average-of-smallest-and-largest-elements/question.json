{"questionId": "3471", "acRate": 85.43184568648275, "difficulty": "Easy", "freqBar": 21.10069847948683, "frontendQuestionId": "3194", "paidOnly": false, "status": "ac", "title": "Minimum Average of Smallest and Largest Elements", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Two Pointers", "id": "VG9waWNUYWdOb2RlOjk=", "slug": "two-pointers"}, {"name": "Sorting", "id": "VG9waWNUYWdOb2RlOjYxMDQ5", "slug": "sorting"}], "titleSlug": "minimum-average-of-smallest-and-largest-elements", "content": "<p>You have an array of floating point numbers <code>averages</code> which is initially empty. You are given an array <code>nums</code> of <code>n</code> integers where <code>n</code> is even.</p>\n\n<p>You repeat the following procedure <code>n / 2</code> times:</p>\n\n<ul>\n\t<li>Remove the <strong>smallest</strong> element, <code>minElement</code>, and the <strong>largest</strong> element <code>maxElement</code>,&nbsp;from <code>nums</code>.</li>\n\t<li>Add <code>(minElement + maxElement) / 2</code> to <code>averages</code>.</li>\n</ul>\n\n<p>Return the <strong>minimum</strong> element in <code>averages</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [7,8,3,4,15,13,4,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5.5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>step</th>\n\t\t\t<th>nums</th>\n\t\t\t<th>averages</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>[7,8,3,4,15,13,4,1]</td>\n\t\t\t<td>[]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>[7,8,3,4,13,4]</td>\n\t\t\t<td>[8]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>[7,8,4,4]</td>\n\t\t\t<td>[8,8]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>[7,4]</td>\n\t\t\t<td>[8,8,6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>[]</td>\n\t\t\t<td>[8,8,6,5.5]</td>\n\t\t</tr>\n\t</tbody>\n</table>\nThe smallest element of averages, 5.5, is returned.</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,9,8,3,10,5]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5.5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>step</th>\n\t\t\t<th>nums</th>\n\t\t\t<th>averages</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td><span class=\"example-io\">[1,9,8,3,10,5]</span></td>\n\t\t\t<td>[]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td><span class=\"example-io\">[9,8,3,5]</span></td>\n\t\t\t<td>[5.5]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td><span class=\"example-io\">[8,5]</span></td>\n\t\t\t<td>[5.5,6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>[]</td>\n\t\t\t<td>[5.5,6,6.5]</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,2,3,7,8,9]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5.0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>step</th>\n\t\t\t<th>nums</th>\n\t\t\t<th>averages</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td><span class=\"example-io\">[1,2,3,7,8,9]</span></td>\n\t\t\t<td>[]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td><span class=\"example-io\">[2,3,7,8]</span></td>\n\t\t\t<td>[5]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td><span class=\"example-io\">[3,7]</span></td>\n\t\t\t<td>[5,5]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td><span class=\"example-io\">[]</span></td>\n\t\t\t<td>[5,5,5]</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n == nums.length &lt;= 50</code></li>\n\t<li><code>n</code> is even.</li>\n\t<li><code>1 &lt;= nums[i] &lt;= 50</code></li>\n</ul>\n", "hints": ["If <code>nums</code> is sorted, then the elements of <code>averages</code> are <code>(nums[i] + nums[n - i - 1]) / 2</code>  for all <code>i < n / 2</code>."], "exampleTestcases": "[7,8,3,4,15,13,4,1]\n[1,9,8,3,10,5]\n[1,2,3,7,8,9]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    double minimumAverage(vector<int>& nums) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public double minimumAverage(int[] nums) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def minimumAverage(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: float\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def minimumAverage(self, nums: List[int]) -> float:\n        "}, {"lang": "C", "langSlug": "c", "code": "double minimumAverage(int* nums, int numsSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public double MinimumAverage(int[] nums) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar minimumAverage = function(nums) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function minimumAverage(nums: number[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Float\n     */\n    function minimumAverage($nums) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func minimumAverage(_ nums: [Int]) -> Double {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun minimumAverage(nums: IntArray): Double {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  double minimumAverage(List<int> nums) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func minimumAverage(nums []int) float64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Float}\ndef minimum_average(nums)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def minimumAverage(nums: Array[Int]): Double = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn minimum_average(nums: Vec<i32>) -> f64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (minimum-average nums)\n  (-> (listof exact-integer?) flonum?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec minimum_average(Nums :: [integer()]) -> float().\nminimum_average(Nums) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec minimum_average(nums :: [integer]) :: float\n  def minimum_average(nums) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "number-of-distinct-averages", "title": "Number of Distinct Averages", "isPaidOnly": false}]}