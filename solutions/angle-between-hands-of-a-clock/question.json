{"questionId": "1446", "acRate": 63.99604203081992, "difficulty": "Medium", "freqBar": 75.42420665645287, "frontendQuestionId": "1344", "paidOnly": false, "status": "ac", "title": "Angle Between Hands of a Clock", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}], "titleSlug": "angle-between-hands-of-a-clock", "content": "<p>Given two numbers, <code>hour</code> and <code>minutes</code>, return <em>the smaller angle (in degrees) formed between the </em><code>hour</code><em> and the </em><code>minute</code><em> hand</em>.</p>\n\n<p>Answers within <code>10<sup>-5</sup></code> of the actual value will be accepted as correct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_1_1673.png\" style=\"width: 300px; height: 296px;\" />\n<pre>\n<strong>Input:</strong> hour = 12, minutes = 30\n<strong>Output:</strong> 165\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_2_1673.png\" style=\"width: 300px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> hour = 3, minutes = 30\n<strong>Output:</strong> 75\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_3_1673.png\" style=\"width: 300px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> hour = 3, minutes = 15\n<strong>Output:</strong> 7.5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hour &lt;= 12</code></li>\n\t<li><code>0 &lt;= minutes &lt;= 59</code></li>\n</ul>\n", "hints": ["The tricky part is determining how the minute hand affects the position of the hour hand.", "Calculate the angles separately then find the difference."], "exampleTestcases": "12\n30\n3\n30\n3\n15", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    double angleClock(int hour, int minutes) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public double angleClock(int hour, int minutes) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def angleClock(self, hour, minutes):\n        \"\"\"\n        :type hour: int\n        :type minutes: int\n        :rtype: float\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def angleClock(self, hour: int, minutes: int) -> float:\n        "}, {"lang": "C", "langSlug": "c", "code": "double angleClock(int hour, int minutes) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public double AngleClock(int hour, int minutes) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} hour\n * @param {number} minutes\n * @return {number}\n */\nvar angleClock = function(hour, minutes) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function angleClock(hour: number, minutes: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $hour\n     * @param Integer $minutes\n     * @return Float\n     */\n    function angleClock($hour, $minutes) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func angleClock(_ hour: Int, _ minutes: Int) -> Double {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun angleClock(hour: Int, minutes: Int): Double {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  double angleClock(int hour, int minutes) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func angleClock(hour int, minutes int) float64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} hour\n# @param {Integer} minutes\n# @return {Float}\ndef angle_clock(hour, minutes)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def angleClock(hour: Int, minutes: Int): Double = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn angle_clock(hour: i32, minutes: i32) -> f64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (angle-clock hour minutes)\n  (-> exact-integer? exact-integer? flonum?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec angle_clock(Hour :: integer(), Minutes :: integer()) -> float().\nangle_clock(Hour, Minutes) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec angle_clock(hour :: integer, minutes :: integer) :: float\n  def angle_clock(hour, minutes) do\n    \n  end\nend"}], "similarQuestionList": []}