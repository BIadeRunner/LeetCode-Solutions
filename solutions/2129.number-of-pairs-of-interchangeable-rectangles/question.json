{"question_id": "2129", "problem_slug": "number-of-pairs-of-interchangeable-rectangles", "problem_title": "Number of Pairs of Interchangeable Rectangles", "content": "You are given n rectangles represented by a 0-indexed 2D integer array rectangles, where rectangles[i] = [widthi, heighti] denotes the width and height of the ith rectangle.\nTwo rectangles i and j (i < j) are considered interchangeable if they have the same width-to-height ratio. More formally, two rectangles are interchangeable if widthi/heighti == widthj/heightj (using decimal division, not integer division).\nReturn the number of pairs of interchangeable rectangles in rectangles.\n \nExample 1:\n\nInput: rectangles = [[4,8],[3,6],[10,20],[15,30]]\nOutput: 6\nExplanation: The following are the interchangeable pairs of rectangles by index (0-indexed):\n- Rectangle 0 with rectangle 1: 4/8 == 3/6.\n- Rectangle 0 with rectangle 2: 4/8 == 10/20.\n- Rectangle 0 with rectangle 3: 4/8 == 15/30.\n- Rectangle 1 with rectangle 2: 3/6 == 10/20.\n- Rectangle 1 with rectangle 3: 3/6 == 15/30.\n- Rectangle 2 with rectangle 3: 10/20 == 15/30.\n\nExample 2:\n\nInput: rectangles = [[4,5],[7,8]]\nOutput: 0\nExplanation: There are no interchangeable pairs of rectangles.\n\n \nConstraints:\n\nn == rectangles.length\n1 <= n <= 105\nrectangles[i].length == 2\n1 <= widthi, heighti <= 105\n\n", "hints": ["Store the rectangle height and width ratio in a hashmap.", "Traverse the ratios, and for each ratio, use the frequency of the ratio to add to the total pair count."], "exampleTestcases": "[[4,8],[3,6],[10,20],[15,30]]\n[[4,5],[7,8]]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    long long interchangeableRectangles(vector<vector<int>>& rectangles) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public long interchangeableRectangles(int[][] rectangles) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def interchangeableRectangles(self, rectangles):\n        \"\"\"\n        :type rectangles: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def interchangeableRectangles(self, rectangles: List[List[int]]) -> int:\n        "}, "C": {"langSlug": "c", "code": "long long interchangeableRectangles(int** rectangles, int rectanglesSize, int* rectanglesColSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public long InterchangeableRectangles(int[][] rectangles) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[][]} rectangles\n * @return {number}\n */\nvar interchangeableRectangles = function(rectangles) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function interchangeableRectangles(rectangles: number[][]): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $rectangles\n     * @return Integer\n     */\n    function interchangeableRectangles($rectangles) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func interchangeableRectangles(_ rectangles: [[Int]]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun interchangeableRectangles(rectangles: Array<IntArray>): Long {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int interchangeableRectangles(List<List<int>> rectangles) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func interchangeableRectangles(rectangles [][]int) int64 {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[][]} rectangles\n# @return {Integer}\ndef interchangeable_rectangles(rectangles)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def interchangeableRectangles(rectangles: Array[Array[Int]]): Long = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn interchangeable_rectangles(rectangles: Vec<Vec<i32>>) -> i64 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (interchangeable-rectangles rectangles)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec interchangeable_rectangles(Rectangles :: [[integer()]]) -> integer().\ninterchangeable_rectangles(Rectangles) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec interchangeable_rectangles(rectangles :: [[integer]]) :: integer\n  def interchangeable_rectangles(rectangles) do\n    \n  end\nend"}}}