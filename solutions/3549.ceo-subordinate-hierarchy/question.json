{"question_id": "3549", "problem_slug": "ceo-subordinate-hierarchy", "problem_title": "CEO Subordinate Hierarchy", "content": "Table: Employees\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| employee_id   | int     |\n| employee_name | varchar |\n| manager_id    | int     |\n| salary        | int     |\n+---------------+---------+\nemployee_id is the unique identifier for this table.\nmanager_id is the employee_id of the employee's manager. The CEO has a NULL manager_id.\n\nWrite a solution to find subordinates of the CEO (both direct and indirect), along with their level in the hierarchy and their salary difference from the CEO.\nThe result should have the following columns:\nThe query result format is in the following example.\n\nsubordinate_id: The employee_id of the subordinate\nsubordinate_name: The name of the subordinate\nhierarchy_level: The level of the subordinate in the hierarchy (1 for direct reports, 2 for their direct reports, and so on)\nsalary_difference: The difference between the subordinate's salary and the CEO's salary\n\nReturn the result table ordered by hierarchy_level ascending, and then by subordinate_id ascending.\nThe query result format is in the following example.\nÂ \nExample:\n\nInput:\nEmployees table:\n\n+-------------+----------------+------------+---------+\n| employee_id | employee_name  | manager_id | salary  |\n+-------------+----------------+------------+---------+\n| 1           | Alice          | NULL       | 150000  |\n| 2           | Bob            | 1          | 120000  |\n| 3           | Charlie        | 1          | 110000  |\n| 4           | David          | 2          | 105000  |\n| 5           | Eve            | 2          | 100000  |\n| 6           | Frank          | 3          | 95000   |\n| 7           | Grace          | 3          | 98000   |\n| 8           | Helen          | 5          | 90000   |\n+-------------+----------------+------------+---------+\n\nOutput:\n\n+----------------+------------------+------------------+-------------------+\n| subordinate_id | subordinate_name | hierarchy_level  | salary_difference |\n+----------------+------------------+------------------+-------------------+\n| 2              | Bob              | 1                | -30000            |\n| 3              | Charlie          | 1                | -40000            |\n| 4              | David            | 2                | -45000            |\n| 5              | Eve              | 2                | -50000            |\n| 6              | Frank            | 2                | -55000            |\n| 7              | Grace            | 2                | -52000            |\n| 8              | Helen            | 3                | -60000            |\n+----------------+------------------+------------------+-------------------+\n\nExplanation:\n\nBob and Charlie are direct subordinates of Alice (CEO) and thus have a hierarchy_level of 1.\nDavid and Eve report to Bob, while Frank and Grace report to Charlie, making them second-level subordinates (hierarchy_level 2).\nHelen reports to Eve, making Helen a third-level subordinate (hierarchy_level 3).\nSalary differences are calculated relative to Alice's salary of 150000.\nThe result is ordered by hierarchy_level ascending, and then by subordinate_id ascending.\n\nNote: The output is ordered first by hierarchy_level in ascending order, then by subordinate_id in ascending order.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Employees\":[\"employee_id\",\"employee_name\",\"manager_id\",\"salary\"]},\"rows\":{\"Employees\":[[1,\"Alice\",null,150000],[2,\"Bob\",1,120000],[3,\"Charlie\",1,110000],[4,\"David\",2,105000],[5,\"Eve\",2,100000],[6,\"Frank\",3,95000],[7,\"Grace\",3,98000],[8,\"Helen\",5,90000]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_subordinates(employees: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}