{"question_id": "3405", "problem_slug": "count-the-number-of-special-characters-ii", "problem_title": "Count the Number of Special Characters II", "content": "You are given a string word. A letter c is called special if it appears both in lowercase and uppercase in word, and every lowercase occurrence of c appears before the first uppercase occurrence of c.\nReturn the number of special letters in word.\n \nExample 1:\n\nInput: word = \"aaAbcBC\"\nOutput: 3\nExplanation:\nThe special characters are 'a', 'b', and 'c'.\n\nExample 2:\n\nInput: word = \"abc\"\nOutput: 0\nExplanation:\nThere are no special characters in word.\n\nExample 3:\n\nInput: word = \"AbBCab\"\nOutput: 0\nExplanation:\nThere are no special characters in word.\n\n \nConstraints:\n\n1 <= word.length <= 2 * 105\nword consists of only lowercase and uppercase English letters.\n\n", "hints": ["For each character <code>c</code>, store the first occurrence of its uppercase and the last occurrence of its lowercase."], "exampleTestcases": "\"aaAbcBC\"\n\"abc\"\n\"AbBCab\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int numberOfSpecialChars(string word) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int numberOfSpecialChars(String word) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def numberOfSpecialChars(self, word):\n        \"\"\"\n        :type word: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def numberOfSpecialChars(self, word: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int numberOfSpecialChars(char* word) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int NumberOfSpecialChars(string word) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} word\n * @return {number}\n */\nvar numberOfSpecialChars = function(word) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function numberOfSpecialChars(word: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @return Integer\n     */\n    function numberOfSpecialChars($word) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func numberOfSpecialChars(_ word: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun numberOfSpecialChars(word: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int numberOfSpecialChars(String word) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func numberOfSpecialChars(word string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} word\n# @return {Integer}\ndef number_of_special_chars(word)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def numberOfSpecialChars(word: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn number_of_special_chars(word: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (number-of-special-chars word)\n  (-> string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec number_of_special_chars(Word :: unicode:unicode_binary()) -> integer().\nnumber_of_special_chars(Word) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec number_of_special_chars(word :: String.t) :: integer\n  def number_of_special_chars(word) do\n    \n  end\nend"}}}