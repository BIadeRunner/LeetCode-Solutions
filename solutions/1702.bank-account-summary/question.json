{"question_id": "1702", "problem_slug": "bank-account-summary", "problem_title": "Bank Account Summary", "content": "Table: Users\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| user_id      | int     |\n| user_name    | varchar |\n| credit       | int     |\n+--------------+---------+\nuser_id is the primary key (column with unique values) for this table.\nEach row of this table contains the current credit information for each user.\n\n \nTable: Transactions\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| trans_id      | int     |\n| paid_by       | int     |\n| paid_to       | int     |\n| amount        | int     |\n| transacted_on | date    |\n+---------------+---------+\ntrans_id is the primary key (column with unique values) for this table.\nEach row of this table contains information about the transaction in the bank.\nUser with id (paid_by) transfer money to user with id (paid_to).\n\n \nLeetcode Bank (LCB) helps its coders in making virtual payments. Our bank records all transactions in the table Transaction, we want to find out the current balance of all users and check whether they have breached their credit limit (If their current credit is less than 0).\nWrite a solution to report.\n\nuser_id,\nuser_name,\ncredit, current balance after performing transactions, and\ncredit_limit_breached, check credit_limit (\"Yes\" or \"No\")\n\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nUsers table:\n+------------+--------------+-------------+\n| user_id    | user_name    | credit      |\n+------------+--------------+-------------+\n| 1          | Moustafa     | 100         |\n| 2          | Jonathan     | 200         |\n| 3          | Winston      | 10000       |\n| 4          | Luis         | 800         | \n+------------+--------------+-------------+\nTransactions table:\n+------------+------------+------------+----------+---------------+\n| trans_id   | paid_by    | paid_to    | amount   | transacted_on |\n+------------+------------+------------+----------+---------------+\n| 1          | 1          | 3          | 400      | 2020-08-01    |\n| 2          | 3          | 2          | 500      | 2020-08-02    |\n| 3          | 2          | 1          | 200      | 2020-08-03    |\n+------------+------------+------------+----------+---------------+\nOutput: \n+------------+------------+------------+-----------------------+\n| user_id    | user_name  | credit     | credit_limit_breached |\n+------------+------------+------------+-----------------------+\n| 1          | Moustafa   | -100       | Yes                   | \n| 2          | Jonathan   | 500        | No                    |\n| 3          | Winston    | 9900       | No                    |\n| 4          | Luis       | 800        | No                    |\n+------------+------------+------------+-----------------------+\nExplanation: \nMoustafa paid $400 on \"2020-08-01\" and received $200 on \"2020-08-03\", credit (100 -400 +200) = -$100\nJonathan received $500 on \"2020-08-02\" and paid $200 on \"2020-08-08\", credit (200 +500 -200) = $500\nWinston received $400 on \"2020-08-01\" and paid $500 on \"2020-08-03\", credit (10000 +400 -500) = $9990\nLuis did not received any transfer, credit = $800\n\n", "hints": [], "exampleTestcases": "{\"headers\": {\"Users\": [\"user_id\", \"user_name\", \"credit\"], \"Transactions\": [\"trans_id\", \"paid_by\", \"paid_to\", \"amount\", \"transacted_on\"]}, \"rows\": {\"Users\": [[1, \"Moustafa\", 100], [2, \"Jonathan\", 200], [3, \"Winston\", 10000], [4, \"Luis\", 800]], \"Transactions\": [[1, 1, 3, 400, \"2020-08-01\"], [2, 3, 2, 500, \"2020-08-02\"], [3, 2, 1, 200, \"2020-08-03\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef bank_account_summary(users: pd.DataFrame, transactions: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}