{"questionId": "510", "acRate": 51.570989841719815, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2031", "paidOnly": true, "status": "ac", "title": "Count Subarrays With More Ones Than Zeros", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Binary Search", "id": "VG9waWNUYWdOb2RlOjEx", "slug": "binary-search"}, {"name": "Divide and Conquer", "id": "VG9waWNUYWdOb2RlOjEy", "slug": "divide-and-conquer"}, {"name": "Binary Indexed Tree", "id": "VG9waWNUYWdOb2RlOjI4", "slug": "binary-indexed-tree"}, {"name": "Segment Tree", "id": "VG9waWNUYWdOb2RlOjI5", "slug": "segment-tree"}, {"name": "Merge Sort", "id": "VG9waWNUYWdOb2RlOjYxMDUx", "slug": "merge-sort"}, {"name": "Ordered Set", "id": "VG9waWNUYWdOb2RlOjYxMDcw", "slug": "ordered-set"}], "titleSlug": "count-subarrays-with-more-ones-than-zeros", "content": "<p>You are given a binary array <code>nums</code> containing only the integers <code>0</code> and <code>1</code>. Return<em> the number of <strong>subarrays</strong> in nums that have <strong>more</strong> </em><code>1</code>&#39;<em>s than </em><code>0</code><em>&#39;s. Since the answer may be very large, return it <strong>modulo</strong> </em><code>10<sup>9</sup> + 7</code>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous sequence of elements within an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,1,0,1]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong>\nThe subarrays of size 1 that have more ones than zeros are: [1], [1], [1]\nThe subarrays of size 2 that have more ones than zeros are: [1,1]\nThe subarrays of size 3 that have more ones than zeros are: [0,1,1], [1,1,0], [1,0,1]\nThe subarrays of size 4 that have more ones than zeros are: [1,1,0,1]\nThe subarrays of size 5 that have more ones than zeros are: [0,1,1,0,1]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nNo subarrays have more ones than zeros.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nThe subarrays of size 1 that have more ones than zeros are: [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1</code></li>\n</ul>\n", "hints": ["Change the zeros in nums to -1 and create a prefix sum array prefixSum using the new nums.", "If prefixSum[i] for any index i in the range 0 <= i < prefixSum.length is positive, that means that there are more ones than zeros in the prefix ending at index i.", "If prefixSum[j] > prefixSum[i] for two indexes i and j such that 0 <= i < j < prefixSum.length, that means that there are more ones than zeros in nums in the range [i + 1 : j] (inclusive)"], "exampleTestcases": "[0,1,1,0,1]\n[0]\n[1]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int subarraysWithMoreZerosThanOnes(vector<int>& nums) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int subarraysWithMoreZerosThanOnes(int[] nums) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def subarraysWithMoreZerosThanOnes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def subarraysWithMoreZerosThanOnes(self, nums: List[int]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int subarraysWithMoreZerosThanOnes(int* nums, int numsSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int SubarraysWithMoreZerosThanOnes(int[] nums) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar subarraysWithMoreZerosThanOnes = function(nums) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function subarraysWithMoreZerosThanOnes(nums: number[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function subarraysWithMoreZerosThanOnes($nums) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func subarraysWithMoreZerosThanOnes(_ nums: [Int]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun subarraysWithMoreZerosThanOnes(nums: IntArray): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int subarraysWithMoreZerosThanOnes(List<int> nums) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func subarraysWithMoreZerosThanOnes(nums []int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef subarrays_with_more_zeros_than_ones(nums)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def subarraysWithMoreZerosThanOnes(nums: Array[Int]): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn subarrays_with_more_zeros_than_ones(nums: Vec<i32>) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (subarrays-with-more-zeros-than-ones nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec subarrays_with_more_zeros_than_ones(Nums :: [integer()]) -> integer().\nsubarrays_with_more_zeros_than_ones(Nums) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec subarrays_with_more_zeros_than_ones(nums :: [integer]) :: integer\n  def subarrays_with_more_zeros_than_ones(nums) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "ones-and-zeroes", "title": "Ones and Zeroes", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "longer-contiguous-segments-of-ones-than-zeros", "title": "Longer Contiguous Segments of Ones than Zeros", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array", "title": "All Divisions With the Highest Score of a Binary Array", "isPaidOnly": false}]}