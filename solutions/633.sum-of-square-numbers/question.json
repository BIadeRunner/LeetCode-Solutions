{"question_id": "633", "problem_slug": "sum-of-square-numbers", "problem_title": "Sum of Square Numbers", "content": "Given a non-negative integer c, decide whether there're two integers a and b such that a2 + b2 = c.\n \nExample 1:\n\nInput: c = 5\nOutput: true\nExplanation: 1 * 1 + 2 * 2 = 5\n\nExample 2:\n\nInput: c = 3\nOutput: false\n\n \nConstraints:\n\n0 <= c <= 231 - 1\n\n", "hints": [], "exampleTestcases": "5\n3", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    bool judgeSquareSum(int c) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public boolean judgeSquareSum(int c) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def judgeSquareSum(self, c):\n        \"\"\"\n        :type c: int\n        :rtype: bool\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def judgeSquareSum(self, c: int) -> bool:\n        "}, "C": {"langSlug": "c", "code": "bool judgeSquareSum(int c) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public bool JudgeSquareSum(int c) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} c\n * @return {boolean}\n */\nvar judgeSquareSum = function(c) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function judgeSquareSum(c: number): boolean {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $c\n     * @return Boolean\n     */\n    function judgeSquareSum($c) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func judgeSquareSum(_ c: Int) -> Bool {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun judgeSquareSum(c: Int): Boolean {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  bool judgeSquareSum(int c) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func judgeSquareSum(c int) bool {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} c\n# @return {Boolean}\ndef judge_square_sum(c)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def judgeSquareSum(c: Int): Boolean = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn judge_square_sum(c: i32) -> bool {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (judge-square-sum c)\n  (-> exact-integer? boolean?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec judge_square_sum(C :: integer()) -> boolean().\njudge_square_sum(C) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec judge_square_sum(c :: integer) :: boolean\n  def judge_square_sum(c) do\n    \n  end\nend"}}}