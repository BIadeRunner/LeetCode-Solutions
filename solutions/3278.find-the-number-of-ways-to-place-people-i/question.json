{"questionId": "3278", "acRate": 41.70394527980606, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "3025", "paidOnly": false, "status": "ac", "title": "Find the Number of Ways to Place People I", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "Geometry", "id": "VG9waWNUYWdOb2RlOjM4", "slug": "geometry"}, {"name": "Sorting", "id": "VG9waWNUYWdOb2RlOjYxMDQ5", "slug": "sorting"}, {"name": "Enumeration", "id": "VG9waWNUYWdOb2RlOjYxMDY2", "slug": "enumeration"}], "titleSlug": "find-the-number-of-ways-to-place-people-i", "content": "<p>You are given a 2D array <code>points</code> of size <code>n x 2</code> representing integer coordinates of some points on a 2D plane, where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>.</p>\n\n<p>Count the number of pairs of points <code>(A, B)</code>, where</p>\n\n<ul>\n\t<li><code>A</code> is on the <strong>upper left</strong> side of <code>B</code>, and</li>\n\t<li>there are no other points in the rectangle (or line) they make (<strong>including the border</strong>).</li>\n</ul>\n\n<p>Return the count.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">points = [[1,1],[2,2],[3,3]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/01/04/example1alicebob.png\" style=\"width: 427px; height: 350px;\" /></p>\n\n<p>There is no way to choose <code>A</code> and <code>B</code> so <code>A</code> is on the upper left side of <code>B</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">points = [[6,2],[4,4],[2,6]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img height=\"365\" src=\"https://assets.leetcode.com/uploads/2024/06/25/t2.jpg\" width=\"1321\" /></p>\n\n<ul>\n\t<li>The left one is the pair <code>(points[1], points[0])</code>, where <code>points[1]</code> is on the upper left side of <code>points[0]</code> and the rectangle is empty.</li>\n\t<li>The middle one is the pair <code>(points[2], points[1])</code>, same as the left one it is a valid pair.</li>\n\t<li>The right one is the pair <code>(points[2], points[0])</code>, where <code>points[2]</code> is on the upper left side of <code>points[0]</code>, but <code>points[1]</code> is inside the rectangle so it&#39;s not a valid pair.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">points = [[3,1],[1,3],[1,1]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/06/25/t3.jpg\" style=\"width: 1269px; height: 350px;\" /></p>\n\n<ul>\n\t<li>The left one is the pair <code>(points[2], points[0])</code>, where <code>points[2]</code> is on the upper left side of <code>points[0]</code> and there are no other points on the line they form. Note that it is a valid state when the two points form a line.</li>\n\t<li>The middle one is the pair <code>(points[1], points[2])</code>, it is a valid pair same as the left one.</li>\n\t<li>The right one is the pair <code>(points[1], points[0])</code>, it is not a valid pair as <code>points[2]</code> is on the border of the rectangle.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 50</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= points[i][0], points[i][1] &lt;= 50</code></li>\n\t<li>All <code>points[i]</code> are distinct.</li>\n</ul>\n", "hints": ["We can enumerate all the upper-left and lower-right corners.", "If the upper-left corner is <code>(x1, y1)</code> and lower-right corner is <code>(x2, y2)</code>, check that there is no point <code>(x, y)</code> such that <code>x1 <= x <= x2</code> and <code>y2 <= y <= y1</code>."], "exampleTestcases": "[[1,1],[2,2],[3,3]]\n[[6,2],[4,4],[2,6]]\n[[3,1],[1,3],[1,1]]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int numberOfPairs(vector<vector<int>>& points) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int numberOfPairs(int[][] points) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def numberOfPairs(self, points):\n        \"\"\"\n        :type points: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def numberOfPairs(self, points: List[List[int]]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int numberOfPairs(int** points, int pointsSize, int* pointsColSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int NumberOfPairs(int[][] points) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} points\n * @return {number}\n */\nvar numberOfPairs = function(points) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function numberOfPairs(points: number[][]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $points\n     * @return Integer\n     */\n    function numberOfPairs($points) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func numberOfPairs(_ points: [[Int]]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun numberOfPairs(points: Array<IntArray>): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int numberOfPairs(List<List<int>> points) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func numberOfPairs(points [][]int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} points\n# @return {Integer}\ndef number_of_pairs(points)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def numberOfPairs(points: Array[Array[Int]]): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn number_of_pairs(points: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (number-of-pairs points)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec number_of_pairs(Points :: [[integer()]]) -> integer().\nnumber_of_pairs(Points) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec number_of_pairs(points :: [[integer]]) :: integer\n  def number_of_pairs(points) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "rectangle-area", "title": "Rectangle Area", "isPaidOnly": false}]}