{"question_id": "1239", "problem_slug": "largest-1-bordered-square", "problem_title": "Largest 1-Bordered Square", "content": "Given a 2D grid of 0s and 1s, return the number of elements in the largest square subgrid that has all 1s on its border, or 0 if such a subgrid doesn't exist in the grid.\n \nExample 1:\n\r\nInput: grid = [[1,1,1],[1,0,1],[1,1,1]]\r\nOutput: 9\r\n\nExample 2:\n\r\nInput: grid = [[1,1,0,0]]\r\nOutput: 1\r\n\n \nConstraints:\n\n1 <= grid.length <= 100\n1 <= grid[0].length <= 100\ngrid[i][j] is 0 or 1\n", "hints": ["For each square, know how many ones are up, left, down, and right of this square. You can find it in O(N^2) using dynamic programming.", "Now for each square ( O(N^3) ), we can evaluate whether that square is 1-bordered in O(1)."], "exampleTestcases": "[[1,1,1],[1,0,1],[1,1,1]]\n[[1,1,0,0]]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int largest1BorderedSquare(vector<vector<int>>& grid) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int largest1BorderedSquare(int[][] grid) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def largest1BorderedSquare(self, grid):\n        \"\"\"\n        :type grid: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def largest1BorderedSquare(self, grid: List[List[int]]) -> int:\n        "}, "C": {"langSlug": "c", "code": "\n\nint largest1BorderedSquare(int** grid, int gridSize, int* gridColSize){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int Largest1BorderedSquare(int[][] grid) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar largest1BorderedSquare = function(grid) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function largest1BorderedSquare(grid: number[][]): number {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $grid\n     * @return Integer\n     */\n    function largest1BorderedSquare($grid) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func largest1BorderedSquare(_ grid: [[Int]]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun largest1BorderedSquare(grid: Array<IntArray>): Int {\n        \n    }\n}"}, "Go": {"langSlug": "golang", "code": "func largest1BorderedSquare(grid [][]int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[][]} grid\n# @return {Integer}\ndef largest1_bordered_square(grid)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def largest1BorderedSquare(grid: Array[Array[Int]]): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn largest1_bordered_square(grid: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"}}}