{"question_id": "3285", "problem_slug": "manager-of-the-largest-department", "problem_title": "Manager of the Largest Department", "content": "Table: Employees\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| emp_id      | int     |\n| emp_name    | varchar |\n| dep_id      | int     |\n| position    | varchar |\n+-------------+---------+\nemp_id is column of unique values for this table.\nThis table contains emp_id, emp_name, dep_id, and position.\n\nWrite a solution to find the name of the manager from the largest department. There may be multiple largest departments when the number of employees in those departments is the same.\nReturn the result table sorted by dep_id in ascending order.\nThe result format is in the following example.\nÂ \nExample 1:\n\nInput: \nEmployees table:\n+--------+----------+--------+---------------+\n| emp_id | emp_name | dep_id | position      | \n+--------+----------+--------+---------------+\n| 156    | Michael  | 107    | Manager       |\n| 112    | Lucas    | 107    | Consultant    |    \n| 8      | Isabella | 101    | Manager       | \n| 160    | Joseph   | 100    | Manager       | \n| 80     | Aiden    | 100    | Engineer      | \n| 190    | Skylar   | 100    | Freelancer    | \n| 196    | Stella   | 101    | Coordinator   |\n| 167    | Audrey   | 100    | Consultant    |\n| 97     | Nathan   | 101    | Supervisor    |\n| 128    | Ian      | 101    | Administrator |\n| 81     | Ethan    | 107    | Administrator |\n+--------+----------+--------+---------------+\nOutput\n+--------------+--------+\n| manager_name | dep_id | \n+--------------+--------+\n| Joseph       | 100    | \n| Isabella     | 101    | \n+--------------+--------+\nExplanation\n- Departments with IDs 100 and 101 each has a total of 4 employees, while department 107 has 3 employees. Since both departments 100 and 101 have an equal number of employees, their respective managers will be included.\nOutput table is ordered by dep_id in ascending order.\n\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Employees\":[\"emp_id\",\"emp_name\",\"dep_id\",\"position\"]},\"rows\":{\"Employees\":[[156,\"Michael\",107,\"Manager\"],[112,\"Lucas\",107,\"Consultant\"],[8,\"Isabella\",101,\"Manager\"],[160,\"Joseph\",100,\"Manager\"],[80,\"Aiden\",100,\"Engineer\"],[190,\"Skylar\",100,\"Freelancer\"],[196,\"Stella\",101,\"Coordinator\"],[167,\"Audrey\",100,\"Consultant\"],[97,\"Nathan\",101,\"Supervisor\"],[128,\"Ian\",101,\"Administrator\"],[81,\"Ethan\",107,\"Administrator\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_manager(employees: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}