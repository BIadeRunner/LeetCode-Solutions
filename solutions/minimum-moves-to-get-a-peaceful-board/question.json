{"questionId": "3504", "acRate": 76.93301347112013, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "3189", "paidOnly": true, "status": "ac", "title": "Minimum Moves to Get a Peaceful Board", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Greedy", "id": "VG9waWNUYWdOb2RlOjE3", "slug": "greedy"}, {"name": "Sorting", "id": "VG9waWNUYWdOb2RlOjYxMDQ5", "slug": "sorting"}, {"name": "Counting Sort", "id": "VG9waWNUYWdOb2RlOjYxMDcy", "slug": "counting-sort"}], "titleSlug": "minimum-moves-to-get-a-peaceful-board", "content": "<p>Given a 2D array <code>rooks</code> of length <code>n</code>, where <code>rooks[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> indicates the position of a rook on an <code>n x n</code> chess board. Your task is to move the rooks <strong>1 cell </strong>at a time vertically or horizontally (to an <em>adjacent</em> cell) such that the board becomes <strong>peaceful</strong>.</p>\n\n<p>A board is <strong>peaceful</strong> if there is <strong>exactly</strong> one rook in each row and each column.</p>\n\n<p>Return the <strong>minimum</strong> number of moves required to get a <em>peaceful board</em>.</p>\n\n<p><strong>Note</strong> that <strong>at no point</strong> can there be two rooks in the same cell.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">rooks = [[0,0],[1,0],[1,1]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/06/17/ex1-edited.gif\" style=\"width: 150px; height: 150px;\" /></div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">rooks = [[0,0],[0,1],[0,2],[0,3]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">6</span></p>\n\n<p><strong>Explanation:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/06/17/ex2-edited.gif\" style=\"width: 200px; height: 200px;\" /></div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n == rooks.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= n - 1</code></li>\n\t<li>The input is generated such that there are no 2 rooks in the same cell.</li>\n</ul>\n", "hints": ["Think of a greedy method.", "First, distribute the rooks in individual rows.", "You can do this by sorting all rooks by their rows. Then assign the first one to the first row, the second one to the second row, and so on.", "After you've distributed rooks across all rows, now do the same for columns.", "Sort rooks by their columns and then assign the first one to the first column and so on."], "exampleTestcases": "[[0,0],[1,0],[1,1]]\n[[0,0],[0,1],[0,2],[0,3]]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int minMoves(vector<vector<int>>& rooks) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int minMoves(int[][] rooks) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def minMoves(self, rooks):\n        \"\"\"\n        :type rooks: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def minMoves(self, rooks: List[List[int]]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int minMoves(int** rooks, int rooksSize, int* rooksColSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int MinMoves(int[][] rooks) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} rooks\n * @return {number}\n */\nvar minMoves = function(rooks) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function minMoves(rooks: number[][]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $rooks\n     * @return Integer\n     */\n    function minMoves($rooks) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func minMoves(_ rooks: [[Int]]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun minMoves(rooks: Array<IntArray>): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int minMoves(List<List<int>> rooks) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func minMoves(rooks [][]int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} rooks\n# @return {Integer}\ndef min_moves(rooks)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def minMoves(rooks: Array[Array[Int]]): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn min_moves(rooks: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (min-moves rooks)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec min_moves(Rooks :: [[integer()]]) -> integer().\nmin_moves(Rooks) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec min_moves(rooks :: [[integer]]) :: integer\n  def min_moves(rooks) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Hard", "titleSlug": "transform-to-chessboard", "title": "Transform to Chessboard", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "most-stones-removed-with-same-row-or-column", "title": "Most Stones Removed with Same Row or Column", "isPaidOnly": false}]}