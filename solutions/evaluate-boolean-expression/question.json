{"questionId": "1565", "acRate": 72.65134242240939, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "1440", "paidOnly": true, "status": "ac", "title": "Evaluate Boolean Expression", "topicTags": [{"name": "Database", "id": "VG9waWNUYWdOb2RlOjYxMDQz", "slug": "database"}], "titleSlug": "evaluate-boolean-expression", "content": "<p>Table <code>Variables</code>:</p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| name          | varchar |\n| value         | int     |\n+---------------+---------+\nIn SQL, name is the primary key for this table.\nThis table contains the stored variables and their values.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table <code>Expressions</code>:</p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| left_operand  | varchar |\n| operator      | enum    |\n| right_operand | varchar |\n+---------------+---------+\nIn SQL, (left_operand, operator, right_operand) is the primary key for this table.\nThis table contains a boolean expression that should be evaluated.\noperator is an enum that takes one of the values (&#39;&lt;&#39;, &#39;&gt;&#39;, &#39;=&#39;)\nThe values of left_operand and right_operand are guaranteed to be in the Variables table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Evaluate the boolean expressions in <code>Expressions</code> table.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nVariables table:\n+------+-------+\n| name | value |\n+------+-------+\n| x    | 66    |\n| y    | 77    |\n+------+-------+\nExpressions table:\n+--------------+----------+---------------+\n| left_operand | operator | right_operand |\n+--------------+----------+---------------+\n| x            | &gt;        | y             |\n| x            | &lt;        | y             |\n| x            | =        | y             |\n| y            | &gt;        | x             |\n| y            | &lt;        | x             |\n| x            | =        | x             |\n+--------------+----------+---------------+\n<strong>Output:</strong> \n+--------------+----------+---------------+-------+\n| left_operand | operator | right_operand | value |\n+--------------+----------+---------------+-------+\n| x            | &gt;        | y             | false |\n| x            | &lt;        | y             | true  |\n| x            | =        | y             | false |\n| y            | &gt;        | x             | true  |\n| y            | &lt;        | x             | false |\n| x            | =        | x             | true  |\n+--------------+----------+---------------+-------+\n<strong>Explanation:</strong> \nAs shown, you need to find the value of each boolean expression in the table using the variables table.\n</pre>\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Variables\":[\"name\",\"value\"],\"Expressions\":[\"left_operand\",\"operator\",\"right_operand\"]},\"rows\":{\"Variables\":[[\"x\",66],[\"y\",77]],\"Expressions\":[[\"x\",\">\",\"y\"],[\"x\",\"<\",\"y\"],[\"x\",\"=\",\"y\"],[\"y\",\">\",\"x\"],[\"y\",\"<\",\"x\"],[\"x\",\"=\",\"x\"]]}}", "codeSnippets": [{"lang": "MySQL", "langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, {"lang": "MS SQL Server", "langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, {"lang": "Oracle", "langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, {"lang": "Pandas", "langSlug": "pythondata", "code": "import pandas as pd\n\ndef eval_expression(variables: pd.DataFrame, expressions: pd.DataFrame) -> pd.DataFrame:\n    "}, {"lang": "PostgreSQL", "langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}], "similarQuestionList": []}