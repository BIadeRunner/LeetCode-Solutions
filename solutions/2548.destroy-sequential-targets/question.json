{"questionId": "2548", "acRate": 39.90063424947146, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2453", "paidOnly": false, "status": "ac", "title": "Destroy Sequential Targets", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "Counting", "id": "VG9waWNUYWdOb2RlOjYxMDYy", "slug": "counting"}], "titleSlug": "destroy-sequential-targets", "content": "<p>You are given a <strong>0-indexed</strong> array <code>nums</code> consisting of positive integers, representing targets on a number line. You are also given an integer <code>space</code>.</p>\n\n<p>You have a machine which can destroy targets. <strong>Seeding</strong> the machine with some <code>nums[i]</code> allows it to destroy all targets with values that can be represented as <code>nums[i] + c * space</code>, where <code>c</code> is any non-negative integer. You want to destroy the <strong>maximum</strong> number of targets in <code>nums</code>.</p>\n\n<p>Return<em> the <strong>minimum value</strong> of </em><code>nums[i]</code><em> you can seed the machine with to destroy the maximum number of targets.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,7,8,1,1,5], space = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> If we seed the machine with nums[3], then we destroy all targets equal to 1,3,5,7,9,... \nIn this case, we would destroy 5 total targets (all except for nums[2]). \nIt is impossible to destroy more than 5 targets, so we return nums[3].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,2,4,6], space = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Seeding the machine with nums[0], or nums[3] destroys 3 targets. \nIt is not possible to destroy more than 3 targets.\nSince nums[0] is the minimal integer that can destroy 3 targets, we return 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,2,5], space = 100\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Whatever initial seed we select, we can only destroy 1 target. The minimal seed is nums[1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= space &lt;=&nbsp;10<sup>9</sup></code></li>\n</ul>\n", "hints": ["Keep track of nums[i] modulo k.", "Iterate over nums in sorted order."], "exampleTestcases": "[3,7,8,1,1,5]\n2\n[1,3,5,2,4,6]\n2\n[6,2,5]\n100", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int destroyTargets(vector<int>& nums, int space) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int destroyTargets(int[] nums, int space) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def destroyTargets(self, nums, space):\n        \"\"\"\n        :type nums: List[int]\n        :type space: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def destroyTargets(self, nums: List[int], space: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int destroyTargets(int* nums, int numsSize, int space) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int DestroyTargets(int[] nums, int space) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @param {number} space\n * @return {number}\n */\nvar destroyTargets = function(nums, space) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function destroyTargets(nums: number[], space: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $space\n     * @return Integer\n     */\n    function destroyTargets($nums, $space) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func destroyTargets(_ nums: [Int], _ space: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun destroyTargets(nums: IntArray, space: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int destroyTargets(List<int> nums, int space) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func destroyTargets(nums []int, space int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @param {Integer} space\n# @return {Integer}\ndef destroy_targets(nums, space)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def destroyTargets(nums: Array[Int], space: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn destroy_targets(nums: Vec<i32>, space: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (destroy-targets nums space)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec destroy_targets(Nums :: [integer()], Space :: integer()) -> integer().\ndestroy_targets(Nums, Space) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec destroy_targets(nums :: [integer], space :: integer) :: integer\n  def destroy_targets(nums, space) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Hard", "titleSlug": "arithmetic-slices-ii-subsequence", "title": "Arithmetic Slices II - Subsequence", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60", "title": "Pairs of Songs With Total Durations Divisible by 60", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "longest-arithmetic-subsequence", "title": "Longest Arithmetic Subsequence", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "longest-arithmetic-subsequence-of-given-difference", "title": "Longest Arithmetic Subsequence of Given Difference", "isPaidOnly": false}]}