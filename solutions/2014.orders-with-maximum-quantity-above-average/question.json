{"question_id": "2014", "problem_slug": "orders-with-maximum-quantity-above-average", "problem_title": "Orders With Maximum Quantity Above Average", "content": "Table: OrdersDetails\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| order_id    | int  |\n| product_id  | int  |\n| quantity    | int  |\n+-------------+------+\n(order_id, product_id) is the primary key (combination of columns with unique values) for this table.\nA single order is represented as multiple rows, one row for each product in the order.\nEach row of this table contains the quantity ordered of the product product_id in the order order_id.\n\n \nYou are running an e-commerce site that is looking for imbalanced orders. An imbalanced order is one whose maximum quantity is strictly greater than the average quantity of every order (including itself).\nThe average quantity of an order is calculated as (total quantity of all products in the order) / (number of different products in the order). The maximum quantity of an order is the highest quantity of any single product in the order.\nWrite a solution to find the order_id of all imbalanced orders.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nOrdersDetails table:\n+----------+------------+----------+\n| order_id | product_id | quantity |\n+----------+------------+----------+\n| 1        | 1          | 12       |\n| 1        | 2          | 10       |\n| 1        | 3          | 15       |\n| 2        | 1          | 8        |\n| 2        | 4          | 4        |\n| 2        | 5          | 6        |\n| 3        | 3          | 5        |\n| 3        | 4          | 18       |\n| 4        | 5          | 2        |\n| 4        | 6          | 8        |\n| 5        | 7          | 9        |\n| 5        | 8          | 9        |\n| 3        | 9          | 20       |\n| 2        | 9          | 4        |\n+----------+------------+----------+\nOutput: \n+----------+\n| order_id |\n+----------+\n| 1        |\n| 3        |\n+----------+\nExplanation: \nThe average quantity of each order is:\n- order_id=1: (12+10+15)/3 = 12.3333333\n- order_id=2: (8+4+6+4)/4 = 5.5\n- order_id=3: (5+18+20)/3 = 14.333333\n- order_id=4: (2+8)/2 = 5\n- order_id=5: (9+9)/2 = 9\n\nThe maximum quantity of each order is:\n- order_id=1: max(12, 10, 15) = 15\n- order_id=2: max(8, 4, 6, 4) = 8\n- order_id=3: max(5, 18, 20) = 20\n- order_id=4: max(2, 8) = 8\n- order_id=5: max(9, 9) = 9\n\nOrders 1 and 3 are imbalanced because they have a maximum quantity that exceeds the average quantity of every order.\n\n", "hints": [], "exampleTestcases": "{\"headers\": {\"OrdersDetails\": [\"order_id\", \"product_id\", \"quantity\"]}, \"rows\": {\"OrdersDetails\": [[1 ,1, 12], [1 ,2, 10], [1 ,3, 15], [2 ,1, 8], [2 ,4, 4], [2 ,5, 6], [3 , 3, 5], [3 ,4, 18], [4 ,5, 2], [4 ,6, 8], [5 ,7, 9], [5 ,8, 9], [3 ,9, 20], [2 ,9, 4]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef orders_above_average(orders_details: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}