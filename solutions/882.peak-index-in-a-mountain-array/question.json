{"question_id": "882", "problem_slug": "peak-index-in-a-mountain-array", "problem_title": "Peak Index in a Mountain Array", "content": "You are given an integer mountain array arr of length n where the values increase to a peak element and then decrease.\nReturn the index of the peak element.\nYour task is to solve it in O(log(n)) time complexity.\n \nExample 1:\n\nInput: arr = [0,1,0]\nOutput: 1\n\nExample 2:\n\nInput: arr = [0,2,1,0]\nOutput: 1\n\nExample 3:\n\nInput: arr = [0,10,5,2]\nOutput: 1\n\n \nConstraints:\n\n3 <= arr.length <= 105\n0 <= arr[i] <= 106\narr is guaranteed to be a mountain array.\n\n", "hints": [], "exampleTestcases": "[0,1,0]\n[0,2,1,0]\n[0,10,5,2]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int peakIndexInMountainArray(vector<int>& arr) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int peakIndexInMountainArray(int[] arr) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def peakIndexInMountainArray(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def peakIndexInMountainArray(self, arr: List[int]) -> int:\n        "}, "C": {"langSlug": "c", "code": "int peakIndexInMountainArray(int* arr, int arrSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int PeakIndexInMountainArray(int[] arr) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[]} arr\n * @return {number}\n */\nvar peakIndexInMountainArray = function(arr) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function peakIndexInMountainArray(arr: number[]): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $arr\n     * @return Integer\n     */\n    function peakIndexInMountainArray($arr) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func peakIndexInMountainArray(_ arr: [Int]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun peakIndexInMountainArray(arr: IntArray): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int peakIndexInMountainArray(List<int> arr) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func peakIndexInMountainArray(arr []int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[]} arr\n# @return {Integer}\ndef peak_index_in_mountain_array(arr)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def peakIndexInMountainArray(arr: Array[Int]): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn peak_index_in_mountain_array(arr: Vec<i32>) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (peak-index-in-mountain-array arr)\n  (-> (listof exact-integer?) exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec peak_index_in_mountain_array(Arr :: [integer()]) -> integer().\npeak_index_in_mountain_array(Arr) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec peak_index_in_mountain_array(arr :: [integer]) :: integer\n  def peak_index_in_mountain_array(arr) do\n    \n  end\nend"}}}