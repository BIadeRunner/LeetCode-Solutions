{"question_id": "3282", "problem_slug": "calculate-compressed-mean", "problem_title": "Calculate Compressed Mean", "content": "Table: Orders\n\n+-------------------+------+\n| Column Name       | Type |\n+-------------------+------+\n| order_id          | int  |\n| item_count        | int  |\n| order_occurrences | int  |\n+-------------------+------+\norder_id is column of unique values for this table.\nThis table contains order_id, item_count, and order_occurrences.\n\nWrite a solution to calculate the average number of items per order, rounded to 2 decimal places.\nReturn the result table in any order.\nThe result format is in the following example.\nÂ \nExample 1:\n\nInput: \nOrders table:\n+----------+------------+-------------------+\n| order_id | item_count | order_occurrences | \n+----------+------------+-------------------+\n| 10       | 1          | 500               | \n| 11       | 2          | 1000              |     \n| 12       | 3          | 800               |  \n| 13       | 4          | 1000              | \n+----------+------------+-------------------+\nOutput\n+-------------------------+\n| average_items_per_order | \n+-------------------------+\n| 2.70                    |\n+-------------------------+\nExplanation\nThe calculation is as follows:\n - Total items: (1 * 500) + (2 * 1000) + (3 * 800) + (4 * 1000) = 8900 \n - Total orders: 500 + 1000 + 800 + 1000 = 3300 \n - Therefore, the average items per order is 8900 / 3300 = 2.70\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Orders\":[\"order_id\",\"item_count\",\"order_occurrences\"]},\"rows\":{\"Orders\":[[10,1,500],[11,2,1000],[12,3,800],[13,4,1000]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef compressed_mean(orders: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}