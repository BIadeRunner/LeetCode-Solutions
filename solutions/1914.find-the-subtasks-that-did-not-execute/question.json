{"question_id": "1914", "problem_slug": "find-the-subtasks-that-did-not-execute", "problem_title": "Find the Subtasks That Did Not Execute", "content": "Table: Tasks\n\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| task_id        | int     |\n| subtasks_count | int     |\n+----------------+---------+\ntask_id is the column with unique values for this table.\nEach row in this table indicates that task_id was divided into subtasks_count subtasks labeled from 1 to subtasks_count.\nIt is guaranteed that 2 <= subtasks_count <= 20.\n\n \nTable: Executed\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| task_id       | int     |\n| subtask_id    | int     |\n+---------------+---------+\n(task_id, subtask_id) is the combination of columns with unique values for this table.\nEach row in this table indicates that for the task task_id, the subtask with ID subtask_id was executed successfully.\nIt is guaranteed that subtask_id <= subtasks_count for each task_id.\n \nWrite a solution to report the IDs of the missing subtasks for each task_id.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nTasks table:\n+---------+----------------+\n| task_id | subtasks_count |\n+---------+----------------+\n| 1       | 3              |\n| 2       | 2              |\n| 3       | 4              |\n+---------+----------------+\nExecuted table:\n+---------+------------+\n| task_id | subtask_id |\n+---------+------------+\n| 1       | 2          |\n| 3       | 1          |\n| 3       | 2          |\n| 3       | 3          |\n| 3       | 4          |\n+---------+------------+\nOutput: \n+---------+------------+\n| task_id | subtask_id |\n+---------+------------+\n| 1       | 1          |\n| 1       | 3          |\n| 2       | 1          |\n| 2       | 2          |\n+---------+------------+\nExplanation: \nTask 1 was divided into 3 subtasks (1, 2, 3). Only subtask 2 was executed successfully, so we include (1, 1) and (1, 3) in the answer.\nTask 2 was divided into 2 subtasks (1, 2). No subtask was executed successfully, so we include (2, 1) and (2, 2) in the answer.\nTask 3 was divided into 4 subtasks (1, 2, 3, 4). All of the subtasks were executed successfully.\n\n", "hints": [], "exampleTestcases": "{\"headers\": {\"Tasks\": [\"task_id\", \"subtasks_count\"], \"Executed\": [\"task_id\", \"subtask_id\"]}, \"rows\": {\"Tasks\": [[1, 3], [2, 2], [3, 4]], \"Executed\": [[1, 2], [3, 1], [3, 2], [3, 3], [3, 4]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_subtasks(tasks: pd.DataFrame, executed: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}