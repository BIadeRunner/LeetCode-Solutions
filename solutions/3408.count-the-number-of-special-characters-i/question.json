{"questionId": "3408", "acRate": 65.98763987722461, "difficulty": "Easy", "freqBar": 35.533128023585995, "frontendQuestionId": "3120", "paidOnly": false, "status": "ac", "title": "Count the Number of Special Characters I", "topicTags": [{"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "count-the-number-of-special-characters-i", "content": "<p>You are given a string <code>word</code>. A letter is called <strong>special</strong> if it appears <strong>both</strong> in lowercase and uppercase in <code>word</code>.</p>\n\n<p>Return the number of<em> </em><strong>special</strong> letters in<em> </em><code>word</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;aaAbcBC&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The special characters in <code>word</code> are <code>&#39;a&#39;</code>, <code>&#39;b&#39;</code>, and <code>&#39;c&#39;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;abc&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>No character in <code>word</code> appears in uppercase.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;abBCab&quot;</span></p>\n\n<p><strong>Output:</strong> 1</p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The only special character in <code>word</code> is <code>&#39;b&#39;</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 50</code></li>\n\t<li><code>word</code> consists of only lowercase and uppercase English letters.</li>\n</ul>\n", "hints": ["The constraints are small. For all 52 characters, check if they are present in <code>word</code>."], "exampleTestcases": "\"aaAbcBC\"\n\"abc\"\n\"abBCab\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int numberOfSpecialChars(string word) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int numberOfSpecialChars(String word) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def numberOfSpecialChars(self, word):\n        \"\"\"\n        :type word: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def numberOfSpecialChars(self, word: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int numberOfSpecialChars(char* word) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int NumberOfSpecialChars(string word) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} word\n * @return {number}\n */\nvar numberOfSpecialChars = function(word) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function numberOfSpecialChars(word: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @return Integer\n     */\n    function numberOfSpecialChars($word) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func numberOfSpecialChars(_ word: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun numberOfSpecialChars(word: String): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int numberOfSpecialChars(String word) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func numberOfSpecialChars(word string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} word\n# @return {Integer}\ndef number_of_special_chars(word)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def numberOfSpecialChars(word: String): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn number_of_special_chars(word: String) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (number-of-special-chars word)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec number_of_special_chars(Word :: unicode:unicode_binary()) -> integer().\nnumber_of_special_chars(Word) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec number_of_special_chars(word :: String.t) :: integer\n  def number_of_special_chars(word) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "detect-capital", "title": "Detect Capital", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "greatest-english-letter-in-upper-and-lower-case", "title": "Greatest English Letter in Upper and Lower Case", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "count-the-number-of-special-characters-ii", "title": "Count the Number of Special Characters II", "isPaidOnly": false}]}