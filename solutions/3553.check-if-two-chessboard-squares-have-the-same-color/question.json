{"questionId": "3553", "acRate": 69.98222208942737, "difficulty": "Easy", "freqBar": 25.002082917880976, "frontendQuestionId": "3274", "paidOnly": false, "status": "ac", "title": "Check if Two Chessboard Squares Have the Same Color", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "check-if-two-chessboard-squares-have-the-same-color", "content": "<p>You are given two strings, <code>coordinate1</code> and <code>coordinate2</code>, representing the coordinates of a square on an <code>8 x 8</code> chessboard.</p>\n\n<p>Below is the chessboard for reference.</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/07/17/screenshot-2021-02-20-at-22159-pm.png\" style=\"width: 400px; height: 396px;\" /></p>\n\n<p>Return <code>true</code> if these two squares have the same color and <code>false</code> otherwise.</p>\n\n<p>The coordinate will always represent a valid chessboard square. The coordinate will always have the letter first (indicating its column), and the number second (indicating its row).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">coordinate1 = &quot;a1&quot;, coordinate2 = &quot;c3&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Both squares are black.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">coordinate1 = &quot;a1&quot;, coordinate2 = &quot;h3&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Square <code>&quot;a1&quot;</code> is black and <code>&quot;h3&quot;</code> is white.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>coordinate1.length == coordinate2.length == 2</code></li>\n\t<li><code>&#39;a&#39; &lt;= coordinate1[0], coordinate2[0] &lt;= &#39;h&#39;</code></li>\n\t<li><code>&#39;1&#39; &lt;= coordinate1[1], coordinate2[1] &lt;= &#39;8&#39;</code></li>\n</ul>\n", "hints": ["The color of the chessboard is black the sum of row coordinates and column coordinates is even. Otherwise, it's white."], "exampleTestcases": "\"a1\"\n\"c3\"\n\"a1\"\n\"h3\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    bool checkTwoChessboards(string coordinate1, string coordinate2) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public boolean checkTwoChessboards(String coordinate1, String coordinate2) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def checkTwoChessboards(self, coordinate1, coordinate2):\n        \"\"\"\n        :type coordinate1: str\n        :type coordinate2: str\n        :rtype: bool\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def checkTwoChessboards(self, coordinate1: str, coordinate2: str) -> bool:\n        "}, {"lang": "C", "langSlug": "c", "code": "bool checkTwoChessboards(char* coordinate1, char* coordinate2) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public bool CheckTwoChessboards(string coordinate1, string coordinate2) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} coordinate1\n * @param {string} coordinate2\n * @return {boolean}\n */\nvar checkTwoChessboards = function(coordinate1, coordinate2) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function checkTwoChessboards(coordinate1: string, coordinate2: string): boolean {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $coordinate1\n     * @param String $coordinate2\n     * @return Boolean\n     */\n    function checkTwoChessboards($coordinate1, $coordinate2) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func checkTwoChessboards(_ coordinate1: String, _ coordinate2: String) -> Bool {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun checkTwoChessboards(coordinate1: String, coordinate2: String): Boolean {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  bool checkTwoChessboards(String coordinate1, String coordinate2) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func checkTwoChessboards(coordinate1 string, coordinate2 string) bool {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} coordinate1\n# @param {String} coordinate2\n# @return {Boolean}\ndef check_two_chessboards(coordinate1, coordinate2)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def checkTwoChessboards(coordinate1: String, coordinate2: String): Boolean = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn check_two_chessboards(coordinate1: String, coordinate2: String) -> bool {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (check-two-chessboards coordinate1 coordinate2)\n  (-> string? string? boolean?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec check_two_chessboards(Coordinate1 :: unicode:unicode_binary(), Coordinate2 :: unicode:unicode_binary()) -> boolean().\ncheck_two_chessboards(Coordinate1, Coordinate2) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec check_two_chessboards(coordinate1 :: String.t, coordinate2 :: String.t) :: boolean\n  def check_two_chessboards(coordinate1, coordinate2) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "determine-color-of-a-chessboard-square", "title": "Determine Color of a Chessboard Square", "isPaidOnly": false}]}