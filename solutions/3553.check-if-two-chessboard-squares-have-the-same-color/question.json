{"question_id": "3553", "problem_slug": "check-if-two-chessboard-squares-have-the-same-color", "problem_title": "Check if Two Chessboard Squares Have the Same Color", "content": "You are given two strings, coordinate1 and coordinate2, representing the coordinates of a square on an 8 x 8 chessboard.\nBelow is the chessboard for reference.\n\nReturn true if these two squares have the same color and false otherwise.\nThe coordinate will always represent a valid chessboard square. The coordinate will always have the letter first (indicating its column), and the number second (indicating its row).\n \nExample 1:\n\nInput: coordinate1 = \"a1\", coordinate2 = \"c3\"\nOutput: true\nExplanation:\nBoth squares are black.\n\nExample 2:\n\nInput: coordinate1 = \"a1\", coordinate2 = \"h3\"\nOutput: false\nExplanation:\nSquare \"a1\" is black and \"h3\" is white.\n\n \nConstraints:\n\ncoordinate1.length == coordinate2.length == 2\n'a' <= coordinate1[0], coordinate2[0] <= 'h'\n'1' <= coordinate1[1], coordinate2[1] <= '8'\n\n", "hints": ["The color of the chessboard is black the sum of row coordinates and column coordinates is even. Otherwise, it's white."], "exampleTestcases": "\"a1\"\n\"c3\"\n\"a1\"\n\"h3\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    bool checkTwoChessboards(string coordinate1, string coordinate2) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public boolean checkTwoChessboards(String coordinate1, String coordinate2) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def checkTwoChessboards(self, coordinate1, coordinate2):\n        \"\"\"\n        :type coordinate1: str\n        :type coordinate2: str\n        :rtype: bool\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def checkTwoChessboards(self, coordinate1: str, coordinate2: str) -> bool:\n        "}, "C": {"langSlug": "c", "code": "bool checkTwoChessboards(char* coordinate1, char* coordinate2) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public bool CheckTwoChessboards(string coordinate1, string coordinate2) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} coordinate1\n * @param {string} coordinate2\n * @return {boolean}\n */\nvar checkTwoChessboards = function(coordinate1, coordinate2) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function checkTwoChessboards(coordinate1: string, coordinate2: string): boolean {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $coordinate1\n     * @param String $coordinate2\n     * @return Boolean\n     */\n    function checkTwoChessboards($coordinate1, $coordinate2) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func checkTwoChessboards(_ coordinate1: String, _ coordinate2: String) -> Bool {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun checkTwoChessboards(coordinate1: String, coordinate2: String): Boolean {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  bool checkTwoChessboards(String coordinate1, String coordinate2) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func checkTwoChessboards(coordinate1 string, coordinate2 string) bool {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} coordinate1\n# @param {String} coordinate2\n# @return {Boolean}\ndef check_two_chessboards(coordinate1, coordinate2)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def checkTwoChessboards(coordinate1: String, coordinate2: String): Boolean = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn check_two_chessboards(coordinate1: String, coordinate2: String) -> bool {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (check-two-chessboards coordinate1 coordinate2)\n  (-> string? string? boolean?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec check_two_chessboards(Coordinate1 :: unicode:unicode_binary(), Coordinate2 :: unicode:unicode_binary()) -> boolean().\ncheck_two_chessboards(Coordinate1, Coordinate2) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec check_two_chessboards(coordinate1 :: String.t, coordinate2 :: String.t) :: boolean\n  def check_two_chessboards(coordinate1, coordinate2) do\n    \n  end\nend"}}}