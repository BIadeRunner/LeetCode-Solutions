{"questionId": "3447", "acRate": 73.35245088843031, "difficulty": "Easy", "freqBar": 27.523036221123647, "frontendQuestionId": "3174", "paidOnly": false, "status": "ac", "title": "Clear Digits", "topicTags": [{"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Stack", "id": "VG9waWNUYWdOb2RlOjE1", "slug": "stack"}, {"name": "Simulation", "id": "VG9waWNUYWdOb2RlOjYxMDU1", "slug": "simulation"}], "titleSlug": "clear-digits", "content": "<p>You are given a string <code>s</code>.</p>\n\n<p>Your task is to remove <strong>all</strong> digits by doing this operation repeatedly:</p>\n\n<ul>\n\t<li>Delete the <em>first</em> digit and the <strong>closest</strong> <b>non-digit</b> character to its <em>left</em>.</li>\n</ul>\n\n<p>Return the resulting string after removing all digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;abc&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;abc&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no digit in the string.<!-- notionvc: ff07e34f-b1d6-41fb-9f83-5d0ba3c1ecde --></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;cb34&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>First, we apply the operation on <code>s[2]</code>, and <code>s</code> becomes <code>&quot;c4&quot;</code>.</p>\n\n<p>Then we apply the operation on <code>s[1]</code>, and <code>s</code> becomes <code>&quot;&quot;</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists only of lowercase English letters and digits.</li>\n\t<li>The input is generated such that it is possible to delete all digits.</li>\n</ul>\n", "hints": ["Process string <code>s</code> from left to right, if <code>s[i]</code> is a digit, mark the nearest unmarked non-digit index to its left.", "Delete all digits and all marked characters."], "exampleTestcases": "\"abc\"\n\"cb34\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string clearDigits(string s) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String clearDigits(String s) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def clearDigits(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def clearDigits(self, s: str) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* clearDigits(char* s) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string ClearDigits(string s) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {string}\n */\nvar clearDigits = function(s) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function clearDigits(s: string): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function clearDigits($s) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func clearDigits(_ s: String) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun clearDigits(s: String): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String clearDigits(String s) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func clearDigits(s string) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} s\n# @return {String}\ndef clear_digits(s)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def clearDigits(s: String): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn clear_digits(s: String) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (clear-digits s)\n  (-> string? string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec clear_digits(S :: unicode:unicode_binary()) -> unicode:unicode_binary().\nclear_digits(S) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec clear_digits(s :: String.t) :: String.t\n  def clear_digits(s) do\n    \n  end\nend"}], "similarQuestionList": []}