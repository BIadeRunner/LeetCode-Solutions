{"questionId": "2747", "acRate": 85.92667673582872, "difficulty": "Easy", "freqBar": 50.19968483852259, "frontendQuestionId": "2635", "paidOnly": false, "status": "ac", "title": "Apply Transform Over Each Element in Array", "topicTags": [], "titleSlug": "apply-transform-over-each-element-in-array", "content": "<p>Given an integer array&nbsp;<code>arr</code>&nbsp;and a mapping function&nbsp;<code>fn</code>, return&nbsp;a new array with a transformation applied to each element.</p>\n\n<p>The returned array should be created such that&nbsp;<code>returnedArray[i] = fn(arr[i], i)</code>.</p>\n\n<p>Please solve it without the built-in <code>Array.map</code> method.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3], fn = function plusone(n) { return n + 1; }\n<strong>Output:</strong> [2,3,4]\n<strong>Explanation:</strong>\nconst newArray = map(arr, plusone); // [2,3,4]\nThe function increases each value in the array by one. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3], fn = function plusI(n, i) { return n + i; }\n<strong>Output:</strong> [1,3,5]\n<strong>Explanation:</strong> The function increases each value by the index it resides in.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [10,20,30], fn = function constant() { return 42; }\n<strong>Output:</strong> [42,42,42]\n<strong>Explanation:</strong> The function always returns 42.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code><font face=\"monospace\">-10<sup>9</sup>&nbsp;&lt;= arr[i] &lt;= 10<sup>9</sup></font></code></li>\n\t<li><code>fn</code> returns a number</li>\n</ul>\n", "hints": ["Start by creating an array that will eventually be returned.", "Loop over each element in the passed array. Push fn(arr[i]) to the returned array."], "exampleTestcases": "function plusone(n) { return n + 1; }\n[1,2,3]\nfunction plusI(n, i) { return n + i; }\n[1,2,3]\nfunction constant(n, i) { return 42; }\n[10,20,30]", "codeSnippets": [{"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} arr\n * @param {Function} fn\n * @return {number[]}\n */\nvar map = function(arr, fn) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function map(arr: number[], fn: (n: number, i: number) => number): number[] {\n    \n};"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "group-by", "title": "Group By", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "filter-elements-from-array", "title": "Filter Elements from Array", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "array-reduce-transformation", "title": "Array Reduce Transformation", "isPaidOnly": false}]}