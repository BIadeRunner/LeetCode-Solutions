{"questionId": "3474", "acRate": 75.14078841512469, "difficulty": "Medium", "freqBar": 52.811229747293, "frontendQuestionId": "3167", "paidOnly": true, "status": "ac", "title": "Better Compression of String", "topicTags": [{"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Sorting", "id": "VG9waWNUYWdOb2RlOjYxMDQ5", "slug": "sorting"}, {"name": "Counting", "id": "VG9waWNUYWdOb2RlOjYxMDYy", "slug": "counting"}], "titleSlug": "better-compression-of-string", "content": "<p>You are given a string <code>compressed</code> representing a compressed version of a string. The format is a character followed by its frequency. For example, <code>&quot;a3b1a1c2&quot;</code> is a compressed version of the string <code>&quot;aaabacc&quot;</code>.</p>\n\n<p>We seek a <strong>better compression</strong> with the following conditions:</p>\n\n<ol>\n\t<li>Each character should appear <strong>only once</strong> in the compressed version.</li>\n\t<li>The characters should be in <strong>alphabetical order</strong>.</li>\n</ol>\n\n<p>Return the <em>better compression</em> of <code>compressed</code>.</p>\n\n<p><strong>Note:</strong> In the better version of compression, the order of letters may change, which is acceptable.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">compressed = &quot;a3c9b2c1&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;a3b2c10&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Characters &quot;a&quot; and &quot;b&quot; appear only once in the input, but &quot;c&quot; appears twice, once with a size of 9 and once with a size of 1.</p>\n\n<p>Hence, in the resulting string, it should have a size of 10.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">compressed = &quot;c2b3a1&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;a1b3c2&quot;</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">compressed = &quot;a2b4c1&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;a2b4c1&quot;</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= compressed.length &lt;= 6 * 10<sup>4</sup></code></li>\n\t<li><code>compressed</code> consists only of lowercase English letters and digits.</li>\n\t<li><code>compressed</code> is a valid compression, i.e., each character is followed by its frequency.</li>\n\t<li>Frequencies are in the range <code>[1, 10<sup>4</sup>]</code> and have no leading zeroes.</li>\n</ul>\n", "hints": ["This is an implementation problem.", "Try to extract each character with its corresponding frequency.", "Sum the frequencies for a single character.", "Sort characters and append them to a string in alphabetical order."], "exampleTestcases": "\"a3c9b2c1\"\n\"c2b3a1\"\n\"a2b4c1\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string betterCompression(string compressed) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String betterCompression(String compressed) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def betterCompression(self, compressed):\n        \"\"\"\n        :type compressed: str\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def betterCompression(self, compressed: str) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* betterCompression(char* compressed) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string BetterCompression(string compressed) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} compressed\n * @return {string}\n */\nvar betterCompression = function(compressed) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function betterCompression(compressed: string): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $compressed\n     * @return String\n     */\n    function betterCompression($compressed) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func betterCompression(_ compressed: String) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun betterCompression(compressed: String): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String betterCompression(String compressed) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func betterCompression(compressed string) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} compressed\n# @return {String}\ndef better_compression(compressed)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def betterCompression(compressed: String): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn better_compression(compressed: String) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (better-compression compressed)\n  (-> string? string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec better_compression(Compressed :: unicode:unicode_binary()) -> unicode:unicode_binary().\nbetter_compression(Compressed) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec better_compression(compressed :: String.t) :: String.t\n  def better_compression(compressed) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "string-compression", "title": "String Compression", "isPaidOnly": false}]}