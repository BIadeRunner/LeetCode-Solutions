{"question_id": "1215", "problem_slug": "reported-posts", "problem_title": "Reported Posts", "content": "Table: Actions\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | int     |\n| post_id       | int     |\n| action_date   | date    | \n| action        | enum    |\n| extra         | varchar |\n+---------------+---------+\nThis table may have duplicate rows.\nThe action column is an ENUM (category) type of ('view', 'like', 'reaction', 'comment', 'report', 'share').\nThe extra column has optional information about the action, such as a reason for the report or a type of reaction.\nextra is never NULL.\n\n \nWrite a solution to report the number of posts reported yesterday for each report reason. Assume today is 2019-07-05.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nActions table:\n+---------+---------+-------------+--------+--------+\n| user_id | post_id | action_date | action | extra  |\n+---------+---------+-------------+--------+--------+\n| 1       | 1       | 2019-07-01  | view   | null   |\n| 1       | 1       | 2019-07-01  | like   | null   |\n| 1       | 1       | 2019-07-01  | share  | null   |\n| 2       | 4       | 2019-07-04  | view   | null   |\n| 2       | 4       | 2019-07-04  | report | spam   |\n| 3       | 4       | 2019-07-04  | view   | null   |\n| 3       | 4       | 2019-07-04  | report | spam   |\n| 4       | 3       | 2019-07-02  | view   | null   |\n| 4       | 3       | 2019-07-02  | report | spam   |\n| 5       | 2       | 2019-07-04  | view   | null   |\n| 5       | 2       | 2019-07-04  | report | racism |\n| 5       | 5       | 2019-07-04  | view   | null   |\n| 5       | 5       | 2019-07-04  | report | racism |\n+---------+---------+-------------+--------+--------+\nOutput: \n+---------------+--------------+\n| report_reason | report_count |\n+---------------+--------------+\n| spam          | 1            |\n| racism        | 2            |\n+---------------+--------------+\nExplanation: Note that we only care about report reasons with non-zero number of reports.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Actions\":[\"user_id\",\"post_id\",\"action_date\",\"action\",\"extra\"]},\"rows\":{\"Actions\":[[1,1,\"2019-07-01\",\"view\",null],[1,1,\"2019-07-01\",\"like\",null],[1,1,\"2019-07-01\",\"share\",null],[2,4,\"2019-07-04\",\"view\",null],[2,4,\"2019-07-04\",\"report\",\"spam\"],[3,4,\"2019-07-04\",\"view\",null],[3,4,\"2019-07-04\",\"report\",\"spam\"],[4,3,\"2019-07-02\",\"view\",null],[4,3,\"2019-07-02\",\"report\",\"spam\"],[5,2,\"2019-07-04\",\"view\",null],[5,2,\"2019-07-04\",\"report\",\"racism\"],[5,5,\"2019-07-04\",\"view\",null],[5,5,\"2019-07-04\",\"report\",\"racism\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef reported_posts(actions: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}