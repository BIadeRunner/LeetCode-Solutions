{"question_id": "1536", "problem_slug": "customers-who-bought-products-a-and-b-but-not-c", "problem_title": "Customers Who Bought Products A and B but Not C", "content": "Table: Customers\n\n+---------------------+---------+\n| Column Name         | Type    |\n+---------------------+---------+\n| customer_id         | int     |\n| customer_name       | varchar |\n+---------------------+---------+\ncustomer_id is the column with unique values for this table.\ncustomer_name is the name of the customer.\n \nTable: Orders\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| order_id      | int     |\n| customer_id   | int     |\n| product_name  | varchar |\n+---------------+---------+\norder_id is the column with unique values for this table.\ncustomer_id is the id of the customer who bought the product \"product_name\".\n\n \nWrite a solution to report the customer_id and customer_name of customers who bought products \"A\", \"B\" but did not buy the product \"C\" since we want to recommend them to purchase this product.\nReturn the result table ordered by customer_id.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nCustomers table:\n+-------------+---------------+\n| customer_id | customer_name |\n+-------------+---------------+\n| 1           | Daniel        |\n| 2           | Diana         |\n| 3           | Elizabeth     |\n| 4           | Jhon          |\n+-------------+---------------+\nOrders table:\n+------------+--------------+---------------+\n| order_id   | customer_id  | product_name  |\n+------------+--------------+---------------+\n| 10         |     1        |     A         |\n| 20         |     1        |     B         |\n| 30         |     1        |     D         |\n| 40         |     1        |     C         |\n| 50         |     2        |     A         |\n| 60         |     3        |     A         |\n| 70         |     3        |     B         |\n| 80         |     3        |     D         |\n| 90         |     4        |     C         |\n+------------+--------------+---------------+\nOutput: \n+-------------+---------------+\n| customer_id | customer_name |\n+-------------+---------------+\n| 3           | Elizabeth     |\n+-------------+---------------+\nExplanation: Only the customer_id with id 3 bought the product A and B but not the product C.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Customers\":[\"customer_id\",\"customer_name\"],\"Orders\":[\"order_id\",\"customer_id\",\"product_name\"]},\"rows\":{\"Customers\":[[1,\"Daniel\"],[2,\"Diana\"],[3,\"Elizabeth\"],[4,\"Jhon\"]],\"Orders\":[[10,1,\"A\"],[20,1,\"B\"],[30,1,\"D\"],[40,1,\"C\"],[50,2,\"A\"],[60,3,\"A\"],[70,3,\"B\"],[80,3,\"D\"],[90,4,\"C\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_customers(customers: pd.DataFrame, orders: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}