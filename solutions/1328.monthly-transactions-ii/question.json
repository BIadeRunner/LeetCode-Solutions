{"question_id": "1328", "problem_slug": "monthly-transactions-ii", "problem_title": "Monthly Transactions II", "content": "Table: Transactions\n\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| id             | int     |\n| country        | varchar |\n| state          | enum    |\n| amount         | int     |\n| trans_date     | date    |\n+----------------+---------+\nid is the column of unique values of this table.\nThe table has information about incoming transactions.\nThe state column is an ENUM (category) of type [\"approved\", \"declined\"].\n\nTable: Chargebacks\n\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| trans_id       | int     |\n| trans_date     | date    |\n+----------------+---------+\nChargebacks contains basic information regarding incoming chargebacks from some transactions placed in Transactions table.\ntrans_id is a foreign key (reference column) to the id column of Transactions table.\nEach chargeback corresponds to a transaction made previously even if they were not approved.\n \nWrite a solution to find for each month and country: the number of approved transactions and their total amount, the number of chargebacks, and their total amount.\nNote: In your solution, given the month and country, ignore rows with all zeros.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nTransactions table:\n+-----+---------+----------+--------+------------+\n| id  | country | state    | amount | trans_date |\n+-----+---------+----------+--------+------------+\n| 101 | US      | approved | 1000   | 2019-05-18 |\n| 102 | US      | declined | 2000   | 2019-05-19 |\n| 103 | US      | approved | 3000   | 2019-06-10 |\n| 104 | US      | declined | 4000   | 2019-06-13 |\n| 105 | US      | approved | 5000   | 2019-06-15 |\n+-----+---------+----------+--------+------------+\nChargebacks table:\n+----------+------------+\n| trans_id | trans_date |\n+----------+------------+\n| 102      | 2019-05-29 |\n| 101      | 2019-06-30 |\n| 105      | 2019-09-18 |\n+----------+------------+\nOutput: \n+---------+---------+----------------+-----------------+------------------+-------------------+\n| month   | country | approved_count | approved_amount | chargeback_count | chargeback_amount |\n+---------+---------+----------------+-----------------+------------------+-------------------+\n| 2019-05 | US      | 1              | 1000            | 1                | 2000              |\n| 2019-06 | US      | 2              | 8000            | 1                | 1000              |\n| 2019-09 | US      | 0              | 0               | 1                | 5000              |\n+---------+---------+----------------+-----------------+------------------+-------------------+\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Transactions\":[\"id\",\"country\",\"state\",\"amount\",\"trans_date\"],\"Chargebacks\":[\"trans_id\",\"trans_date\"]},\"rows\":{\"Transactions\":[[101,\"US\",\"approved\",1000,\"2019-05-18\"],[102,\"US\",\"declined\",2000,\"2019-05-19\"],[103,\"US\",\"approved\",3000,\"2019-06-10\"],[104,\"US\",\"declined\",4000,\"2019-06-13\"],[105,\"US\",\"approved\",5000,\"2019-06-15\"]],\"Chargebacks\":[[102,\"2019-05-29\"],[101,\"2019-06-30\"],[105,\"2019-09-18\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef monthly_transactions(transactions: pd.DataFrame, chargebacks: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}