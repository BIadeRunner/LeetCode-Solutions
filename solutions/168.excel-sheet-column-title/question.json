{"question_id": "168", "problem_slug": "excel-sheet-column-title", "problem_title": "Excel Sheet Column Title", "content": "Given an integer columnNumber, return its corresponding column title as it appears in an Excel sheet.\nFor example:\n\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n...\n\n \nExample 1:\n\nInput: columnNumber = 1\nOutput: \"A\"\n\nExample 2:\n\nInput: columnNumber = 28\nOutput: \"AB\"\n\nExample 3:\n\nInput: columnNumber = 701\nOutput: \"ZY\"\n\n \nConstraints:\n\n1 <= columnNumber <= 231 - 1\n\n", "hints": [], "exampleTestcases": "1\n28\n701", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string convertToTitle(int columnNumber) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String convertToTitle(int columnNumber) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def convertToTitle(self, columnNumber):\n        \"\"\"\n        :type columnNumber: int\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def convertToTitle(self, columnNumber: int) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* convertToTitle(int columnNumber) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string ConvertToTitle(int columnNumber) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} columnNumber\n * @return {string}\n */\nvar convertToTitle = function(columnNumber) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function convertToTitle(columnNumber: number): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $columnNumber\n     * @return String\n     */\n    function convertToTitle($columnNumber) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func convertToTitle(_ columnNumber: Int) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun convertToTitle(columnNumber: Int): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String convertToTitle(int columnNumber) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func convertToTitle(columnNumber int) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} column_number\n# @return {String}\ndef convert_to_title(column_number)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def convertToTitle(columnNumber: Int): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn convert_to_title(column_number: i32) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (convert-to-title columnNumber)\n  (-> exact-integer? string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec convert_to_title(ColumnNumber :: integer()) -> unicode:unicode_binary().\nconvert_to_title(ColumnNumber) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec convert_to_title(column_number :: integer) :: String.t\n  def convert_to_title(column_number) do\n    \n  end\nend"}}}