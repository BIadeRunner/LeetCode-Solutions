{"question_id": "1998", "problem_slug": "suspicious-bank-accounts", "problem_title": "Suspicious Bank Accounts", "content": "Table: Accounts\n\n+----------------+------+\n| Column Name    | Type |\n+----------------+------+\n| account_id     | int  |\n| max_income     | int  |\n+----------------+------+\naccount_id is the column with unique values for this table.\nEach row contains information about the maximum monthly income for one bank account.\n\n \nTable: Transactions\n\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| transaction_id | int      |\n| account_id     | int      |\n| type           | ENUM     |\n| amount         | int      |\n| day            | datetime |\n+----------------+----------+\ntransaction_id is the column with unique values for this table.\nEach row contains information about one transaction.\ntype is ENUM (category) type of ('Creditor','Debtor') where 'Creditor' means the user deposited money into their account and 'Debtor' means the user withdrew money from their account.\namount is the amount of money deposited/withdrawn during the transaction.\n\n \nA bank account is suspicious if the total income exceeds the max_income for this account for two or more consecutive months. The total income of an account in some month is the sum of all its deposits in that month (i.e., transactions of the type 'Creditor').\nWrite a solution to report the IDs of all suspicious bank accounts.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nAccounts table:\n+------------+------------+\n| account_id | max_income |\n+------------+------------+\n| 3          | 21000      |\n| 4          | 10400      |\n+------------+------------+\nTransactions table:\n+----------------+------------+----------+--------+---------------------+\n| transaction_id | account_id | type     | amount | day                 |\n+----------------+------------+----------+--------+---------------------+\n| 2              | 3          | Creditor | 107100 | 2021-06-02 11:38:14 |\n| 4              | 4          | Creditor | 10400  | 2021-06-20 12:39:18 |\n| 11             | 4          | Debtor   | 58800  | 2021-07-23 12:41:55 |\n| 1              | 4          | Creditor | 49300  | 2021-05-03 16:11:04 |\n| 15             | 3          | Debtor   | 75500  | 2021-05-23 14:40:20 |\n| 10             | 3          | Creditor | 102100 | 2021-06-15 10:37:16 |\n| 14             | 4          | Creditor | 56300  | 2021-07-21 12:12:25 |\n| 19             | 4          | Debtor   | 101100 | 2021-05-09 15:21:49 |\n| 8              | 3          | Creditor | 64900  | 2021-07-26 15:09:56 |\n| 7              | 3          | Creditor | 90900  | 2021-06-14 11:23:07 |\n+----------------+------------+----------+--------+---------------------+\nOutput: \n+------------+\n| account_id |\n+------------+\n| 3          |\n+------------+\nExplanation: \nFor account 3:\n- In 6-2021, the user had an income of 107100 + 102100 + 90900 = 300100.\n- In 7-2021, the user had an income of 64900.\nWe can see that the income exceeded the max income of 21000 for two consecutive months, so we include 3 in the result table.\n\nFor account 4:\n- In 5-2021, the user had an income of 49300.\n- In 6-2021, the user had an income of 10400.\n- In 7-2021, the user had an income of 56300.\nWe can see that the income exceeded the max income in May and July, but not in June. Since the account did not exceed the max income for two consecutive months, we do not include it in the result table.\n\n", "hints": [], "exampleTestcases": "{\"headers\": {\"Accounts\": [\"account_id\", \"max_income\"], \"Transactions\": [\"transaction_id\", \"account_id\", \"type\", \"amount\", \"day\"]}, \"rows\": {\"Accounts\": [[3, 21000], [4, 10400]], \"Transactions\": [[2, 3, \"Creditor\", 107100, \"2021-06-02 11:38:14\"], [4, 4, \"Creditor\", 10400, \"2021-06-20 12:39:18\"], [11, 4, \"Debtor\", 58800, \"2021-07-23 12:41:55\"], [1, 4, \"Creditor\", 49300, \"2021-05-03 16:11:04\"], [15, 3, \"Debtor\", 75500, \"2021-05-23 14:40:20\"], [10, 3, \"Creditor\", 102100, \"2021-06-15 10:37:16\"], [14, 4, \"Creditor\", 56300, \"2021-07-21 12:12:25\"], [19, 4, \"Debtor\", 101100, \"2021-05-09 15:21:49\"], [8, 3, \"Creditor\", 64900, \"2021-07-26 15:09:56\"], [7, 3, \"Creditor\", 90900, \"2021-06-14 11:23:07\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef suspicious_bank_accounts(accounts: pd.DataFrame, transactions: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}