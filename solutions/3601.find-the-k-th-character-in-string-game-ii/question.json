{"question_id": "3601", "problem_slug": "find-the-k-th-character-in-string-game-ii", "problem_title": "Find the K-th Character in String Game II", "content": "Alice and Bob are playing a game. Initially, Alice has a string word = \"a\".\nYou are given a positive integer k. You are also given an integer array operations, where operations[i] represents the type of the ith operation.\nNow Bob will ask Alice to perform all operations in sequence:\n\nIf operations[i] == 0, append a copy of word to itself.\nIf operations[i] == 1, generate a new string by changing each character in word to its next character in the English alphabet, and append it to the original word. For example, performing the operation on \"c\" generates \"cd\" and performing the operation on \"zb\" generates \"zbac\".\n\nReturn the value of the kth character in word after performing all the operations.\nNote that the character 'z' can be changed to 'a' in the second type of operation.\n \nExample 1:\n\nInput: k = 5, operations = [0,0,0]\nOutput: \"a\"\nExplanation:\nInitially, word == \"a\". Alice performs the three operations as follows:\n\nAppends \"a\" to \"a\", word becomes \"aa\".\nAppends \"aa\" to \"aa\", word becomes \"aaaa\".\nAppends \"aaaa\" to \"aaaa\", word becomes \"aaaaaaaa\".\n\n\nExample 2:\n\nInput: k = 10, operations = [0,1,0,1]\nOutput: \"b\"\nExplanation:\nInitially, word == \"a\". Alice performs the four operations as follows:\n\nAppends \"a\" to \"a\", word becomes \"aa\".\nAppends \"bb\" to \"aa\", word becomes \"aabb\".\nAppends \"aabb\" to \"aabb\", word becomes \"aabbaabb\".\nAppends \"bbccbbcc\" to \"aabbaabb\", word becomes \"aabbaabbbbccbbcc\".\n\n\n \nConstraints:\n\n1 <= k <= 1014\n1 <= operations.length <= 100\noperations[i] is either 0 or 1.\nThe input is generated such that word has at least k characters after all operations.\n\n", "hints": ["Try to replay the operations <code>k<sup>th</sup></code> character was part of.", "The <code>k<sup>th</sup></code> character is only affected if it is present in the first half of the string."], "exampleTestcases": "5\n[0,0,0]\n10\n[0,1,0,1]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    char kthCharacter(long long k, vector<int>& operations) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public char kthCharacter(long k, int[] operations) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def kthCharacter(self, k, operations):\n        \"\"\"\n        :type k: int\n        :type operations: List[int]\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def kthCharacter(self, k: int, operations: List[int]) -> str:\n        "}, "C": {"langSlug": "c", "code": "char kthCharacter(long long k, int* operations, int operationsSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public char KthCharacter(long k, int[] operations) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} k\n * @param {number[]} operations\n * @return {character}\n */\nvar kthCharacter = function(k, operations) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function kthCharacter(k: number, operations: number[]): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $k\n     * @param Integer[] $operations\n     * @return String\n     */\n    function kthCharacter($k, $operations) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func kthCharacter(_ k: Int, _ operations: [Int]) -> Character {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun kthCharacter(k: Long, operations: IntArray): Char {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String kthCharacter(int k, List<int> operations) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func kthCharacter(k int64, operations []int) byte {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} k\n# @param {Integer[]} operations\n# @return {Character}\ndef kth_character(k, operations)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def kthCharacter(k: Long, operations: Array[Int]): Char = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn kth_character(k: i64, operations: Vec<i32>) -> char {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (kth-character k operations)\n  (-> exact-integer? (listof exact-integer?) char?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec kth_character(K :: integer(), Operations :: [integer()]) -> char().\nkth_character(K, Operations) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec kth_character(k :: integer, operations :: [integer]) :: char\n  def kth_character(k, operations) do\n    \n  end\nend"}}}