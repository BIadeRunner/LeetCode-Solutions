{"question_id": "1964", "problem_slug": "find-interview-candidates", "problem_title": "Find Interview Candidates", "content": "Table: Contests\n\n+--------------+------+\n| Column Name  | Type |\n+--------------+------+\n| contest_id   | int  |\n| gold_medal   | int  |\n| silver_medal | int  |\n| bronze_medal | int  |\n+--------------+------+\ncontest_id is the column with unique values for this table.\nThis table contains the LeetCode contest ID and the user IDs of the gold, silver, and bronze medalists.\nIt is guaranteed that any consecutive contests have consecutive IDs and that no ID is skipped.\n \nTable: Users\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| user_id     | int     |\n| mail        | varchar |\n| name        | varchar |\n+-------------+---------+\nuser_id is the column with unique values for this table.\nThis table contains information about the users.\n\n \nWrite a solution to report the name and the mail of all interview candidates. A user is an interview candidate if at least one of these two conditions is true:\n\nThe user won any medal in three or more consecutive contests.\nThe user won the gold medal in three or more different contests (not necessarily consecutive).\n\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nContests table:\n+------------+------------+--------------+--------------+\n| contest_id | gold_medal | silver_medal | bronze_medal |\n+------------+------------+--------------+--------------+\n| 190        | 1          | 5            | 2            |\n| 191        | 2          | 3            | 5            |\n| 192        | 5          | 2            | 3            |\n| 193        | 1          | 3            | 5            |\n| 194        | 4          | 5            | 2            |\n| 195        | 4          | 2            | 1            |\n| 196        | 1          | 5            | 2            |\n+------------+------------+--------------+--------------+\nUsers table:\n+---------+--------------------+-------+\n| user_id | mail               | name  |\n+---------+--------------------+-------+\n| 1       | sarah@leetcode.com | Sarah |\n| 2       | bob@leetcode.com   | Bob   |\n| 3       | alice@leetcode.com | Alice |\n| 4       | hercy@leetcode.com | Hercy |\n| 5       | quarz@leetcode.com | Quarz |\n+---------+--------------------+-------+\nOutput: \n+-------+--------------------+\n| name  | mail               |\n+-------+--------------------+\n| Sarah | sarah@leetcode.com |\n| Bob   | bob@leetcode.com   |\n| Alice | alice@leetcode.com |\n| Quarz | quarz@leetcode.com |\n+-------+--------------------+\nExplanation: \nSarah won 3 gold medals (190, 193, and 196), so we include her in the result table.\nBob won a medal in 3 consecutive contests (190, 191, and 192), so we include him in the result table.\n    - Note that he also won a medal in 3 other consecutive contests (194, 195, and 196).\nAlice won a medal in 3 consecutive contests (191, 192, and 193), so we include her in the result table.\nQuarz won a medal in 5 consecutive contests (190, 191, 192, 193, and 194), so we include them in the result table.\n\n \nFollow up:\n\nWhat if the first condition changed to be \"any medal in n or more consecutive contests\"? How would you change your solution to get the interview candidates? Imagine that n is the parameter of a stored procedure.\nSome users may not participate in every contest but still perform well in the ones they do. How would you change your solution to only consider contests where the user was a participant? Suppose the registered users for each contest are given in another table.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Contests\":[\"contest_id\",\"gold_medal\",\"silver_medal\",\"bronze_medal\"],\"Users\":[\"user_id\",\"mail\",\"name\"]},\"rows\":{\"Contests\":[[190,1,5,2],[191,2,3,5],[192,5,2,3],[193,1,3,5],[194,4,5,2],[195,4,2,1],[196,1,5,2]],\"Users\":[[1,\"sarah@leetcode.com\",\"Sarah\"],[2,\"bob@leetcode.com\",\"Bob\"],[3,\"alice@leetcode.com\",\"Alice\"],[4,\"hercy@leetcode.com\",\"Hercy\"],[5,\"quarz@leetcode.com\",\"Quarz\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_interview_candidates(contests: pd.DataFrame, users: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}