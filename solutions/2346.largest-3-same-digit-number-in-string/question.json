{"question_id": "2346", "problem_slug": "largest-3-same-digit-number-in-string", "problem_title": "Largest 3-Same-Digit Number in String", "content": "You are given a string num representing a large integer. An integer is good if it meets the following conditions:\n\nIt is a substring of num with length 3.\nIt consists of only one unique digit.\n\nReturn the maximum good integer as a string or an empty string \"\" if no such integer exists.\nNote:\n\nA substring is a contiguous sequence of characters within a string.\nThere may be leading zeroes in num or a good integer.\n\n \nExample 1:\n\nInput: num = \"6777133339\"\nOutput: \"777\"\nExplanation: There are two distinct good integers: \"777\" and \"333\".\n\"777\" is the largest, so we return \"777\".\n\nExample 2:\n\nInput: num = \"2300019\"\nOutput: \"000\"\nExplanation: \"000\" is the only good integer.\n\nExample 3:\n\nInput: num = \"42352338\"\nOutput: \"\"\nExplanation: No substring of length 3 consists of only one unique digit. Therefore, there are no good integers.\n\n \nConstraints:\n\n3 <= num.length <= 1000\nnum only consists of digits.\n\n", "hints": ["We can sequentially check if “999”, “888”, “777”, … , “000” exists in num in that order. The first to be found is the maximum good integer.", "If we cannot find any of the above integers, we return an empty string “”."], "exampleTestcases": "\"6777133339\"\n\"2300019\"\n\"42352338\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string largestGoodInteger(string num) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String largestGoodInteger(String num) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def largestGoodInteger(self, num):\n        \"\"\"\n        :type num: str\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def largestGoodInteger(self, num: str) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* largestGoodInteger(char* num) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string LargestGoodInteger(string num) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} num\n * @return {string}\n */\nvar largestGoodInteger = function(num) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function largestGoodInteger(num: string): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $num\n     * @return String\n     */\n    function largestGoodInteger($num) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func largestGoodInteger(_ num: String) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun largestGoodInteger(num: String): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String largestGoodInteger(String num) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func largestGoodInteger(num string) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} num\n# @return {String}\ndef largest_good_integer(num)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def largestGoodInteger(num: String): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn largest_good_integer(num: String) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (largest-good-integer num)\n  (-> string? string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec largest_good_integer(Num :: unicode:unicode_binary()) -> unicode:unicode_binary().\nlargest_good_integer(Num) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec largest_good_integer(num :: String.t) :: String.t\n  def largest_good_integer(num) do\n    \n  end\nend"}}}