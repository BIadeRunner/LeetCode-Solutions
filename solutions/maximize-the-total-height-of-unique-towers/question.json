{"questionId": "3510", "acRate": 35.488737183912455, "difficulty": "Medium", "freqBar": 11.75950245103254, "frontendQuestionId": "3301", "paidOnly": false, "status": "ac", "title": "Maximize the Total Height of Unique Towers", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Greedy", "id": "VG9waWNUYWdOb2RlOjE3", "slug": "greedy"}, {"name": "Sorting", "id": "VG9waWNUYWdOb2RlOjYxMDQ5", "slug": "sorting"}], "titleSlug": "maximize-the-total-height-of-unique-towers", "content": "<p>You are given an array <code>maximumHeight</code>, where <code>maximumHeight[i]</code> denotes the <strong>maximum</strong> height the <code>i<sup>th</sup></code> tower can be assigned.</p>\n\n<p>Your task is to assign a height to each tower so that:</p>\n\n<ol>\n\t<li>The height of the <code>i<sup>th</sup></code> tower is a positive integer and does not exceed <code>maximumHeight[i]</code>.</li>\n\t<li>No two towers have the same height.</li>\n</ol>\n\n<p>Return the <strong>maximum</strong> possible total sum of the tower heights. If it&#39;s not possible to assign heights, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> maximumHeight<span class=\"example-io\"> = [2,3,4,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">10</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>We can assign heights in the following way: <code>[1, 2, 4, 3]</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> maximumHeight<span class=\"example-io\"> = [15,10]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">25</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>We can assign heights in the following way: <code>[15, 10]</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> maximumHeight<span class=\"example-io\"> = [2,2,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">-1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>It&#39;s impossible to assign positive heights to each index so that no two towers have the same height.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= maximumHeight.length&nbsp;&lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= maximumHeight[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "hints": ["Sort the array <code>maximumHeight</code> in descending order.", "After sorting, it can be seen that the maximum height that we can assign to the <code>i<sup>th</sup></code> element is <code>min(maximumHeight[i], maximumHeight[i - 1] - 1)</code>."], "exampleTestcases": "[2,3,4,3]\n[15,10]\n[2,2,1]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    long long maximumTotalSum(vector<int>& maximumHeight) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public long maximumTotalSum(int[] maximumHeight) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def maximumTotalSum(self, maximumHeight):\n        \"\"\"\n        :type maximumHeight: List[int]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def maximumTotalSum(self, maximumHeight: List[int]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "long long maximumTotalSum(int* maximumHeight, int maximumHeightSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public long MaximumTotalSum(int[] maximumHeight) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} maximumHeight\n * @return {number}\n */\nvar maximumTotalSum = function(maximumHeight) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function maximumTotalSum(maximumHeight: number[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $maximumHeight\n     * @return Integer\n     */\n    function maximumTotalSum($maximumHeight) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func maximumTotalSum(_ maximumHeight: [Int]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun maximumTotalSum(maximumHeight: IntArray): Long {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int maximumTotalSum(List<int> maximumHeight) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func maximumTotalSum(maximumHeight []int) int64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} maximum_height\n# @return {Integer}\ndef maximum_total_sum(maximum_height)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def maximumTotalSum(maximumHeight: Array[Int]): Long = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn maximum_total_sum(maximum_height: Vec<i32>) -> i64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (maximum-total-sum maximumHeight)\n  (-> (listof exact-integer?) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec maximum_total_sum(MaximumHeight :: [integer()]) -> integer().\nmaximum_total_sum(MaximumHeight) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec maximum_total_sum(maximum_height :: [integer]) :: integer\n  def maximum_total_sum(maximum_height) do\n    \n  end\nend"}], "similarQuestionList": []}