{"question_id": "720", "problem_slug": "longest-word-in-dictionary", "problem_title": "Longest Word in Dictionary", "content": "Given an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words.\nIf there is more than one possible answer, return the longest word with the smallest lexicographical order. If there is no answer, return the empty string.\nNote that the word should be built from left to right with each additional character being added to the end of a previous word. \n \nExample 1:\n\nInput: words = [\"w\",\"wo\",\"wor\",\"worl\",\"world\"]\nOutput: \"world\"\nExplanation: The word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\n\nExample 2:\n\nInput: words = [\"a\",\"banana\",\"app\",\"appl\",\"ap\",\"apply\",\"apple\"]\nOutput: \"apple\"\nExplanation: Both \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\n\n \nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 30\nwords[i] consists of lowercase English letters.\n\n", "hints": ["For every word in the input list, we can check whether all prefixes of that word are in the input list by using a Set."], "exampleTestcases": "[\"w\",\"wo\",\"wor\",\"worl\",\"world\"]\n[\"a\",\"banana\",\"app\",\"appl\",\"ap\",\"apply\",\"apple\"]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string longestWord(vector<string>& words) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String longestWord(String[] words) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def longestWord(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def longestWord(self, words: List[str]) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* longestWord(char** words, int wordsSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string LongestWord(string[] words) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string[]} words\n * @return {string}\n */\nvar longestWord = function(words) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function longestWord(words: string[]): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String[] $words\n     * @return String\n     */\n    function longestWord($words) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func longestWord(_ words: [String]) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun longestWord(words: Array<String>): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String longestWord(List<String> words) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func longestWord(words []string) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String[]} words\n# @return {String}\ndef longest_word(words)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def longestWord(words: Array[String]): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn longest_word(words: Vec<String>) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (longest-word words)\n  (-> (listof string?) string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec longest_word(Words :: [unicode:unicode_binary()]) -> unicode:unicode_binary().\nlongest_word(Words) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec longest_word(words :: [String.t]) :: String.t\n  def longest_word(words) do\n    \n  end\nend"}}}