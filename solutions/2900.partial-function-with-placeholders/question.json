{"question_id": "2900", "problem_slug": "partial-function-with-placeholders", "problem_title": "Partial Function with Placeholders", "content": "Given a function fn and an array args, return a function partialFn. \nPlaceholders \"_\" in the args should be replaced with values from restArgs starting from index 0. Any remaining values in the restArgs should be added at the end of the args.\npartialFn should return a result of fn. fn should be called with the elements of the modified args passed as separate arguments.\n \nExample 1:\n\nInput: fn = (...args) => args, args = [2,4,6], restArgs = [8,10]\nOutput: [2,4,6,8,10]\nExplanation: \nconst partialFn = partial(fn, args)\nconst result = partialFn(...restArgs) \nconsole.log(result) // [2,4,6,8,10]\n\nThere are no placeholders \"_\" in args therefore restArgs is just added at the end of args. Then the elements of the args are passed as separate arguments to fn, which returns passed arguments as an array.\n\nExample 2:\n\nInput: fn = (...args) => args, args = [1,2,\"_\",4,\"_\",6], restArgs = [3,5]\nOutput: [1,2,3,4,5,6]\nExplanation: \nconst partialFn = partial(fn, args) \nconst result = partialFn(...restArgs) \nconsole.log(result) // [1,2,3,4,5,6] \n\nPlaceholders \"_\" are replaced with values from the restArgs. Then the elements of the args are passed as separate arguments to fn, which returns passed arguments as an array.\n\nExample 3:\n\nInput: fn = (a, b, c) => b + a - c, args = [\"_\", 5], restArgs = [5, 20]\nOutput: -10\nExplanation: \nconst partialFn = partial(fn, args)\nconst result = partialFn(...restArgs)\nconsole.log(result) // -10\n\nPlaceholder \"_\" is replaced with 5 and 20 is added at the end of args. Then the elements of the args are passed as separate arguments to fn, which returns -10 (5 + 5 - 20).\n\n \nConstraints:\n\nfn is a function\nargs and restArgs are valid JSON arrays\n1 <= args.length <= 5 * 104\n1 <= restArgs.length <= 5 * 104\n0 <= number of placeholders <= restArgs.length\n\n", "hints": [], "exampleTestcases": "(...args) => args\n[2,4,6]\n[8,10]\n(...args) => args\n[1,2,\"_\",4,\"_\",6]\n[3,5]\n(a, b, c) => b + a - c\n[\"_\", 5]\n[5, 20]", "codeSnippets": {"JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {Function} fn\n * @param {Array} args\n * @return {Function}\n */\nvar partial = function(fn, args) {\n    \n    return function(...restArgs) {\n        \n    }\n};"}, "TypeScript": {"langSlug": "typescript", "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\ntype Fn = (...args: JSONValue[]) => JSONValue\n\nfunction partial(fn: Fn, args: JSONValue[]): Fn {\n    \n    return function(...restArgs) {\n        \n    }\n};"}}}