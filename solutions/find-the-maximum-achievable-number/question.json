{"questionId": "2812", "acRate": 91.00094679038061, "difficulty": "Easy", "freqBar": 49.61620979367131, "frontendQuestionId": "2769", "paidOnly": false, "status": "ac", "title": "Find the Maximum Achievable Number", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}], "titleSlug": "find-the-maximum-achievable-number", "content": "<p>Given two integers, <code>num</code> and <code>t</code>. A <strong>number is achievable</strong> if it can become equal to <code>num</code> after applying the following operation:</p>\n\n<ul>\n\t<li>Increase or decrease the number by <code>1</code>, and simultaneously increase or decrease <code>num</code> by <code>1</code>.</li>\n</ul>\n\n<p>Return the <strong>maximum achievable number</strong> after applying the operation at most <code>t</code> times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">num = 4, t = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">6</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Apply the following operation once to make the maximum achievable number equal to <code>num</code>:</p>\n\n<ul>\n\t<li>Decrease the maximum achievable number by 1, and increase <code>num</code> by 1.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">num = 3, t = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">7</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Apply the following operation twice to make the maximum achievable number equal to <code>num</code>:</p>\n\n<ul>\n\t<li>Decrease the maximum achievable number by 1, and increase <code>num</code> by 1.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num, t&nbsp;&lt;= 50</code></li>\n</ul>\n", "hints": ["Let x be the answer, it\u2019s always optimal to decrease x in each operation and increase nums."], "exampleTestcases": "4\n1\n3\n2", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int theMaximumAchievableX(int num, int t) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int theMaximumAchievableX(int num, int t) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def theMaximumAchievableX(self, num, t):\n        \"\"\"\n        :type num: int\n        :type t: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def theMaximumAchievableX(self, num: int, t: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int theMaximumAchievableX(int num, int t) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int TheMaximumAchievableX(int num, int t) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} num\n * @param {number} t\n * @return {number}\n */\nvar theMaximumAchievableX = function(num, t) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function theMaximumAchievableX(num: number, t: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $num\n     * @param Integer $t\n     * @return Integer\n     */\n    function theMaximumAchievableX($num, $t) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func theMaximumAchievableX(_ num: Int, _ t: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun theMaximumAchievableX(num: Int, t: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int theMaximumAchievableX(int num, int t) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func theMaximumAchievableX(num int, t int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} num\n# @param {Integer} t\n# @return {Integer}\ndef the_maximum_achievable_x(num, t)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def theMaximumAchievableX(num: Int, t: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn the_maximum_achievable_x(num: i32, t: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (the-maximum-achievable-x num t)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec the_maximum_achievable_x(Num :: integer(), T :: integer()) -> integer().\nthe_maximum_achievable_x(Num, T) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec the_maximum_achievable_x(num :: integer, t :: integer) :: integer\n  def the_maximum_achievable_x(num, t) do\n    \n  end\nend"}], "similarQuestionList": []}