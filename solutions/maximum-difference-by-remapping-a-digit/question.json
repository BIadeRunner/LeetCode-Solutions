{"questionId": "2704", "acRate": 60.332871012482656, "difficulty": "Easy", "freqBar": 0.0, "frontendQuestionId": "2566", "paidOnly": false, "status": "ac", "title": "Maximum Difference by Remapping a Digit", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "Greedy", "id": "VG9waWNUYWdOb2RlOjE3", "slug": "greedy"}], "titleSlug": "maximum-difference-by-remapping-a-digit", "content": "<p>You are given an integer <code>num</code>. You know that Bob will sneakily <strong>remap</strong> one of the <code>10</code> possible digits (<code>0</code> to <code>9</code>) to another digit.</p>\n\n<p>Return <em>the difference between the maximum and minimum&nbsp;values Bob can make by remapping&nbsp;<strong>exactly</strong> <strong>one</strong> digit in </em><code>num</code>.</p>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n\t<li>When Bob remaps a digit <font face=\"monospace\">d1</font>&nbsp;to another digit <font face=\"monospace\">d2</font>, Bob replaces all occurrences of <code>d1</code>&nbsp;in <code>num</code>&nbsp;with <code>d2</code>.</li>\n\t<li>Bob can remap a digit to itself, in which case <code>num</code>&nbsp;does not change.</li>\n\t<li>Bob can remap different digits for obtaining minimum and maximum values respectively.</li>\n\t<li>The resulting number after remapping can contain leading zeroes.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 11891\n<strong>Output:</strong> 99009\n<strong>Explanation:</strong> \nTo achieve the maximum value, Bob can remap the digit 1 to the digit 9 to yield 99899.\nTo achieve the minimum value, Bob can remap the digit 1 to the digit 0, yielding 890.\nThe difference between these two numbers is 99009.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 90\n<strong>Output:</strong> 99\n<strong>Explanation:</strong>\nThe maximum value that can be returned by the function is 99 (if 0 is replaced by 9) and the minimum value that can be returned by the function is 0 (if 9 is replaced by 0).\nThus, we return 99.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 10<sup>8</sup></code></li>\n</ul>\n", "hints": ["Try to remap the first non-nine digit to 9 to obtain the maximum number.", "Try to remap the first non-zero digit to 0 to obtain the minimum number."], "exampleTestcases": "11891\n90", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int minMaxDifference(int num) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int minMaxDifference(int num) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def minMaxDifference(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def minMaxDifference(self, num: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int minMaxDifference(int num) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int MinMaxDifference(int num) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} num\n * @return {number}\n */\nvar minMaxDifference = function(num) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function minMaxDifference(num: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $num\n     * @return Integer\n     */\n    function minMaxDifference($num) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func minMaxDifference(_ num: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun minMaxDifference(num: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int minMaxDifference(int num) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func minMaxDifference(num int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} num\n# @return {Integer}\ndef min_max_difference(num)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def minMaxDifference(num: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn min_max_difference(num: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (min-max-difference num)\n  (-> exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec min_max_difference(Num :: integer()) -> integer().\nmin_max_difference(Num) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec min_max_difference(num :: integer) :: integer\n  def min_max_difference(num) do\n    \n  end\nend"}], "similarQuestionList": []}