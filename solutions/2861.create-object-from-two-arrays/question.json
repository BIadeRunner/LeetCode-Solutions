{"question_id": "2861", "problem_slug": "create-object-from-two-arrays", "problem_title": "Create Object from Two Arrays", "content": "Given two arrays keysArr and valuesArr, return a new object obj. Each key-value pair in obj should come from keysArr[i] and valuesArr[i].\nIf a duplicate key exists at a previous index, that key-value should be excluded. In other words, only the first key should be added to the object.\nIf the key is not a string, it should be converted into a string by calling String() on it.\n \nExample 1:\n\nInput: keysArr = [\"a\", \"b\", \"c\"], valuesArr = [1, 2, 3]\nOutput: {\"a\": 1, \"b\": 2, \"c\": 3}\nExplanation: The keys \"a\", \"b\", and \"c\" are paired with the values 1, 2, and 3 respectively.\n\nExample 2:\n\nInput: keysArr = [\"1\", 1, false], valuesArr = [4, 5, 6]\nOutput: {\"1\": 4, \"false\": 6}\nExplanation: First, all the elements in keysArr are converted into strings. We can see there are two occurrences of \"1\". The value associated with the first occurrence of \"1\" is used: 4.\n\nExample 3:\n\nInput: keysArr = [], valuesArr = []\nOutput: {}\nExplanation: There are no keys so an empty object is returned.\n\n \nConstraints:\n\nkeysArr and valuesArr are valid JSON arrays\n2 <= JSON.stringify(keysArr).length, JSON.stringify(valuesArr).length <= 5 * 105\nkeysArr.length === valuesArr.length\n\n", "hints": [], "exampleTestcases": "[\"a\",\"b\",\"c\"]\n[1,2,3]\n[1,\"1\",false]\n[4,5,6]\n[]\n[]", "codeSnippets": {"JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {Array} keysArr\n * @param {Array} valuesArr\n * @return {Object}\n */\nvar createObject = function(keysArr, valuesArr) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\n\nfunction createObject(keysArr: JSONValue[], valuesArr: JSONValue[]): Record<string, JSONValue> {\n    \n};"}}}