{"questionId": "1357", "acRate": 57.114736294318625, "difficulty": "Hard", "freqBar": 22.802094556308937, "frontendQuestionId": "1225", "paidOnly": true, "status": "ac", "title": "Report Contiguous Dates", "topicTags": [{"name": "Database", "id": "VG9waWNUYWdOb2RlOjYxMDQz", "slug": "database"}], "titleSlug": "report-contiguous-dates", "content": "<p>Table: <code>Failed</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| fail_date    | date    |\n+--------------+---------+\nfail_date is the primary key (column with unique values) for this table.\nThis table contains the days of failed tasks.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Succeeded</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| success_date | date    |\n+--------------+---------+\nsuccess_date is the primary key (column with unique values) for this table.\nThis table contains the days of succeeded tasks.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>A system is running one task <strong>every day</strong>. Every task is independent of the previous tasks. The tasks can fail or succeed.</p>\n\n<p>Write a solution&nbsp;to report the&nbsp;<code>period_state</code> for each continuous interval of days in the period from <code>2019-01-01</code> to <code>2019-12-31</code>.</p>\n\n<p><code>period_state</code> is <em>&#39;</em><code>failed&#39;</code><em> </em>if tasks in this interval failed or <code>&#39;succeeded&#39;</code> if tasks in this interval succeeded. Interval of days are retrieved as <code>start_date</code> and <code>end_date.</code></p>\n\n<p>Return the result table ordered by <code>start_date</code>.</p>\n\n<p>The&nbsp;result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nFailed table:\n+-------------------+\n| fail_date         |\n+-------------------+\n| 2018-12-28        |\n| 2018-12-29        |\n| 2019-01-04        |\n| 2019-01-05        |\n+-------------------+\nSucceeded table:\n+-------------------+\n| success_date      |\n+-------------------+\n| 2018-12-30        |\n| 2018-12-31        |\n| 2019-01-01        |\n| 2019-01-02        |\n| 2019-01-03        |\n| 2019-01-06        |\n+-------------------+\n<strong>Output:</strong> \n+--------------+--------------+--------------+\n| period_state | start_date   | end_date     |\n+--------------+--------------+--------------+\n| succeeded    | 2019-01-01   | 2019-01-03   |\n| failed       | 2019-01-04   | 2019-01-05   |\n| succeeded    | 2019-01-06   | 2019-01-06   |\n+--------------+--------------+--------------+\n<strong>Explanation:</strong> \nThe report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.\nFrom 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was &quot;succeeded&quot;.\nFrom 2019-01-04 to 2019-01-05 all tasks failed and the system state was &quot;failed&quot;.\nFrom 2019-01-06 to 2019-01-06 all tasks succeeded and the system state was &quot;succeeded&quot;.\n</pre>\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Failed\":[\"fail_date\"],\"Succeeded\":[\"success_date\"]},\"rows\":{\"Failed\":[[\"2018-12-28\"],[\"2018-12-29\"],[\"2019-01-04\"],[\"2019-01-05\"]],\"Succeeded\":[[\"2018-12-30\"],[\"2018-12-31\"],[\"2019-01-01\"],[\"2019-01-02\"],[\"2019-01-03\"],[\"2019-01-06\"]]}}", "codeSnippets": [{"lang": "MySQL", "langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, {"lang": "MS SQL Server", "langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, {"lang": "Oracle", "langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, {"lang": "Pandas", "langSlug": "pythondata", "code": "import pandas as pd\n\ndef report_contiguous_dates(failed: pd.DataFrame, succeeded: pd.DataFrame) -> pd.DataFrame:\n    "}, {"lang": "PostgreSQL", "langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "find-the-start-and-end-number-of-continuous-ranges", "title": "Find the Start and End Number of Continuous Ranges", "isPaidOnly": true}, {"difficulty": "Medium", "titleSlug": "find-the-missing-ids", "title": "Find the Missing IDs", "isPaidOnly": true}, {"difficulty": "Hard", "titleSlug": "customers-with-strictly-increasing-purchases", "title": "Customers With Strictly Increasing Purchases", "isPaidOnly": true}]}