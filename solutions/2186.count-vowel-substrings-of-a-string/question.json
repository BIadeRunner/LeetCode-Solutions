{"questionId": "2186", "acRate": 68.68639447540586, "difficulty": "Easy", "freqBar": 40.80010188615875, "frontendQuestionId": "2062", "paidOnly": false, "status": "ac", "title": "Count Vowel Substrings of a String", "topicTags": [{"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "count-vowel-substrings-of-a-string", "content": "<p>A <strong>substring</strong> is a contiguous (non-empty) sequence of characters within a string.</p>\n\n<p>A <strong>vowel substring</strong> is a substring that <strong>only</strong> consists of vowels (<code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>) and has <strong>all five</strong> vowels present in it.</p>\n\n<p>Given a string <code>word</code>, return <em>the number of <strong>vowel substrings</strong> in</em> <code>word</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;aeiouu&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The vowel substrings of word are as follows (underlined):\n- &quot;<strong><u>aeiou</u></strong>u&quot;\n- &quot;<strong><u>aeiouu</u></strong>&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;unicornarihan&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Not all 5 vowels are present, so there are no vowel substrings.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;cuaieuouac&quot;\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The vowel substrings of word are as follows (underlined):\n- &quot;c<strong><u>uaieuo</u></strong>uac&quot;\n- &quot;c<strong><u>uaieuou</u></strong>ac&quot;\n- &quot;c<strong><u>uaieuoua</u></strong>c&quot;\n- &quot;cu<strong><u>aieuo</u></strong>uac&quot;\n- &quot;cu<strong><u>aieuou</u></strong>ac&quot;\n- &quot;cu<strong><u>aieuoua</u></strong>c&quot;\n- &quot;cua<strong><u>ieuoua</u></strong>c&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 100</code></li>\n\t<li><code>word</code> consists of lowercase English letters only.</li>\n</ul>\n", "hints": ["While generating substrings starting at any index, do you need to continue generating larger substrings if you encounter a consonant?", "Can you store the count of characters to avoid generating substrings altogether?"], "exampleTestcases": "\"aeiouu\"\n\"unicornarihan\"\n\"cuaieuouac\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int countVowelSubstrings(string word) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int countVowelSubstrings(String word) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def countVowelSubstrings(self, word):\n        \"\"\"\n        :type word: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def countVowelSubstrings(self, word: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int countVowelSubstrings(char* word) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int CountVowelSubstrings(string word) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} word\n * @return {number}\n */\nvar countVowelSubstrings = function(word) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function countVowelSubstrings(word: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $word\n     * @return Integer\n     */\n    function countVowelSubstrings($word) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func countVowelSubstrings(_ word: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun countVowelSubstrings(word: String): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int countVowelSubstrings(String word) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func countVowelSubstrings(word string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} word\n# @return {Integer}\ndef count_vowel_substrings(word)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def countVowelSubstrings(word: String): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn count_vowel_substrings(word: String) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (count-vowel-substrings word)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec count_vowel_substrings(Word :: unicode:unicode_binary()) -> integer().\ncount_vowel_substrings(Word) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_vowel_substrings(word :: String.t) :: integer\n  def count_vowel_substrings(word) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "number-of-matching-subsequences", "title": "Number of Matching Subsequences", "isPaidOnly": false}, {"difficulty": "Hard", "titleSlug": "subarrays-with-k-different-integers", "title": "Subarrays with K Different Integers", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "number-of-substrings-with-only-1s", "title": "Number of Substrings With Only 1s", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "longest-substring-of-all-vowels-in-order", "title": "Longest Substring Of All Vowels in Order", "isPaidOnly": false}, {"difficulty": "Hard", "titleSlug": "total-appeal-of-a-string", "title": "Total Appeal of A String", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii", "title": "Count of Substrings Containing Every Vowel and K Consonants II", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-i", "title": "Count of Substrings Containing Every Vowel and K Consonants I", "isPaidOnly": false}]}