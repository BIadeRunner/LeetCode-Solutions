{"questionId": "1604", "acRate": 63.16313376899379, "difficulty": "Medium", "freqBar": 45.350900038803275, "frontendQuestionId": "1481", "paidOnly": false, "status": "ac", "title": "Least Number of Unique Integers after K Removals", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "Greedy", "id": "VG9waWNUYWdOb2RlOjE3", "slug": "greedy"}, {"name": "Sorting", "id": "VG9waWNUYWdOb2RlOjYxMDQ5", "slug": "sorting"}, {"name": "Counting", "id": "VG9waWNUYWdOb2RlOjYxMDYy", "slug": "counting"}], "titleSlug": "least-number-of-unique-integers-after-k-removals", "content": "<p>Given an array of integers&nbsp;<code>arr</code>&nbsp;and an integer <code>k</code>.&nbsp;Find the <em>least number of unique integers</em>&nbsp;after removing <strong>exactly</strong> <code>k</code> elements<b>.</b></p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>arr = [5,5,4], k = 1\r\n<strong>Output: </strong>1\r\n<strong>Explanation</strong>: Remove the single 4, only 5 is left.\r\n</pre>\r\n<strong class=\"example\">Example 2:</strong>\r\n\r\n<pre>\r\n<strong>Input: </strong>arr = [4,3,1,1,3,3,2], k = 3\r\n<strong>Output: </strong>2\r\n<strong>Explanation</strong>: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= arr.length&nbsp;&lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= arr[i] &lt;= 10^9</code></li>\r\n\t<li><code>0 &lt;= k&nbsp;&lt;= arr.length</code></li>\r\n</ul>", "hints": ["Use a map to count the frequencies of the numbers in the array.", "An optimal strategy is to remove the numbers with the smallest count first."], "exampleTestcases": "[5,5,4]\n1\n[4,3,1,1,3,3,2]\n3", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\r\npublic:\r\n    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {\r\n        \r\n    }\r\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\r\n    public int findLeastNumOfUniqueInts(int[] arr, int k) {\r\n        \r\n    }\r\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\r\n    def findLeastNumOfUniqueInts(self, arr, k):\r\n        \"\"\"\r\n        :type arr: List[int]\r\n        :type k: int\r\n        :rtype: int\r\n        \"\"\""}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\r\n    def findLeastNumOfUniqueInts(self, arr: List[int], k: int) -> int:"}, {"lang": "C", "langSlug": "c", "code": "int findLeastNumOfUniqueInts(int* arr, int arrSize, int k){\r\n\r\n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\r\n    public int FindLeastNumOfUniqueInts(int[] arr, int k) {\r\n        \r\n    }\r\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\r\n * @param {number[]} arr\r\n * @param {number} k\r\n * @return {number}\r\n */\r\nvar findLeastNumOfUniqueInts = function(arr, k) {\r\n    \r\n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function findLeastNumOfUniqueInts(arr: number[], k: number): number {\r\n\r\n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $arr\r\n     * @param Integer $k\r\n     * @return Integer\r\n     */\r\n    function findLeastNumOfUniqueInts($arr, $k) {\r\n        \r\n    }\r\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\r\n    func findLeastNumOfUniqueInts(_ arr: [Int], _ k: Int) -> Int {\r\n        \r\n    }\r\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\r\n    fun findLeastNumOfUniqueInts(arr: IntArray, k: Int): Int {\r\n        \r\n    }\r\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func findLeastNumOfUniqueInts(arr []int, k int) int {\r\n    \r\n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} arr\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef find_least_num_of_unique_ints(arr, k)\r\n    \r\nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\r\n    def findLeastNumOfUniqueInts(arr: Array[Int], k: Int): Int = {\r\n        \r\n    }\r\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\r\n    pub fn find_least_num_of_unique_ints(arr: Vec<i32>, k: i32) -> i32 {\r\n        \r\n    }\r\n}"}], "similarQuestionList": []}