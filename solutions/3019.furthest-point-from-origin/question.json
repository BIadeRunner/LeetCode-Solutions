{"question_id": "3019", "problem_slug": "furthest-point-from-origin", "problem_title": "Furthest Point From Origin", "content": "You are given a string moves of length n consisting only of characters 'L', 'R', and '_'. The string represents your movement on a number line starting from the origin 0.\nIn the ith move, you can choose one of the following directions:\n\nmove to the left if moves[i] = 'L' or moves[i] = '_'\nmove to the right if moves[i] = 'R' or moves[i] = '_'\n\nReturn the distance from the origin of the furthest point you can get to after n moves.\n \nExample 1:\n\nInput: moves = \"L_RL__R\"\nOutput: 3\nExplanation: The furthest point we can reach from the origin 0 is point -3 through the following sequence of moves \"LLRLLLR\".\n\nExample 2:\n\nInput: moves = \"_R__LL_\"\nOutput: 5\nExplanation: The furthest point we can reach from the origin 0 is point -5 through the following sequence of moves \"LRLLLLL\".\n\nExample 3:\n\nInput: moves = \"_______\"\nOutput: 7\nExplanation: The furthest point we can reach from the origin 0 is point 7 through the following sequence of moves \"RRRRRRR\".\n\n \nConstraints:\n\n1 <= moves.length == n <= 50\nmoves consists only of characters 'L', 'R' and '_'.\n\n", "hints": ["<div class=\"_1l1MA\">In an optimal answer, all occurrences of <code>'_’</code> will be replaced with the <strong>same</strong> character.</div>", "<div class=\"_1l1MA\">Replace all characters of <code>'_’</code> with the character that occurs the most. </div>"], "exampleTestcases": "\"L_RL__R\"\n\"_R__LL_\"\n\"_______\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int furthestDistanceFromOrigin(string moves) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int furthestDistanceFromOrigin(String moves) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def furthestDistanceFromOrigin(self, moves):\n        \"\"\"\n        :type moves: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def furthestDistanceFromOrigin(self, moves: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int furthestDistanceFromOrigin(char * moves){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int FurthestDistanceFromOrigin(string moves) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} moves\n * @return {number}\n */\nvar furthestDistanceFromOrigin = function(moves) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function furthestDistanceFromOrigin(moves: string): number {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $moves\n     * @return Integer\n     */\n    function furthestDistanceFromOrigin($moves) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func furthestDistanceFromOrigin(_ moves: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun furthestDistanceFromOrigin(moves: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int furthestDistanceFromOrigin(String moves) {\n\n  }\n}"}, "Go": {"langSlug": "golang", "code": "func furthestDistanceFromOrigin(moves string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} moves\n# @return {Integer}\ndef furthest_distance_from_origin(moves)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def furthestDistanceFromOrigin(moves: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn furthest_distance_from_origin(moves: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (furthest-distance-from-origin moves)\n  (-> string? exact-integer?)\n\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec furthest_distance_from_origin(Moves :: unicode:unicode_binary()) -> integer().\nfurthest_distance_from_origin(Moves) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec furthest_distance_from_origin(moves :: String.t) :: integer\n  def furthest_distance_from_origin(moves) do\n    \n  end\nend"}}}