{"question_id": "3357", "problem_slug": "employees-project-allocation", "problem_title": "Employees Project Allocation", "content": "Table: Project\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| project_id  | int     |\n| employee_id | int     |\n| workload    | int     |\n+-------------+---------+\nemployee_id is the primary key (column with unique values) of this table.\nemployee_id is a foreign key (reference column) to Employee table.\nEach row of this table indicates that the employee with employee_id is working on the project with project_id and the workload of the project.\n\nTable: Employees\n\n+------------------+---------+\n| Column Name      | Type    |\n+------------------+---------+\n| employee_id      | int     |\n| name             | varchar |\n| team             | varchar |\n+------------------+---------+\nemployee_id is the primary key (column with unique values) of this table.\nEach row of this table contains information about one employee.\n\nWrite a solution to find the employees who are allocated to projects with a workload that exceeds the average workload of all employees for their respective teams\nReturn the result table ordered by employee_id, project_id in ascending order.\nThe result format is in the following example.\nÂ \nExample 1:\n\nInput: \nProject table:\n+-------------+-------------+----------+\n| project_id  | employee_id | workload |\n+-------------+-------------+----------+\n| 1           | 1           |  45      |\n| 1           | 2           |  90      | \n| 2           | 3           |  12      |\n| 2           | 4           |  68      |\n+-------------+-------------+----------+\nEmployees table:\n+-------------+--------+------+\n| employee_id | name   | team |\n+-------------+--------+------+\n| 1           | Khaled | A    |\n| 2           | Ali    | B    |\n| 3           | John   | B    |\n| 4           | Doe    | A    |\n+-------------+--------+------+\nOutput: \n+-------------+------------+---------------+------------------+\n| employee_id | project_id | employee_name | project_workload |\n+-------------+------------+---------------+------------------+  \n| 2           | 1          | Ali           | 90               | \n| 4           | 2          | Doe           | 68               | \n+-------------+------------+---------------+------------------+\nExplanation: \n- Employee with ID 1 has a project workload of 45 and belongs to Team A, where the average workload is 56.50. Since his project workload does not exceed the team's average workload, he will be excluded.\n- Employee with ID 2 has a project workload of 90 and belongs to Team B, where the average workload is 51.00. Since his project workload does exceed the team's average workload, he will be included.\n- Employee with ID 3 has a project workload of 12 and belongs to Team B, where the average workload is 51.00. Since his project workload does not exceed the team's average workload, he will be excluded.\n- Employee with ID 4 has a project workload of 68 and belongs to Team A, where the average workload is 56.50. Since his project workload does exceed the team's average workload, he will be included.\nResult table orderd by employee_id, project_id in ascending order.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Project\":[\"project_id\",\"employee_id\",\"workload\"],\"Employees\":[\"employee_id\",\"name\",\"team\"]},\"rows\":{\"Project\":[[1,1,45],[1,2,90],[2,3,12],[2,4,68]],\"Employees\":[[1,\"Khaled\",\"A\"],[2,\"Ali\",\"B\"],[3,\"John\",\"B\"],[4,\"Doe\",\"A\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef employees_with_above_avg_workload(project: pd.DataFrame, employees: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}