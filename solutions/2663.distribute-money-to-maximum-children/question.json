{"questionId": "2663", "acRate": 19.30087303798644, "difficulty": "Easy", "freqBar": 32.97677060654209, "frontendQuestionId": "2591", "paidOnly": false, "status": "ac", "title": "Distribute Money to Maximum Children", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "Greedy", "id": "VG9waWNUYWdOb2RlOjE3", "slug": "greedy"}], "titleSlug": "distribute-money-to-maximum-children", "content": "<p>You are given an integer <code>money</code> denoting the amount of money (in dollars) that you have and another integer <code>children</code> denoting the number of children that you must distribute the money to.</p>\n\n<p>You have to distribute the money according to the following rules:</p>\n\n<ul>\n\t<li>All money must be distributed.</li>\n\t<li>Everyone must receive at least <code>1</code> dollar.</li>\n\t<li>Nobody receives <code>4</code> dollars.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum</strong> number of children who may receive <strong>exactly</strong> </em><code>8</code> <em>dollars if you distribute the money according to the aforementioned rules</em>. If there is no way to distribute the money, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> money = 20, children = 3\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \nThe maximum number of children with 8 dollars will be 1. One of the ways to distribute the money is:\n- 8 dollars to the first child.\n- 9 dollars to the second child. \n- 3 dollars to the third child.\nIt can be proven that no distribution exists such that number of children getting 8 dollars is greater than 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> money = 16, children = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Each child can be given 8 dollars.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= money &lt;= 200</code></li>\n\t<li><code>2 &lt;= children &lt;= 30</code></li>\n</ul>\n", "hints": ["Can we distribute the money according to the rules if we give 'k' children exactly 8 dollars?", "Brute force to find the largest possible value of k, or return -1 if there doesn\u2019t exist any such k."], "exampleTestcases": "20\n3\n16\n2", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int distMoney(int money, int children) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int distMoney(int money, int children) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def distMoney(self, money, children):\n        \"\"\"\n        :type money: int\n        :type children: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def distMoney(self, money: int, children: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int distMoney(int money, int children) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int DistMoney(int money, int children) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} money\n * @param {number} children\n * @return {number}\n */\nvar distMoney = function(money, children) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function distMoney(money: number, children: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $money\n     * @param Integer $children\n     * @return Integer\n     */\n    function distMoney($money, $children) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func distMoney(_ money: Int, _ children: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun distMoney(money: Int, children: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int distMoney(int money, int children) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func distMoney(money int, children int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} money\n# @param {Integer} children\n# @return {Integer}\ndef dist_money(money, children)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def distMoney(money: Int, children: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn dist_money(money: i32, children: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (dist-money money children)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec dist_money(Money :: integer(), Children :: integer()) -> integer().\ndist_money(Money, Children) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec dist_money(money :: integer, children :: integer) :: integer\n  def dist_money(money, children) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "distribute-candies-to-people", "title": "Distribute Candies to People", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "fair-distribution-of-cookies", "title": "Fair Distribution of Cookies", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "calculate-money-in-leetcode-bank", "title": "Calculate Money in Leetcode Bank", "isPaidOnly": false}]}