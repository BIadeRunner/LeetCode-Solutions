{"question_id": "1357", "problem_slug": "report-contiguous-dates", "problem_title": "Report Contiguous Dates", "content": "Table: Failed\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| fail_date    | date    |\n+--------------+---------+\nfail_date is the primary key (column with unique values) for this table.\nThis table contains the days of failed tasks.\n\n \nTable: Succeeded\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| success_date | date    |\n+--------------+---------+\nsuccess_date is the primary key (column with unique values) for this table.\nThis table contains the days of succeeded tasks.\n\n \nA system is running one task every day. Every task is independent of the previous tasks. The tasks can fail or succeed.\nWrite a solution to report the period_state for each continuous interval of days in the period from 2019-01-01 to 2019-12-31.\nperiod_state is 'failed' if tasks in this interval failed or 'succeeded' if tasks in this interval succeeded. Interval of days are retrieved as start_date and end_date.\nReturn the result table ordered by start_date.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nFailed table:\n+-------------------+\n| fail_date         |\n+-------------------+\n| 2018-12-28        |\n| 2018-12-29        |\n| 2019-01-04        |\n| 2019-01-05        |\n+-------------------+\nSucceeded table:\n+-------------------+\n| success_date      |\n+-------------------+\n| 2018-12-30        |\n| 2018-12-31        |\n| 2019-01-01        |\n| 2019-01-02        |\n| 2019-01-03        |\n| 2019-01-06        |\n+-------------------+\nOutput: \n+--------------+--------------+--------------+\n| period_state | start_date   | end_date     |\n+--------------+--------------+--------------+\n| succeeded    | 2019-01-01   | 2019-01-03   |\n| failed       | 2019-01-04   | 2019-01-05   |\n| succeeded    | 2019-01-06   | 2019-01-06   |\n+--------------+--------------+--------------+\nExplanation: \nThe report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.\nFrom 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was \"succeeded\".\nFrom 2019-01-04 to 2019-01-05 all tasks failed and the system state was \"failed\".\nFrom 2019-01-06 to 2019-01-06 all tasks succeeded and the system state was \"succeeded\".\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Failed\":[\"fail_date\"],\"Succeeded\":[\"success_date\"]},\"rows\":{\"Failed\":[[\"2018-12-28\"],[\"2018-12-29\"],[\"2019-01-04\"],[\"2019-01-05\"]],\"Succeeded\":[[\"2018-12-30\"],[\"2018-12-31\"],[\"2019-01-01\"],[\"2019-01-02\"],[\"2019-01-03\"],[\"2019-01-06\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef report_contiguous_dates(failed: pd.DataFrame, succeeded: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}