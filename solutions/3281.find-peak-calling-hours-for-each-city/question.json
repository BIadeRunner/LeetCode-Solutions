{"question_id": "3281", "problem_slug": "find-peak-calling-hours-for-each-city", "problem_title": "Find Peak Calling Hours for Each City", "content": "Table: Calls\n\n+--------------+----------+\n| Column Name  | Type     |\n+--------------+----------+\n| caller_id    | int      |\n| recipient_id | int      |\n| call_time    | datetime |\n| city         | varchar  |\n+--------------+----------+\n(caller_id, recipient_id, call_time) is the primary key (combination of columns with unique values) for this table.\nEach row contains caller id, recipient id, call time, and city.\n\nWrite a solution to find the peak calling hour for each city. If multiple hours have the same number of calls, all of those hours will be recognized as peak hours for that specific city.\nReturn the result table ordered by peak calling hour and city in descending order.\nThe result format is in the following example.\nÂ \nExample 1:\n\nInput: \nCalls table:\n+-----------+--------------+---------------------+----------+\n| caller_id | recipient_id | call_time           | city     |\n+-----------+--------------+---------------------+----------+\n| 8         | 4            | 2021-08-24 22:46:07 | Houston  |\n| 4         | 8            | 2021-08-24 22:57:13 | Houston  |  \n| 5         | 1            | 2021-08-11 21:28:44 | Houston  |  \n| 8         | 3            | 2021-08-17 22:04:15 | Houston  |\n| 11        | 3            | 2021-08-17 13:07:00 | New York |\n| 8         | 11           | 2021-08-17 14:22:22 | New York |\n+-----------+--------------+---------------------+----------+\nOutput: \n+----------+-------------------+-----------------+\n| city     | peak_calling_hour | number_of_calls |\n+----------+-------------------+-----------------+\n| Houston  | 22                | 3               |\n| New York | 14                | 1               |\n| New York | 13                | 1               |\n+----------+-------------------+-----------------+\nExplanation: \nFor Houston:\n  - The peak time is 22:00, with a total of 3 calls recorded. \nFor New York:\n  - Both 13:00 and 14:00 hours have equal call counts of 1, so both times are considered peak hours.\nOutput table is ordered by peak_calling_hour and city in descending order.\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Calls\":[\"caller_id\",\"recipient_id\",\"call_time\",\"city\"]},\"rows\":{\"Calls\":[[8,4,\"2021-08-24 22:46:07\",\"Houston\"],[4,8,\"2021-08-24 22:57:13\",\"Houston\"],[5,1,\"2021-08-11 21:28:44\",\"Houston\"],[8,3,\"2021-08-17 22:04:15\",\"Houston\"],[11,3,\"2021-08-17 13:07:00\",\"New York\"],[8,11,\"2021-08-17 14:22:22\",\"New York\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef peak_calling_hours(calls: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}