{"question_id": "2235", "problem_slug": "capitalize-the-title", "problem_title": "Capitalize the Title", "content": "You are given a string title consisting of one or more words separated by a single space, where each word consists of English letters. Capitalize the string by changing the capitalization of each word such that:\n\nIf the length of the word is 1 or 2 letters, change all letters to lowercase.\nOtherwise, change the first letter to uppercase and the remaining letters to lowercase.\n\nReturn the capitalized title.\n \nExample 1:\n\nInput: title = \"capiTalIze tHe titLe\"\nOutput: \"Capitalize The Title\"\nExplanation:\nSince all the words have a length of at least 3, the first letter of each word is uppercase, and the remaining letters are lowercase.\n\nExample 2:\n\nInput: title = \"First leTTeR of EACH Word\"\nOutput: \"First Letter of Each Word\"\nExplanation:\nThe word \"of\" has length 2, so it is all lowercase.\nThe remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.\n\nExample 3:\n\nInput: title = \"i lOve leetcode\"\nOutput: \"i Love Leetcode\"\nExplanation:\nThe word \"i\" has length 1, so it is lowercase.\nThe remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.\n\n \nConstraints:\n\n1 <= title.length <= 100\ntitle consists of words separated by a single space without any leading or trailing spaces.\nEach word consists of uppercase and lowercase English letters and is non-empty.\n\n", "hints": ["Firstly, try to find all the words present in the string.", "On the basis of each word's lengths, simulate the process explained in Problem."], "exampleTestcases": "\"capiTalIze tHe titLe\"\n\"First leTTeR of EACH Word\"\n\"i lOve leetcode\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string capitalizeTitle(string title) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String capitalizeTitle(String title) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def capitalizeTitle(self, title):\n        \"\"\"\n        :type title: str\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def capitalizeTitle(self, title: str) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* capitalizeTitle(char* title) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string CapitalizeTitle(string title) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} title\n * @return {string}\n */\nvar capitalizeTitle = function(title) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function capitalizeTitle(title: string): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $title\n     * @return String\n     */\n    function capitalizeTitle($title) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func capitalizeTitle(_ title: String) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun capitalizeTitle(title: String): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String capitalizeTitle(String title) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func capitalizeTitle(title string) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} title\n# @return {String}\ndef capitalize_title(title)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def capitalizeTitle(title: String): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn capitalize_title(title: String) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (capitalize-title title)\n  (-> string? string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec capitalize_title(Title :: unicode:unicode_binary()) -> unicode:unicode_binary().\ncapitalize_title(Title) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec capitalize_title(title :: String.t) :: String.t\n  def capitalize_title(title) do\n    \n  end\nend"}}}