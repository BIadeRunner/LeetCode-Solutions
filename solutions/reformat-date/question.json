{"questionId": "1283", "acRate": 66.82800446525266, "difficulty": "Easy", "freqBar": 46.34405465744672, "frontendQuestionId": "1507", "paidOnly": false, "status": "ac", "title": "Reformat Date", "topicTags": [{"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "reformat-date", "content": "<p>Given a <code>date</code> string in the form&nbsp;<code>Day Month Year</code>, where:</p>\n\n<ul>\n\t<li><code>Day</code>&nbsp;is in the set <code>{&quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;, ..., &quot;30th&quot;, &quot;31st&quot;}</code>.</li>\n\t<li><code>Month</code>&nbsp;is in the set <code>{&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;}</code>.</li>\n\t<li><code>Year</code>&nbsp;is in the range <code>[1900, 2100]</code>.</li>\n</ul>\n\n<p>Convert the date string to the format <code>YYYY-MM-DD</code>, where:</p>\n\n<ul>\n\t<li><code>YYYY</code> denotes the 4 digit year.</li>\n\t<li><code>MM</code> denotes the 2 digit month.</li>\n\t<li><code>DD</code> denotes the 2 digit day.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;20th Oct 2052&quot;\n<strong>Output:</strong> &quot;2052-10-20&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;6th Jun 1933&quot;\n<strong>Output:</strong> &quot;1933-06-06&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;26th May 1960&quot;\n<strong>Output:</strong> &quot;1960-05-26&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given dates are guaranteed to be valid, so no error handling is necessary.</li>\n</ul>\n", "hints": ["Handle the conversions of day, month and year separately.", "Notice that days always have a two-word ending, so if you erase the last two characters of this days you'll get the number."], "exampleTestcases": "\"20th Oct 2052\"\n\"6th Jun 1933\"\n\"26th May 1960\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string reformatDate(string date) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String reformatDate(String date) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def reformatDate(self, date):\n        \"\"\"\n        :type date: str\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def reformatDate(self, date: str) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* reformatDate(char* date) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string ReformatDate(string date) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} date\n * @return {string}\n */\nvar reformatDate = function(date) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function reformatDate(date: string): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $date\n     * @return String\n     */\n    function reformatDate($date) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func reformatDate(_ date: String) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun reformatDate(date: String): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String reformatDate(String date) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func reformatDate(date string) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} date\n# @return {String}\ndef reformat_date(date)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def reformatDate(date: String): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn reformat_date(date: String) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (reformat-date date)\n  (-> string? string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec reformat_date(Date :: unicode:unicode_binary()) -> unicode:unicode_binary().\nreformat_date(Date) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec reformat_date(date :: String.t) :: String.t\n  def reformat_date(date) do\n    \n  end\nend"}], "similarQuestionList": []}