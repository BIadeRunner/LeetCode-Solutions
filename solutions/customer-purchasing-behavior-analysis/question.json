{"questionId": "3539", "acRate": 37.36050460941291, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "3230", "paidOnly": true, "status": "ac", "title": "Customer Purchasing Behavior Analysis", "topicTags": [{"name": "Database", "id": "VG9waWNUYWdOb2RlOjYxMDQz", "slug": "database"}], "titleSlug": "customer-purchasing-behavior-analysis", "content": "<p>Table: <code>Transactions</code></p>\n\n<pre>\n+------------------+---------+\n| Column Name      | Type    |\n+------------------+---------+\n| transaction_id   | int     |\n| customer_id      | int     |\n| product_id       | int     |\n| transaction_date | date    |\n| amount           | decimal |\n+------------------+---------+\ntransaction_id is the unique identifier for this table.\nEach row of this table contains information about a transaction, including the customer ID, product ID, date, and amount spent.\n</pre>\n\n<p>Table: <code>Products</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| product_id  | int     |\n| category    | varchar |\n| price       | decimal |\n+-------------+---------+\nproduct_id is the unique identifier for this table.\nEach row of this table contains information about a product, including its category and price.\n</pre>\n\n<p>Write a solution to analyze customer purchasing behavior. For <strong>each customer</strong>, calculate:</p>\n\n<ul>\n\t<li>The total amount spent.</li>\n\t<li>The number of transactions.</li>\n\t<li>The number of <strong>unique</strong> product categories purchased.</li>\n\t<li>The average amount spent.&nbsp;</li>\n\t<li>The <strong>most frequently</strong> purchased product category&nbsp;(if there is a tie, choose the one with the most recent transaction).</li>\n\t<li>A <strong>loyalty score</strong>&nbsp;defined as: (Number of transactions * 10) + (Total amount spent / 100).</li>\n</ul>\n\n<p>Round <code>total_amount</code>, <code>avg_transaction_amount</code>, and <code>loyalty_score</code> to <code>2</code> decimal places.</p>\n\n<p>Return <em>the result table ordered by</em> <code>loyalty_score</code> <em>in <strong>descending</strong> order</em>, <em>then by </em><code>customer_id</code><em> in <strong>ascending</strong> order</em>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong></p>\n\n<p><code>Transactions</code> table:</p>\n\n<pre class=\"example-io\">\n+----------------+-------------+------------+------------------+--------+\n| transaction_id | customer_id | product_id | transaction_date | amount |\n+----------------+-------------+------------+------------------+--------+\n| 1              | 101         | 1          | 2023-01-01       | 100.00 |\n| 2              | 101         | 2          | 2023-01-15       | 150.00 |\n| 3              | 102         | 1          | 2023-01-01       | 100.00 |\n| 4              | 102         | 3          | 2023-01-22       | 200.00 |\n| 5              | 101         | 3          | 2023-02-10       | 200.00 |\n+----------------+-------------+------------+------------------+--------+\n</pre>\n\n<p><code>Products</code> table:</p>\n\n<pre class=\"example-io\">\n+------------+----------+--------+\n| product_id | category | price  |\n+------------+----------+--------+\n| 1          | A        | 100.00 |\n| 2          | B        | 150.00 |\n| 3          | C        | 200.00 |\n+------------+----------+--------+\n</pre>\n\n<p><strong>Output:</strong></p>\n\n<pre class=\"example-io\">\n+-------------+--------------+-------------------+-------------------+------------------------+--------------+---------------+\n| customer_id | total_amount | transaction_count | unique_categories | avg_transaction_amount | top_category | loyalty_score |\n+-------------+--------------+-------------------+-------------------+------------------------+--------------+---------------+\n| 101         | 450.00       | 3                 | 3                 | 150.00                 | C            | 34.50         |\n| 102         | 300.00       | 2                 | 2                 | 150.00                 | C            | 23.00         |\n+-------------+--------------+-------------------+-------------------+------------------------+--------------+---------------+\n</pre>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>For customer 101:\n\t<ul>\n\t\t<li>Total amount spent: 100.00 + 150.00 + 200.00 = 450.00</li>\n\t\t<li>Number of transactions: 3</li>\n\t\t<li>Unique categories: A, B, C (3 categories)</li>\n\t\t<li>Average transaction amount: 450.00 / 3 = 150.00</li>\n\t\t<li>Top category: C (Customer 101 made 1 purchase each in categories A, B, and C. Since the count is the same for all categories, we choose the most recent transaction, which is category C on 2023-02-10)</li>\n\t\t<li>Loyalty score: (3 * 10) + (450.00 / 100) = 34.50</li>\n\t</ul>\n\t</li>\n\t<li>For customer 102:\n\t<ul>\n\t\t<li>Total amount spent: 100.00 + 200.00 = 300.00</li>\n\t\t<li>Number of transactions: 2</li>\n\t\t<li>Unique categories: A, C (2 categories)</li>\n\t\t<li>Average transaction amount: 300.00 / 2 = 150.00</li>\n\t\t<li>Top category: C (Customer 102 made 1 purchase each in categories A and C. Since the count is the same for both categories, we choose the most recent transaction, which is category C on 2023-01-22)</li>\n\t\t<li>Loyalty score: (2 * 10) + (300.00 / 100) = 23.00</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p><strong>Note:</strong> The output is ordered by loyalty_score in descending order, then by customer_id in ascending order.</p>\n</div>\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Transactions\":[\"transaction_id\",\"customer_id\",\"product_id\",\"transaction_date\",\"amount\"],\"Products\":[\"product_id\",\"category\",\"price\"]},\"rows\":{\"Transactions\":[[1,101,1,\"2023-01-01\",100.00],[2,101,2,\"2023-01-15\",150.00],[3,102,1,\"2023-01-01\",100.00],[4,102,3,\"2023-01-22\",200.00],[5,101,3,\"2023-02-10\",200.00]],\"Products\":[[1,\"A\",100.00],[2,\"B\",150.00],[3,\"C\",200.00]]}}", "codeSnippets": [{"lang": "MySQL", "langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, {"lang": "MS SQL Server", "langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, {"lang": "Oracle", "langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, {"lang": "Pandas", "langSlug": "pythondata", "code": "import pandas as pd\n\ndef analyze_customer_behavior(transactions: pd.DataFrame, products: pd.DataFrame) -> pd.DataFrame:\n    "}, {"lang": "PostgreSQL", "langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}], "similarQuestionList": []}