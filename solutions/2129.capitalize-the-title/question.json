{"questionId": "2235", "acRate": 65.20987117567554, "difficulty": "Easy", "freqBar": 25.669709558039997, "frontendQuestionId": "2129", "paidOnly": false, "status": "ac", "title": "Capitalize the Title", "topicTags": [{"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "capitalize-the-title", "content": "<p>You are given a string <code>title</code> consisting of one or more words separated by a single space, where each word consists of English letters. <strong>Capitalize</strong> the string by changing the capitalization of each word such that:</p>\n\n<ul>\n\t<li>If the length of the word is <code>1</code> or <code>2</code> letters, change all letters to lowercase.</li>\n\t<li>Otherwise, change the first letter to uppercase and the remaining letters to lowercase.</li>\n</ul>\n\n<p>Return <em>the <strong>capitalized</strong> </em><code>title</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> title = &quot;capiTalIze tHe titLe&quot;\n<strong>Output:</strong> &quot;Capitalize The Title&quot;\n<strong>Explanation:</strong>\nSince all the words have a length of at least 3, the first letter of each word is uppercase, and the remaining letters are lowercase.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> title = &quot;First leTTeR of EACH Word&quot;\n<strong>Output:</strong> &quot;First Letter of Each Word&quot;\n<strong>Explanation:</strong>\nThe word &quot;of&quot; has length 2, so it is all lowercase.\nThe remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> title = &quot;i lOve leetcode&quot;\n<strong>Output:</strong> &quot;i Love Leetcode&quot;\n<strong>Explanation:</strong>\nThe word &quot;i&quot; has length 1, so it is lowercase.\nThe remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= title.length &lt;= 100</code></li>\n\t<li><code>title</code> consists of words separated by a single space without any leading or trailing spaces.</li>\n\t<li>Each word consists of uppercase and lowercase English letters and is <strong>non-empty</strong>.</li>\n</ul>\n", "hints": ["Firstly, try to find all the words present in the string.", "On the basis of each word's lengths, simulate the process explained in Problem."], "exampleTestcases": "\"capiTalIze tHe titLe\"\n\"First leTTeR of EACH Word\"\n\"i lOve leetcode\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string capitalizeTitle(string title) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String capitalizeTitle(String title) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def capitalizeTitle(self, title):\n        \"\"\"\n        :type title: str\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def capitalizeTitle(self, title: str) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* capitalizeTitle(char* title) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string CapitalizeTitle(string title) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} title\n * @return {string}\n */\nvar capitalizeTitle = function(title) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function capitalizeTitle(title: string): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $title\n     * @return String\n     */\n    function capitalizeTitle($title) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func capitalizeTitle(_ title: String) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun capitalizeTitle(title: String): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String capitalizeTitle(String title) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func capitalizeTitle(title string) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} title\n# @return {String}\ndef capitalize_title(title)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def capitalizeTitle(title: String): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn capitalize_title(title: String) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (capitalize-title title)\n  (-> string? string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec capitalize_title(Title :: unicode:unicode_binary()) -> unicode:unicode_binary().\ncapitalize_title(Title) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec capitalize_title(title :: String.t) :: String.t\n  def capitalize_title(title) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "detect-capital", "title": "Detect Capital", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "to-lower-case", "title": "To Lower Case", "isPaidOnly": false}]}