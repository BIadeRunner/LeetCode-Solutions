{"question_id": "1481", "problem_slug": "students-with-invalid-departments", "problem_title": "Students With Invalid Departments", "content": "Table: Departments\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n+---------------+---------+\nIn SQL, id is the primary key of this table.\nThe table has information about the id of each department of a university.\n\n \nTable: Students\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n| department_id | int     |\n+---------------+---------+\nIn SQL, id is the primary key of this table.\nThe table has information about the id of each student at a university and the id of the department he/she studies at.\n\n \nFind the id and the name of all students who are enrolled in departments that no longer exist.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nDepartments table:\n+------+--------------------------+\n| id   | name                     |\n+------+--------------------------+\n| 1    | Electrical Engineering   |\n| 7    | Computer Engineering     |\n| 13   | Bussiness Administration |\n+------+--------------------------+\nStudents table:\n+------+----------+---------------+\n| id   | name     | department_id |\n+------+----------+---------------+\n| 23   | Alice    | 1             |\n| 1    | Bob      | 7             |\n| 5    | Jennifer | 13            |\n| 2    | John     | 14            |\n| 4    | Jasmine  | 77            |\n| 3    | Steve    | 74            |\n| 6    | Luis     | 1             |\n| 8    | Jonathan | 7             |\n| 7    | Daiana   | 33            |\n| 11   | Madelynn | 1             |\n+------+----------+---------------+\nOutput: \n+------+----------+\n| id   | name     |\n+------+----------+\n| 2    | John     |\n| 7    | Daiana   |\n| 4    | Jasmine  |\n| 3    | Steve    |\n+------+----------+\nExplanation: \nJohn, Daiana, Steve, and Jasmine are enrolled in departments 14, 33, 74, and 77 respectively. department 14, 33, 74, and 77 do not exist in the Departments table.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Departments\":[\"id\",\"name\"],\"Students\":[\"id\",\"name\",\"department_id\"]},\"rows\":{\"Departments\":[[1,\"Electrical Engineering\"],[7,\"Computer Engineering\"],[13,\"Bussiness Administration\"]],\"Students\":[[23,\"Alice\",1],[1,\"Bob\",7],[5,\"Jennifer\",13],[2,\"John\",14],[4,\"Jasmine\",77],[3,\"Steve\",74],[6,\"Luis\",1],[8,\"Jonathan\",7],[7,\"Daiana\",33],[11,\"Madelynn\",1]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_students(departments: pd.DataFrame, students: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}