{"questionId": "616", "acRate": 50.042474031699605, "difficulty": "Medium", "freqBar": 70.3917800649586, "frontendQuestionId": "616", "paidOnly": true, "status": "ac", "title": "Add Bold Tag in String", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Trie", "id": "VG9waWNUYWdOb2RlOjI3", "slug": "trie"}, {"name": "String Matching", "id": "VG9waWNUYWdOb2RlOjYxMDUy", "slug": "string-matching"}], "titleSlug": "add-bold-tag-in-string", "content": "<p>You are given a string <code>s</code> and an array of strings <code>words</code>.</p>\n\n<p>You should add a closed pair of bold tag <code>&lt;b&gt;</code> and <code>&lt;/b&gt;</code> to wrap the substrings in <code>s</code> that exist in <code>words</code>.</p>\n\n<ul>\n\t<li>If two such substrings overlap, you should wrap them together with only one pair of closed bold-tag.</li>\n\t<li>If two substrings wrapped by bold tags are consecutive, you should combine them.</li>\n</ul>\n\n<p>Return <code>s</code> <em>after adding the bold tags</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcxyz123&quot;, words = [&quot;abc&quot;,&quot;123&quot;]\n<strong>Output:</strong> &quot;&lt;b&gt;abc&lt;/b&gt;xyz&lt;b&gt;123&lt;/b&gt;&quot;\n<strong>Explanation:</strong> The two strings of words are substrings of s as following: &quot;<u>abc</u>xyz<u>123</u>&quot;.\nWe add &lt;b&gt; before each substring and &lt;/b&gt; after each substring.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabbb&quot;, words = [&quot;aa&quot;,&quot;b&quot;]\n<strong>Output:</strong> &quot;&lt;b&gt;aaabbb&lt;/b&gt;&quot;\n<strong>Explanation:</strong> \n&quot;aa&quot; appears as a substring two times: &quot;<u>aa</u>abbb&quot; and &quot;a<u>aa</u>bbb&quot;.\n&quot;b&quot; appears as a substring three times: &quot;aaa<u>b</u>bb&quot;, &quot;aaab<u>b</u>b&quot;, and &quot;aaabb<u>b</u>&quot;.\nWe add &lt;b&gt; before each substring and &lt;/b&gt; after each substring: &quot;&lt;b&gt;a&lt;b&gt;a&lt;/b&gt;a&lt;/b&gt;&lt;b&gt;b&lt;/b&gt;&lt;b&gt;b&lt;/b&gt;&lt;b&gt;b&lt;/b&gt;&quot;.\nSince the first two &lt;b&gt;&#39;s overlap, we merge them: &quot;&lt;b&gt;aaa&lt;/b&gt;&lt;b&gt;b&lt;/b&gt;&lt;b&gt;b&lt;/b&gt;&lt;b&gt;b&lt;/b&gt;&quot;.\nSince now the four &lt;b&gt;&#39;s are consecutive, we merge them: &quot;&lt;b&gt;aaabbb&lt;/b&gt;&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 1000</code></li>\n\t<li><code>s</code> and <code>words[i]</code> consist of English letters and digits.</li>\n\t<li>All the values of <code>words</code> are <strong>unique</strong>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as <a href=\"https://leetcode.com/problems/bold-words-in-string/description/\" target=\"_blank\">758. Bold Words in String</a>.</p>\n", "hints": [], "exampleTestcases": "\"abcxyz123\"\n[\"abc\",\"123\"]\n\"aaabbb\"\n[\"aa\",\"b\"]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string addBoldTag(string s, vector<string>& words) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String addBoldTag(String s, String[] words) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def addBoldTag(self, s, words):\n        \"\"\"\n        :type s: str\n        :type words: List[str]\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def addBoldTag(self, s: str, words: List[str]) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* addBoldTag(char* s, char** words, int wordsSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string AddBoldTag(string s, string[] words) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} s\n * @param {string[]} words\n * @return {string}\n */\nvar addBoldTag = function(s, words) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function addBoldTag(s: string, words: string[]): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String[] $words\n     * @return String\n     */\n    function addBoldTag($s, $words) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func addBoldTag(_ s: String, _ words: [String]) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun addBoldTag(s: String, words: Array<String>): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String addBoldTag(String s, List<String> words) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func addBoldTag(s string, words []string) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} s\n# @param {String[]} words\n# @return {String}\ndef add_bold_tag(s, words)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def addBoldTag(s: String, words: Array[String]): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn add_bold_tag(s: String, words: Vec<String>) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (add-bold-tag s words)\n  (-> string? (listof string?) string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec add_bold_tag(S :: unicode:unicode_binary(), Words :: [unicode:unicode_binary()]) -> unicode:unicode_binary().\nadd_bold_tag(S, Words) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec add_bold_tag(s :: String.t, words :: [String.t]) :: String.t\n  def add_bold_tag(s, words) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "merge-intervals", "title": "Merge Intervals", "isPaidOnly": false}, {"difficulty": "Hard", "titleSlug": "tag-validator", "title": "Tag Validator", "isPaidOnly": false}]}