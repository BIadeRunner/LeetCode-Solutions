{"question_id": "280", "problem_slug": "wiggle-sort", "problem_title": "Wiggle Sort", "content": "Given an integer array nums, reorder it such that nums[0] <= nums[1] >= nums[2] <= nums[3]....\nYou may assume the input array always has a valid answer.\n \nExample 1:\n\nInput: nums = [3,5,2,1,6,4]\nOutput: [3,5,1,6,2,4]\nExplanation: [1,6,2,5,3,4] is also accepted.\n\nExample 2:\n\nInput: nums = [6,6,5,6,3,8]\nOutput: [6,6,5,6,3,8]\n\n \nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i] <= 104\nIt is guaranteed that there will be an answer for the given input nums.\n\n \nFollow up: Could you solve the problem in O(n) time complexity?\n", "hints": [], "exampleTestcases": "[3,5,2,1,6,4]\n[6,6,5,6,3,8]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    void wiggleSort(vector<int>& nums) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public void wiggleSort(int[] nums) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def wiggleSort(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def wiggleSort(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        "}, "C": {"langSlug": "c", "code": "void wiggleSort(int* nums, int numsSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public void WiggleSort(int[] nums) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar wiggleSort = function(nums) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "/**\n Do not return anything, modify nums in-place instead.\n */\nfunction wiggleSort(nums: number[]): void {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function wiggleSort(&$nums) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func wiggleSort(_ nums: inout [Int]) {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun wiggleSort(nums: IntArray): Unit {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  void wiggleSort(List<int> nums) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func wiggleSort(nums []int)  {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Void} Do not return anything, modify nums in-place instead.\ndef wiggle_sort(nums)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def wiggleSort(nums: Array[Int]): Unit = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn wiggle_sort(nums: &mut Vec<i32>) {\n        \n    }\n}"}}}