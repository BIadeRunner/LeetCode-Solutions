{"question_id": "3371", "problem_slug": "harshad-number", "problem_title": "Harshad Number", "content": "An integer divisible by the sum of its digits is said to be a Harshad number. You are given an integer x. Return the sum of the digits of x if x is a Harshad number, otherwise, return -1.\n \nExample 1:\n\nInput: x = 18\nOutput: 9\nExplanation:\nThe sum of digits of x is 9. 18 is divisible by 9. So 18 is a Harshad number and the answer is 9.\n\nExample 2:\n\nInput: x = 23\nOutput: -1\nExplanation:\nThe sum of digits of x is 5. 23 is not divisible by 5. So 23 is not a Harshad number and the answer is -1.\n\n \nConstraints:\n\n1 <= x <= 100\n\n", "hints": ["Use a while loop and divide <code>x</code> by <code>10</code> to find the sum of the digits of <code>x</code>."], "exampleTestcases": "18\n23", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int sumOfTheDigitsOfHarshadNumber(int x) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int sumOfTheDigitsOfHarshadNumber(int x) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def sumOfTheDigitsOfHarshadNumber(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def sumOfTheDigitsOfHarshadNumber(self, x: int) -> int:\n        "}, "C": {"langSlug": "c", "code": "int sumOfTheDigitsOfHarshadNumber(int x) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int SumOfTheDigitsOfHarshadNumber(int x) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} x\n * @return {number}\n */\nvar sumOfTheDigitsOfHarshadNumber = function(x) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function sumOfTheDigitsOfHarshadNumber(x: number): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $x\n     * @return Integer\n     */\n    function sumOfTheDigitsOfHarshadNumber($x) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func sumOfTheDigitsOfHarshadNumber(_ x: Int) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun sumOfTheDigitsOfHarshadNumber(x: Int): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int sumOfTheDigitsOfHarshadNumber(int x) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func sumOfTheDigitsOfHarshadNumber(x int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} x\n# @return {Integer}\ndef sum_of_the_digits_of_harshad_number(x)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def sumOfTheDigitsOfHarshadNumber(x: Int): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn sum_of_the_digits_of_harshad_number(x: i32) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (sum-of-the-digits-of-harshad-number x)\n  (-> exact-integer? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec sum_of_the_digits_of_harshad_number(X :: integer()) -> integer().\nsum_of_the_digits_of_harshad_number(X) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec sum_of_the_digits_of_harshad_number(x :: integer) :: integer\n  def sum_of_the_digits_of_harshad_number(x) do\n    \n  end\nend"}}}