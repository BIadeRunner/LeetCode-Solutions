{"questionId": "3521", "acRate": 72.9264475743349, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "3215", "paidOnly": true, "status": "ac", "title": "Count Triplets with Even XOR Set Bits II", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Bit Manipulation", "id": "VG9waWNUYWdOb2RlOjE5", "slug": "bit-manipulation"}], "titleSlug": "count-triplets-with-even-xor-set-bits-ii", "content": "Given three integer arrays <code>a</code>, <code>b</code>, and <code>c</code>, return the number of triplets <code>(a[i], b[j], c[k])</code>, such that the bitwise <code>XOR</code> between the elements of each triplet has an <strong>even</strong> number of <span data-keyword=\"set-bit\">set bits</span>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">a = [1], b = [2], c = [3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The only triplet is <code>(a[0], b[0], c[0])</code> and their <code>XOR</code> is: <code>1 XOR 2 XOR 3 = 00<sub>2</sub></code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">a = [1,1], b = [2,3], c = [1,5]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Consider these four triplets:</p>\n\n<ul>\n\t<li><code>(a[0], b[1], c[0])</code>: <code>1 XOR 3 XOR 1 = 011<sub>2</sub></code></li>\n\t<li><code>(a[1], b[1], c[0])</code>: <code>1 XOR 3 XOR 1 = 011<sub>2</sub></code></li>\n\t<li><code>(a[0], b[0], c[1])</code>: <code>1 XOR 2 XOR 5 = 110<sub>2</sub></code></li>\n\t<li><code>(a[1], b[0], c[1])</code>: <code>1 XOR 2 XOR 5 = 110<sub>2</sub></code></li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a.length, b.length, c.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= a[i], b[i], c[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n", "hints": ["If <code>x</code> and <code>y</code> both have an even number of set bits, how many set bits do their XOR have?", "If exactly one of <code>x</code> and <code>y</code> has an even number of set bits, how many set bits do their XOR have?", "Conclude that if the XOR of three elements would have an even number of set bits, an even number of them (0 or 2) should have an odd number of set bits!", "For each array count the number of elements that have even set bits and also count the ones that have odd set bits."], "exampleTestcases": "[1]\n[2]\n[3]\n[1,1]\n[2,3]\n[1,5]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    long long tripletCount(vector<int>& a, vector<int>& b, vector<int>& c) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public long tripletCount(int[] a, int[] b, int[] c) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def tripletCount(self, a, b, c):\n        \"\"\"\n        :type a: List[int]\n        :type b: List[int]\n        :type c: List[int]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def tripletCount(self, a: List[int], b: List[int], c: List[int]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "long long tripletCount(int* a, int aSize, int* b, int bSize, int* c, int cSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public long TripletCount(int[] a, int[] b, int[] c) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} a\n * @param {number[]} b\n * @param {number[]} c\n * @return {number}\n */\nvar tripletCount = function(a, b, c) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function tripletCount(a: number[], b: number[], c: number[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $a\n     * @param Integer[] $b\n     * @param Integer[] $c\n     * @return Integer\n     */\n    function tripletCount($a, $b, $c) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func tripletCount(_ a: [Int], _ b: [Int], _ c: [Int]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun tripletCount(a: IntArray, b: IntArray, c: IntArray): Long {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int tripletCount(List<int> a, List<int> b, List<int> c) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func tripletCount(a []int, b []int, c []int) int64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} a\n# @param {Integer[]} b\n# @param {Integer[]} c\n# @return {Integer}\ndef triplet_count(a, b, c)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def tripletCount(a: Array[Int], b: Array[Int], c: Array[Int]): Long = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn triplet_count(a: Vec<i32>, b: Vec<i32>, c: Vec<i32>) -> i64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (triplet-count a b c)\n  (-> (listof exact-integer?) (listof exact-integer?) (listof exact-integer?) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec triplet_count(A :: [integer()], B :: [integer()], C :: [integer()]) -> integer().\ntriplet_count(A, B, C) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec triplet_count(a :: [integer], b :: [integer], c :: [integer]) :: integer\n  def triplet_count(a, b, c) do\n    \n  end\nend"}], "similarQuestionList": []}