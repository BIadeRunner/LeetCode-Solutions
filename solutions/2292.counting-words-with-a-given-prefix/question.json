{"question_id": "2292", "problem_slug": "counting-words-with-a-given-prefix", "problem_title": "Counting Words With a Given Prefix", "content": "You are given an array of strings words and a string pref.\nReturn the number of strings in words that contain pref as a prefix.\nA prefix of a string s is any leading contiguous substring of s.\n \nExample 1:\n\nInput: words = [\"pay\",\"attention\",\"practice\",\"attend\"], pref = \"at\"\nOutput: 2\nExplanation: The 2 strings that contain \"at\" as a prefix are: \"attention\" and \"attend\".\n\nExample 2:\n\nInput: words = [\"leetcode\",\"win\",\"loops\",\"success\"], pref = \"code\"\nOutput: 0\nExplanation: There are no strings that contain \"code\" as a prefix.\n\n \nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length, pref.length <= 100\nwords[i] and pref consist of lowercase English letters.\n\n", "hints": ["Go through each word in words and increment the answer if pref is a prefix of the word."], "exampleTestcases": "[\"pay\",\"attention\",\"practice\",\"attend\"]\n\"at\"\n[\"leetcode\",\"win\",\"loops\",\"success\"]\n\"code\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int prefixCount(vector<string>& words, string pref) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int prefixCount(String[] words, String pref) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def prefixCount(self, words, pref):\n        \"\"\"\n        :type words: List[str]\n        :type pref: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def prefixCount(self, words: List[str], pref: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int prefixCount(char** words, int wordsSize, char* pref) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int PrefixCount(string[] words, string pref) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string[]} words\n * @param {string} pref\n * @return {number}\n */\nvar prefixCount = function(words, pref) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function prefixCount(words: string[], pref: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String[] $words\n     * @param String $pref\n     * @return Integer\n     */\n    function prefixCount($words, $pref) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func prefixCount(_ words: [String], _ pref: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun prefixCount(words: Array<String>, pref: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int prefixCount(List<String> words, String pref) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func prefixCount(words []string, pref string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String[]} words\n# @param {String} pref\n# @return {Integer}\ndef prefix_count(words, pref)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def prefixCount(words: Array[String], pref: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn prefix_count(words: Vec<String>, pref: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (prefix-count words pref)\n  (-> (listof string?) string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec prefix_count(Words :: [unicode:unicode_binary()], Pref :: unicode:unicode_binary()) -> integer().\nprefix_count(Words, Pref) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec prefix_count(words :: [String.t], pref :: String.t) :: integer\n  def prefix_count(words, pref) do\n    \n  end\nend"}}}