{"question_id": "171", "problem_slug": "excel-sheet-column-number", "problem_title": "Excel Sheet Column Number", "content": "Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number.\nFor example:\n\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n...\n\n \nExample 1:\n\nInput: columnTitle = \"A\"\nOutput: 1\n\nExample 2:\n\nInput: columnTitle = \"AB\"\nOutput: 28\n\nExample 3:\n\nInput: columnTitle = \"ZY\"\nOutput: 701\n\n \nConstraints:\n\n1 <= columnTitle.length <= 7\ncolumnTitle consists only of uppercase English letters.\ncolumnTitle is in the range [\"A\", \"FXSHRXW\"].\n\n", "hints": [], "exampleTestcases": "\"A\"\n\"AB\"\n\"ZY\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int titleToNumber(string columnTitle) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int titleToNumber(String columnTitle) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def titleToNumber(self, columnTitle):\n        \"\"\"\n        :type columnTitle: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def titleToNumber(self, columnTitle: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int titleToNumber(char* columnTitle) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int TitleToNumber(string columnTitle) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} columnTitle\n * @return {number}\n */\nvar titleToNumber = function(columnTitle) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function titleToNumber(columnTitle: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $columnTitle\n     * @return Integer\n     */\n    function titleToNumber($columnTitle) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func titleToNumber(_ columnTitle: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun titleToNumber(columnTitle: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int titleToNumber(String columnTitle) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func titleToNumber(columnTitle string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} column_title\n# @return {Integer}\ndef title_to_number(column_title)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def titleToNumber(columnTitle: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn title_to_number(column_title: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (title-to-number columnTitle)\n  (-> string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec title_to_number(ColumnTitle :: unicode:unicode_binary()) -> integer().\ntitle_to_number(ColumnTitle) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec title_to_number(column_title :: String.t) :: integer\n  def title_to_number(column_title) do\n    \n  end\nend"}}}