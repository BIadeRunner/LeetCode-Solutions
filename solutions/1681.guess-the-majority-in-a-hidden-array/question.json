{"question_id": "1681", "problem_slug": "guess-the-majority-in-a-hidden-array", "problem_title": "Guess the Majority in a Hidden Array", "content": "We have an integer array nums, where all the integers in nums are 0 or 1. You will not be given direct access to the array, instead, you will have an API ArrayReader which have the following functions:\n\nint query(int a, int b, int c, int d): where 0 <= a < b < c < d < ArrayReader.length(). The function returns the distribution of the value of the 4 elements and returns:\n\n\t\n4 : if the values of the 4 elements are the same (0 or 1).\n2 : if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n\n\nint length(): Returns the size of the array.\n\nYou are allowed to call query() 2 * n times at most where n is equal to ArrayReader.length().\nReturn any index of the most frequent value in nums, in case of tie, return -1.\n \nExample 1:\n\nInput: nums = [0,0,1,0,1,1,1,1]\nOutput: 5\nExplanation: The following calls to the API\nreader.length() // returns 8 because there are 8 elements in the hidden array.\nreader.query(0,1,2,3) // returns 2 this is a query that compares the elements nums[0], nums[1], nums[2], nums[3]\n// Three elements have a value equal to 0 and one element has value equal to 1 or viceversa.\nreader.query(4,5,6,7) // returns 4 because nums[4], nums[5], nums[6], nums[7] have the same value.\nwe can infer that the most frequent value is found in the last 4 elements.\nIndex 2, 4, 6, 7 is also a correct answer.\n\nExample 2:\n\nInput: nums = [0,0,1,1,0]\nOutput: 0\n\nExample 3:\n\nInput: nums = [1,0,1,0,1,0,1,0]\nOutput: -1\n\n \nConstraints:\n\n5 <= nums.length <= 105\n0 <= nums[i] <= 1\n\n \nFollow up: What is the minimum number of calls needed to find the majority element?\n", "hints": ["If you find that 2 indexes in the array (id1, id2) have the same value (nums [id1] == nums [id2]), you could infer the values of (x, y) based on the results of query (id1, id2, x, y)."], "exampleTestcases": "[0,0,1,0,1,1,1,1]\n[0,0,1,1,0]\n[1,0,1,0,1,0,1,0]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * class ArrayReader {\n *   public:\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     int query(int a, int b, int c, int d);\n *\n *     // Returns the length of the array\n *     int length();\n * };\n */\n\nclass Solution {\npublic:\n    int guessMajority(ArrayReader &reader) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *   public:\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     public int query(int a, int b, int c, int d);\n *\n *     // Returns the length of the array\n *     public int length();\n * };\n */\n\nclass Solution {\n    public int guessMajority(ArrayReader reader) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "# \"\"\"\n# This is the ArrayReader's API interface.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class ArrayReader(object):\n#\t # Compares 4 different elements in the array\n#\t # return 4 if the values of the 4 elements are the same (0 or 1).\n#\t # return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n#\t # return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n#    def query(self, a, b, c, d):\n#        \"\"\"\n#        :type a, b, c, d: int\n#        :rtype int\n#        \"\"\"\n#\n#\t # Returns the length of the array\n#    def length(self):\n#        \"\"\"\n#        :rtype int\n#     \n\nclass Solution(object):\n    def guessMajority(self, reader):\n        \"\"\"\n        :type reader: ArrayReader\n        :rtype: integer\n        \"\"\""}, "Python3": {"langSlug": "python3", "code": "# \"\"\"\n# This is the ArrayReader's API interface.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class ArrayReader(object):\n#\t # Compares 4 different elements in the array\n#\t # return 4 if the values of the 4 elements are the same (0 or 1).\n#\t # return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n#\t # return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n#    def query(self, a: int, b: int, c: int, d: int) -> int:\n#\n#\t # Returns the length of the array\n#    def length(self) -> int:\n#\n\nclass Solution:\n    def guessMajority(self, reader: 'ArrayReader') -> int:"}, "C": {"langSlug": "c", "code": "/**\n * *********************************************************************\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * *********************************************************************\n *\n * // Compares 4 different elements in the array\n * // return 4 if the values of the 4 elements are the same (0 or 1).\n * // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n * // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n * int query(ArrayReader *, int a, int b, int c, int d);\n *\n * // Returns the length of the array\n * int length(ArrayReader *);\n */\n\nint guessMajority(ArrayReader* reader) {\n\t\n}"}, "C#": {"langSlug": "csharp", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * class ArrayReader {\n *   public:\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     public int Query(int a, int b, int c, int d) {}\n *\n *     // Returns the length of the array\n *     public int Length() {}\n * };\n */\n\nclass Solution {\n    public int GuessMajority(ArrayReader reader) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * function ArrayReader() {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     @param {number} a, b, c, d\n *     @return {number}\n *     this.query = function(a, b, c, d) {\n *         ...\n *     }; \n *\n *     // Returns the length of the array\n *     @return {number}\n *     this.length = function() {\n *         ...\n *     };\n * };\n */\n\n/**\n * @param {ArrayReader} reader\n * @return {number}\n */\nvar guessMajority = function(reader) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * class ArrayReader {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     query(a: number, b: number, c: number, d: number): number { };\n *\n *     // Returns the length of the array\n *     length(): number { };\n * };\n */\n\nfunction guessMajority(reader: ArrayReader): number {\n\n};"}, "PHP": {"langSlug": "php", "code": "/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     function query($a, $b, $c, $d) {}\n *\n *     // Returns the length of the array\n *     function length() {}\n * }\n */\n\nclass Solution {\n    /**\n     * @param ArrayReader $reader\n     * @return Integer\n     */\n    function guessMajority($reader) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     public func query(_ a: Int, _ b: Int, _ c: Int, _ d: Int) -> Int {}\n *\n *     // Returns the length of the array\n *     public func length() -> Int {}\n * }\n */\n\nclass Solution {\n    func guessMajority(_ reader: ArrayReader) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     fun query(a: Int, b: Int, c: Int, d: Int): Int {}\n *\n *     // Returns the length of the array\n *     fun length(): Int {}\n * }\n */\n\nclass Solution {\n    fun guessMajority(reader: ArrayReader): Int {\n        \n    }\n}"}, "Go": {"langSlug": "golang", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * type ArrayReader struct {\n * }\n * // Compares 4 different elements in the array\n * // return 4 if the values of the 4 elements are the same (0 or 1).\n * // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n * // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n * func (this *ArrayReader) query(a, b, c, d int) int {}\n * \n * // Returns the length of the array\n * func (this *ArrayReader) length() int {}\n */\n\nfunc guessMajority(reader *ArrayReader) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# This is ArrayReader's API interface.\n# You should not implement it, or speculate about its implementation\n# class ArrayReader\n#\t # Compares 4 different elements in the array\n#\t # return 4 if the values of the 4 elements are the same (0 or 1).\n#\t # return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n#\t # return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n#    def query(a, b, c, d):\n#       \n#    end\n#\n#\t # Returns the length of the array\n#    def length()\n#\t\t\n#\t end\n# end\n\n# @param {ArrayReader} reader\n# @return {int}\ndef guess_majority(reader)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     def query(a: Int, b: Int, c: Int, d: Int): Int {}\n *\n *     // Returns the length of the array\n *     def length(): Int {}\n * }\n */\n\nobject Solution {\n    def guessMajority(reader: ArrayReader): Int = {\n        \n\t}\n}"}, "Rust": {"langSlug": "rust", "code": "/**\n * // This is the ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * struct ArrayReader;\n * impl ArrayReader {\n *     // Compares 4 different elements in the array\n *     // return 4 if the values of the 4 elements are the same (0 or 1).\n *     // return 2 if three elements have a value equal to 0 and one element has value equal to 1 or vice versa.\n *     // return 0 : if two element have a value equal to 0 and two elements have a value equal to 1.\n *     pub fn query(a: i32, b: i32, c: i32, d: i32) -> i32 {}\n *\n *     // Returns the length of the array\n *     pub fn length() -> i32 {}\n * };\n */\n\nimpl Solution {\n    pub fn get_majority(reader: &ArrayReader) -> i32 {\n        \n    }\n}"}}}