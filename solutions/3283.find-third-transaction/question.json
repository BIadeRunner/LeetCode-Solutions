{"questionId": "3283", "acRate": 52.36600676001931, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "2986", "paidOnly": true, "status": "ac", "title": "Find Third Transaction", "topicTags": [{"name": "Database", "id": "VG9waWNUYWdOb2RlOjYxMDQz", "slug": "database"}], "titleSlug": "find-third-transaction", "content": "<p>Table: <code>Transactions</code></p>\n\n<pre>\n+------------------+----------+\n| Column Name      | Type     |\n+------------------+----------+\n| user_id          | int      |\n| spend            | decimal  |\n| transaction_date | datetime |\n+------------------+----------+\n(user_id, transaction_date) is column of unique values for this table.\nThis table contains user_id, spend, and transaction_date.\n</pre>\n\n<p>Write a solution to find the <strong>third transaction </strong>(if they have at least three transactions) of every user, where the <strong>spending</strong> on the preceding <strong>two transactions</strong> is <strong>lower</strong> than the spending on the <strong>third</strong> transaction.</p>\n\n<p>Return <em>the result table by </em><code>user_id</code><em> in <strong>ascending</strong> order</em><em>.</em></p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nTransactions table:\n+---------+--------+---------------------+\n| user_id | spend  | transaction_date    | \n+---------+--------+---------------------+\n| 1       | 65.56  | 2023-11-18 13:49:42 | \n| 1       | 96.0   | 2023-11-30 02:47:26 |     \n| 1       | 7.44   | 2023-11-02 12:15:23 | \n| 1       | 49.78  | 2023-11-12 00:13:46 | \n| 2       | 40.89  | 2023-11-21 04:39:15 |  \n| 2       | 100.44 | 2023-11-20 07:39:34 | \n| 3       | 37.33  | 2023-11-03 06:22:02 | \n| 3       | 13.89  | 2023-11-11 16:00:14 | \n| 3       | 7.0    | 2023-11-29 22:32:36 | \n+---------+--------+---------------------+\n<strong>Output</strong>\n+---------+-------------------------+------------------------+\n| user_id | third_transaction_spend | third_transaction_date | \n+---------+-------------------------+------------------------+\n| 1       | 65.56                   | 2023-11-18 13:49:42    |  \n+---------+-------------------------+------------------------+\n<strong>Explanation</strong>\n- For user_id 1, their third transaction occurred on 2023-11-18 at 13:49:42 with an amount of $65.56, surpassing the expenditures of the previous two transactions which were $7.44 on 2023-11-02 at 12:15:23 and $49.78 on 2023-11-12 at 00:13:46. Thus, this third transaction will be included in the output table.\n- user_id 2 only has a total of 2 transactions, so there isn&#39;t a third transaction to consider.\n- For user_id 3, the amount of $7.0 for their third transaction is less than that of the preceding two transactions, so it won&#39;t be included.\nOutput table is ordered by user_id in ascending order.\n\n</pre>\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Transactions\":[\"user_id\",\"spend\",\"transaction_date\"]},\"rows\":{\"Transactions\":[[1,65.56,\"2023-11-18 13:49:42\"],[1,96.0,\"2023-11-30 02:47:26\"],[1,7.44,\"2023-11-02 12:15:23\"],[1,49.78,\"2023-11-12 00:13:46\"],[2,40.89,\"2023-11-21 04:39:15\"],[2,100.44,\"2023-11-20 07:39:34\"],[3,37.33,\"2023-11-03 06:22:02\"],[3,13.89,\"2023-11-11 16:00:14\"],[3,7.0,\"2023-11-29 22:32:36\"]]}}", "codeSnippets": [{"lang": "MySQL", "langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, {"lang": "MS SQL Server", "langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, {"lang": "Oracle", "langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, {"lang": "Pandas", "langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_third_transaction(transactions: pd.DataFrame) -> pd.DataFrame:\n    "}, {"lang": "PostgreSQL", "langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}], "similarQuestionList": []}