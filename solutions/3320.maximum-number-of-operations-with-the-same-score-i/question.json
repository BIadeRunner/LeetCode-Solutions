{"question_id": "3320", "problem_slug": "maximum-number-of-operations-with-the-same-score-i", "problem_title": "Maximum Number of Operations With the Same Score I", "content": "You are given an array of integers nums. Consider the following operation:\n\nDelete the first two elements nums and define the score of the operation as the sum of these two elements.\n\nYou can perform this operation until nums contains fewer than two elements. Additionally, the same score must be achieved in all operations.\nReturn the maximum number of operations you can perform.\n \nExample 1:\n\nInput: nums = [3,2,1,4,5]\nOutput: 2\nExplanation:\n\nWe can perform the first operation with the score 3 + 2 = 5. After this operation, nums = [1,4,5].\nWe can perform the second operation as its score is 4 + 1 = 5, the same as the previous operation. After this operation, nums = [5].\nAs there are fewer than two elements, we can't perform more operations.\n\n\nExample 2:\n\nInput: nums = [1,5,3,3,4,1,3,2,2,3]\nOutput: 2\nExplanation:\n\nWe can perform the first operation with the score 1 + 5 = 6. After this operation, nums = [3,3,4,1,3,2,2,3].\nWe can perform the second operation as its score is 3 + 3 = 6, the same as the previous operation. After this operation, nums = [4,1,3,2,2,3].\nWe cannot perform the next operation as its score is 4 + 1 = 5, which is different from the previous scores.\n\n\nExample 3:\n\nInput: nums = [5,3]\nOutput: 1\n\n \nConstraints:\n\n2 <= nums.length <= 100\n1 <= nums[i] <= 1000\n\n", "hints": [], "exampleTestcases": "[3,2,1,4,5]\n[1,5,3,3,4,1,3,2,2,3]\n[5,3]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int maxOperations(vector<int>& nums) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int maxOperations(int[] nums) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def maxOperations(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def maxOperations(self, nums: List[int]) -> int:\n        "}, "C": {"langSlug": "c", "code": "int maxOperations(int* nums, int numsSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int MaxOperations(int[] nums) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxOperations = function(nums) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function maxOperations(nums: number[]): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxOperations($nums) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func maxOperations(_ nums: [Int]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun maxOperations(nums: IntArray): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int maxOperations(List<int> nums) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func maxOperations(nums []int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef max_operations(nums)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def maxOperations(nums: Array[Int]): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn max_operations(nums: Vec<i32>) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (max-operations nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec max_operations(Nums :: [integer()]) -> integer().\nmax_operations(Nums) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_operations(nums :: [integer]) :: integer\n  def max_operations(nums) do\n    \n  end\nend"}}}