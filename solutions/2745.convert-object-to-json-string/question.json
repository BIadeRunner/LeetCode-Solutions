{"question_id": "2745", "problem_slug": "convert-object-to-json-string", "problem_title": "Convert Object to JSON String", "content": "Given a value, return a valid JSON string of that value. The value can be a string, number, array, object, boolean, or null. The returned string should not include extra spaces. The order of keys should be the same as the order returned by Object.keys().\nPlease solve it without using the built-in JSON.stringify method.\n \nExample 1:\n\nInput: object = {\"y\":1,\"x\":2}\nOutput: {\"y\":1,\"x\":2}\nExplanation: \nReturn the JSON representation.\nNote that the order of keys should be the same as the order returned by Object.keys().\nExample 2:\n\nInput: object = {\"a\":\"str\",\"b\":-12,\"c\":true,\"d\":null}\nOutput: {\"a\":\"str\",\"b\":-12,\"c\":true,\"d\":null}\nExplanation:\nThe primitives of JSON are strings, numbers, booleans, and null.\n\nExample 3:\n\nInput: object = {\"key\":{\"a\":1,\"b\":[{},null,\"Hello\"]}}\nOutput: {\"key\":{\"a\":1,\"b\":[{},null,\"Hello\"]}}\nExplanation:\nObjects and arrays can include other objects and arrays.\n\nExample 4:\n\nInput: object = true\nOutput: true\nExplanation:\nPrimitive types are valid inputs.\n \nConstraints:\n\nvalue is a valid JSON value\n1 <= JSON.stringify(object).length <= 105\nmaxNestingLevel <= 1000\nall strings contain only alphanumeric characters\n\n", "hints": ["Consider the 4 possibilities. The object could be an array, an object, a string, or another type.", "Think about the problem recursively. If you know how to convert any sub-data into a string, how could you use it to convert the entire data into a string?", "If the data is a string, it's just the value surrounded by double quotes. If the data is another type, its just String(data). If the data is an array, it's the recursively stringified value of each item separated by commas. If the data is an object, it's a series of key-value pairs where each value is the recursively stringified value."], "exampleTestcases": "{\"y\":1,\"x\":2}\n{\"a\":\"str\",\"b\":-12,\"c\":true,\"d\":null}\n{\"key\":{\"a\":1,\"b\":[{},null,\"Hello\"]}}\ntrue", "codeSnippets": {"JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {null|boolean|number|string|Array|Object} object\n * @return {string}\n */\nvar jsonStringify = function(object) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\n\nfunction jsonStringify(object: JSONValue): string {\n    \n};"}}}