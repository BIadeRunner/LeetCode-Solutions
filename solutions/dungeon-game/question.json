{"questionId": "174", "acRate": 38.597899048860945, "difficulty": "Hard", "freqBar": 55.766633105547605, "frontendQuestionId": "174", "paidOnly": false, "status": "ac", "title": "Dungeon Game", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Dynamic Programming", "id": "VG9waWNUYWdOb2RlOjEz", "slug": "dynamic-programming"}, {"name": "Matrix", "id": "VG9waWNUYWdOb2RlOjYxMDUz", "slug": "matrix"}], "titleSlug": "dungeon-game", "content": "<p>The demons had captured the princess and imprisoned her in <strong>the bottom-right corner</strong> of a <code>dungeon</code>. The <code>dungeon</code> consists of <code>m x n</code> rooms laid out in a 2D grid. Our valiant knight was initially positioned in <strong>the top-left room</strong> and must fight his way through <code>dungeon</code> to rescue the princess.</p>\n\n<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to <code>0</code> or below, he dies immediately.</p>\n\n<p>Some of the rooms are guarded by demons (represented by negative integers), so the knight loses health upon entering these rooms; other rooms are either empty (represented as 0) or contain magic orbs that increase the knight&#39;s health (represented by positive integers).</p>\n\n<p>To reach the princess as quickly as possible, the knight decides to move only <strong>rightward</strong> or <strong>downward</strong> in each step.</p>\n\n<p>Return <em>the knight&#39;s minimum initial health so that he can rescue the princess</em>.</p>\n\n<p><strong>Note</strong> that any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/13/dungeon-grid-1.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> dungeon = [[-2,-3,3],[-5,-10,1],[10,30,-5]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The initial health of the knight must be at least 7 if he follows the optimal path: RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> dungeon = [[0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == dungeon.length</code></li>\n\t<li><code>n == dungeon[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>-1000 &lt;= dungeon[i][j] &lt;= 1000</code></li>\n</ul>\n", "hints": [], "exampleTestcases": "[[-2,-3,3],[-5,-10,1],[10,30,-5]]\n[[0]]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int calculateMinimumHP(vector<vector<int>>& dungeon) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int calculateMinimumHP(int[][] dungeon) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def calculateMinimumHP(self, dungeon):\n        \"\"\"\n        :type dungeon: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def calculateMinimumHP(self, dungeon: List[List[int]]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int calculateMinimumHP(int** dungeon, int dungeonSize, int* dungeonColSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int CalculateMinimumHP(int[][] dungeon) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} dungeon\n * @return {number}\n */\nvar calculateMinimumHP = function(dungeon) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function calculateMinimumHP(dungeon: number[][]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $dungeon\n     * @return Integer\n     */\n    function calculateMinimumHP($dungeon) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func calculateMinimumHP(_ dungeon: [[Int]]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun calculateMinimumHP(dungeon: Array<IntArray>): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int calculateMinimumHP(List<List<int>> dungeon) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func calculateMinimumHP(dungeon [][]int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} dungeon\n# @return {Integer}\ndef calculate_minimum_hp(dungeon)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def calculateMinimumHP(dungeon: Array[Array[Int]]): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn calculate_minimum_hp(dungeon: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (calculate-minimum-hp dungeon)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec calculate_minimum_hp(Dungeon :: [[integer()]]) -> integer().\ncalculate_minimum_hp(Dungeon) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec calculate_minimum_hp(dungeon :: [[integer]]) :: integer\n  def calculate_minimum_hp(dungeon) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "unique-paths", "title": "Unique Paths", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "minimum-path-sum", "title": "Minimum Path Sum", "isPaidOnly": false}, {"difficulty": "Hard", "titleSlug": "cherry-pickup", "title": "Cherry Pickup", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "minimum-path-cost-in-a-grid", "title": "Minimum Path Cost in a Grid", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "minimum-health-to-beat-game", "title": "Minimum Health to Beat Game", "isPaidOnly": true}, {"difficulty": "Hard", "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k", "title": "Paths in Matrix Whose Sum Is Divisible by K", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s", "title": "Check if There is a Path With Equal Number of 0's And 1's", "isPaidOnly": true}]}