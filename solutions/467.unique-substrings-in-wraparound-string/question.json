{"question_id": "467", "problem_slug": "unique-substrings-in-wraparound-string", "problem_title": "Unique Substrings in Wraparound String", "content": "We define the string base to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so base will look like this:\n\n\"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\n\nGiven a string s, return the number of unique non-empty substrings of s are present in base.\n \nExample 1:\n\nInput: s = \"a\"\nOutput: 1\nExplanation: Only the substring \"a\" of s is in base.\n\nExample 2:\n\nInput: s = \"cac\"\nOutput: 2\nExplanation: There are two substrings (\"a\", \"c\") of s in base.\n\nExample 3:\n\nInput: s = \"zab\"\nOutput: 6\nExplanation: There are six substrings (\"z\", \"a\", \"b\", \"za\", \"ab\", and \"zab\") of s in base.\n\n \nConstraints:\n\n1 <= s.length <= 105\ns consists of lowercase English letters.\n\n", "hints": ["One possible solution might be to consider allocating an array size of 26 for each character in the alphabet. (Credits to @r2ysxu)"], "exampleTestcases": "\"a\"\n\"cac\"\n\"zab\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int findSubstringInWraproundString(string s) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int findSubstringInWraproundString(String s) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def findSubstringInWraproundString(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def findSubstringInWraproundString(self, s: str) -> int:\n        "}, "C": {"langSlug": "c", "code": "int findSubstringInWraproundString(char* s) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int FindSubstringInWraproundString(string s) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar findSubstringInWraproundString = function(s) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function findSubstringInWraproundString(s: string): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function findSubstringInWraproundString($s) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func findSubstringInWraproundString(_ s: String) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun findSubstringInWraproundString(s: String): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int findSubstringInWraproundString(String s) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func findSubstringInWraproundString(s string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} s\n# @return {Integer}\ndef find_substring_in_wrapround_string(s)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def findSubstringInWraproundString(s: String): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn find_substring_in_wrapround_string(s: String) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (find-substring-in-wrapround-string s)\n  (-> string? exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec find_substring_in_wrapround_string(S :: unicode:unicode_binary()) -> integer().\nfind_substring_in_wrapround_string(S) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec find_substring_in_wrapround_string(s :: String.t) :: integer\n  def find_substring_in_wrapround_string(s) do\n    \n  end\nend"}}}