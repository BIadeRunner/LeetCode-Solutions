{"questionId": "3518", "acRate": 41.403867066281194, "difficulty": "Medium", "freqBar": 38.87789228722026, "frontendQuestionId": "3290", "paidOnly": false, "status": "ac", "title": "Maximum Multiplication Score", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Dynamic Programming", "id": "VG9waWNUYWdOb2RlOjEz", "slug": "dynamic-programming"}], "titleSlug": "maximum-multiplication-score", "content": "<p>You are given an integer array <code>a</code> of size 4 and another integer array <code>b</code> of size <strong>at least</strong> 4.</p>\n\n<p>You need to choose 4 indices <code>i<sub>0</sub></code>, <code>i<sub>1</sub></code>, <code>i<sub>2</sub></code>, and <code>i<sub>3</sub></code> from the array <code>b</code> such that <code>i<sub>0</sub> &lt; i<sub>1</sub> &lt; i<sub>2</sub> &lt; i<sub>3</sub></code>. Your score will be equal to the value <code>a[0] * b[i<sub>0</sub>] + a[1] * b[i<sub>1</sub>] + a[2] * b[i<sub>2</sub>] + a[3] * b[i<sub>3</sub>]</code>.</p>\n\n<p>Return the <strong>maximum</strong> score you can achieve.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">a = [3,2,5,6], b = [2,-6,4,-5,-3,2,-7]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">26</span></p>\n\n<p><strong>Explanation:</strong><br />\nWe can choose the indices 0, 1, 2, and 5. The score will be <code>3 * 2 + 2 * (-6) + 5 * 4 + 6 * 2 = 26</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">a = [-1,4,5,-2], b = [-5,-1,-3,-2,-4]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">-1</span></p>\n\n<p><strong>Explanation:</strong><br />\nWe can choose the indices 0, 1, 3, and 4. The score will be <code>(-1) * (-5) + 4 * (-1) + 5 * (-2) + (-2) * (-4) = -1</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>a.length == 4</code></li>\n\t<li><code>4 &lt;= b.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= a[i], b[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n", "hints": ["Try using dynamic programming.", "Consider a dp with the following states: The current position in the array b, and the number of indices considered."], "exampleTestcases": "[3,2,5,6]\n[2,-6,4,-5,-3,2,-7]\n[-1,4,5,-2]\n[-5,-1,-3,-2,-4]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    long long maxScore(vector<int>& a, vector<int>& b) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public long maxScore(int[] a, int[] b) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def maxScore(self, a, b):\n        \"\"\"\n        :type a: List[int]\n        :type b: List[int]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def maxScore(self, a: List[int], b: List[int]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "long long maxScore(int* a, int aSize, int* b, int bSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public long MaxScore(int[] a, int[] b) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} a\n * @param {number[]} b\n * @return {number}\n */\nvar maxScore = function(a, b) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function maxScore(a: number[], b: number[]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $a\n     * @param Integer[] $b\n     * @return Integer\n     */\n    function maxScore($a, $b) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func maxScore(_ a: [Int], _ b: [Int]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun maxScore(a: IntArray, b: IntArray): Long {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int maxScore(List<int> a, List<int> b) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func maxScore(a []int, b []int) int64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} a\n# @param {Integer[]} b\n# @return {Integer}\ndef max_score(a, b)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def maxScore(a: Array[Int], b: Array[Int]): Long = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn max_score(a: Vec<i32>, b: Vec<i32>) -> i64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (max-score a b)\n  (-> (listof exact-integer?) (listof exact-integer?) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec max_score(A :: [integer()], B :: [integer()]) -> integer().\nmax_score(A, B) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_score(a :: [integer], b :: [integer]) :: integer\n  def max_score(a, b) do\n    \n  end\nend"}], "similarQuestionList": []}