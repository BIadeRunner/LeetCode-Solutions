{"question_id": "2185", "problem_slug": "accepted-candidates-from-the-interviews", "problem_title": "Accepted Candidates From the Interviews", "content": "Table: Candidates\n\n+--------------+----------+\n| Column Name  | Type     |\n+--------------+----------+\n| candidate_id | int      |\n| name         | varchar  |\n| years_of_exp | int      |\n| interview_id | int      |\n+--------------+----------+\ncandidate_id is the primary key (column with unique values) for this table.\nEach row of this table indicates the name of a candidate, their number of years of experience, and their interview ID.\n\n \nTable: Rounds\n\n+--------------+------+\n| Column Name  | Type |\n+--------------+------+\n| interview_id | int  |\n| round_id     | int  |\n| score        | int  |\n+--------------+------+\n(interview_id, round_id) is the primary key (combination of columns with unique values) for this table.\nEach row of this table indicates the score of one round of an interview.\n\n \nWrite a solution to report the IDs of the candidates who have at least two years of experience and the sum of the score of their interview rounds is strictly greater than 15.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nCandidates table:\n+--------------+---------+--------------+--------------+\n| candidate_id | name    | years_of_exp | interview_id |\n+--------------+---------+--------------+--------------+\n| 11           | Atticus | 1            | 101          |\n| 9            | Ruben   | 6            | 104          |\n| 6            | Aliza   | 10           | 109          |\n| 8            | Alfredo | 0            | 107          |\n+--------------+---------+--------------+--------------+\nRounds table:\n+--------------+----------+-------+\n| interview_id | round_id | score |\n+--------------+----------+-------+\n| 109          | 3        | 4     |\n| 101          | 2        | 8     |\n| 109          | 4        | 1     |\n| 107          | 1        | 3     |\n| 104          | 3        | 6     |\n| 109          | 1        | 4     |\n| 104          | 4        | 7     |\n| 104          | 1        | 2     |\n| 109          | 2        | 1     |\n| 104          | 2        | 7     |\n| 107          | 2        | 3     |\n| 101          | 1        | 8     |\n+--------------+----------+-------+\nOutput: \n+--------------+\n| candidate_id |\n+--------------+\n| 9            |\n+--------------+\nExplanation: \n- Candidate 11: The total score is 16, and they have one year of experience. We do not include them in the result table because of their years of experience.\n- Candidate 9: The total score is 22, and they have six years of experience. We include them in the result table.\n- Candidate 6: The total score is 10, and they have ten years of experience. We do not include them in the result table because the score is not good enough.\n- Candidate 8: The total score is 6, and they have zero years of experience. We do not include them in the result table because of their years of experience and the score.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Candidates\":[\"candidate_id\",\"name\",\"years_of_exp\",\"interview_id\"],\"Rounds\":[\"interview_id\",\"round_id\",\"score\"]},\"rows\":{\"Candidates\":[[11,\"Atticus\",1,101],[9,\"Ruben\",6,104],[6,\"Aliza\",10,109],[8,\"Alfredo\",0,107]],\"Rounds\":[[109,3,4],[101,2,8],[109,4,1],[107,1,3],[104,3,6],[109,1,4],[104,4,7],[104,1,2],[109,2,1],[104,2,7],[107,2,3],[101,1,8]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef accepted_candidates(candidates: pd.DataFrame, rounds: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}