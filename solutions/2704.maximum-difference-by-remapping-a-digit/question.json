{"question_id": "2704", "problem_slug": "maximum-difference-by-remapping-a-digit", "problem_title": "Maximum Difference by Remapping a Digit", "content": "You are given an integer num. You know that Bob will sneakily remap one of the 10 possible digits (0 to 9) to another digit.\nReturn the difference between the maximum and minimum values Bob can make by remapping exactly one digit in num.\nNotes:\n\nWhen Bob remaps a digit d1 to another digit d2, Bob replaces all occurrences of d1 in num with d2.\nBob can remap a digit to itself, in which case num does not change.\nBob can remap different digits for obtaining minimum and maximum values respectively.\nThe resulting number after remapping can contain leading zeroes.\n\n \nExample 1:\n\nInput: num = 11891\nOutput: 99009\nExplanation: \nTo achieve the maximum value, Bob can remap the digit 1 to the digit 9 to yield 99899.\nTo achieve the minimum value, Bob can remap the digit 1 to the digit 0, yielding 890.\nThe difference between these two numbers is 99009.\n\nExample 2:\n\nInput: num = 90\nOutput: 99\nExplanation:\nThe maximum value that can be returned by the function is 99 (if 0 is replaced by 9) and the minimum value that can be returned by the function is 0 (if 9 is replaced by 0).\nThus, we return 99.\n \nConstraints:\n\n1 <= num <= 108\n\n", "hints": ["Try to remap the first non-nine digit to 9 to obtain the maximum number.", "Try to remap the first non-zero digit to 0 to obtain the minimum number."], "exampleTestcases": "11891\n90", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int minMaxDifference(int num) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int minMaxDifference(int num) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def minMaxDifference(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def minMaxDifference(self, num: int) -> int:\n        "}, "C": {"langSlug": "c", "code": "int minMaxDifference(int num){\n\n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int MinMaxDifference(int num) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {number} num\n * @return {number}\n */\nvar minMaxDifference = function(num) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function minMaxDifference(num: number): number {\n\n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $num\n     * @return Integer\n     */\n    function minMaxDifference($num) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func minMaxDifference(_ num: Int) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun minMaxDifference(num: Int): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int minMaxDifference(int num) {\n\n  }\n}"}, "Go": {"langSlug": "golang", "code": "func minMaxDifference(num int) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {Integer} num\n# @return {Integer}\ndef min_max_difference(num)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def minMaxDifference(num: Int): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn min_max_difference(num: i32) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (min-max-difference num)\n  (-> exact-integer? exact-integer?)\n\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec min_max_difference(Num :: integer()) -> integer().\nmin_max_difference(Num) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec min_max_difference(num :: integer) :: integer\n  def min_max_difference(num) do\n    \n  end\nend"}}}