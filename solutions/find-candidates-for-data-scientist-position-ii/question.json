{"questionId": "3589", "acRate": 44.81255448997384, "difficulty": "Medium", "freqBar": 0.0, "frontendQuestionId": "3278", "paidOnly": true, "status": "ac", "title": "Find Candidates for Data Scientist Position II", "titleSlug": "find-candidates-for-data-scientist-position-ii", "topicTags": [{"name": "Database", "id": "VG9waWNUYWdOb2RlOjYxMDQz", "slug": "database"}], "content": "<p>Table: <font face=\"monospace\"><code>Candidates</code></font></p>\n\n<pre>\n+--------------+---------+ \n| Column Name  | Type    | \n+--------------+---------+ \n| candidate_id | int     | \n| skill        | varchar |\n| proficiency  | int     |\n+--------------+---------+\n(candidate_id, skill) is the unique key for this table.\nEach row includes candidate_id, skill, and proficiency level (1-5).\n</pre>\n\n<p>Table: <font face=\"monospace\"><code>Projects</code></font></p>\n\n<pre>\n+--------------+---------+ \n| Column Name  | Type    | \n+--------------+---------+ \n| project_id   | int     | \n| skill        | varchar |\n| importance   | int     |\n+--------------+---------+\n(project_id, skill) is the primary key for this table.\nEach row includes project_id, required skill, and its importance (1-5) for the project.\n</pre>\n\n<p>Leetcode is staffing for multiple data science projects. Write a solution to find the <strong>best candidate</strong> for<strong> each project</strong> based on the following criteria:</p>\n\n<ol>\n\t<li>Candidates must have <strong>all</strong> the skills required for a project.</li>\n\t<li>Calculate a <strong>score</strong> for each candidate-project pair as follows:\n\t<ul>\n\t\t<li><strong>Start</strong> with <code>100</code> points</li>\n\t\t<li><strong>Add</strong> <code>10</code> points for each skill where <strong>proficiency &gt; importance</strong></li>\n\t\t<li><strong>Subtract</strong> <code>5</code> points for each skill where <strong>proficiency &lt; importance</strong></li>\n\t</ul>\n\t</li>\n</ol>\n\n<p>Include only the top candidate (highest score) for each project. If there&rsquo;s a <strong>tie</strong>, choose the candidate with the <strong>lower</strong> <code>candidate_id</code>. If there is <strong>no suitable candidate</strong> for a project, <strong>do not return</strong>&nbsp;that project.</p>\n\n<p>Return a result table ordered by <code>project_id</code> in ascending order.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong></p>\n\n<p><code>Candidates</code> table:</p>\n\n<pre class=\"example-io\">\n+--------------+-----------+-------------+\n| candidate_id | skill     | proficiency |\n+--------------+-----------+-------------+\n| 101          | Python    | 5           |\n| 101          | Tableau   | 3           |\n| 101          | PostgreSQL| 4           |\n| 101          | TensorFlow| 2           |\n| 102          | Python    | 4           |\n| 102          | Tableau   | 5           |\n| 102          | PostgreSQL| 4           |\n| 102          | R         | 4           |\n| 103          | Python    | 3           |\n| 103          | Tableau   | 5           |\n| 103          | PostgreSQL| 5           |\n| 103          | Spark     | 4           |\n+--------------+-----------+-------------+\n</pre>\n\n<p><code>Projects</code> table:</p>\n\n<pre class=\"example-io\">\n+-------------+-----------+------------+\n| project_id  | skill     | importance |\n+-------------+-----------+------------+\n| 501         | Python    | 4          |\n| 501         | Tableau   | 3          |\n| 501         | PostgreSQL| 5          |\n| 502         | Python    | 3          |\n| 502         | Tableau   | 4          |\n| 502         | R         | 2          |\n+-------------+-----------+------------+\n</pre>\n\n<p><strong>Output:</strong></p>\n\n<pre class=\"example-io\">\n+-------------+--------------+-------+\n| project_id  | candidate_id | score |\n+-------------+--------------+-------+\n| 501         | 101          | 105   |\n| 502         | 102          | 130   |\n+-------------+--------------+-------+\n</pre>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>For Project 501, Candidate 101 has the highest score of 105. All other candidates have the same score but Candidate 101 has the lowest candidate_id among them.</li>\n\t<li>For Project 502, Candidate 102 has the highest score of 130.</li>\n</ul>\n\n<p>The output table is ordered by project_id in ascending order.</p>\n</div>\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Candidates\":[\"candidate_id\",\"skill\",\"proficiency\"],\"Projects\":[\"project_id\",\"skill\",\"importance\"]},\"rows\":{\"Candidates\":[[101,\"Python\",5],[101,\"Tableau\",3],[101,\"PostgreSQL\",4],[101,\"TensorFlow\",2],[102,\"Python\",4],[102,\"Tableau\",5],[102,\"PostgreSQL\",4],[102,\"R\",4],[103,\"Python\",3],[103,\"Tableau\",5],[103,\"PostgreSQL\",5],[103,\"Spark\",4]],\"Projects\":[[501,\"Python\",4],[501,\"Tableau\",3],[501,\"PostgreSQL\",5],[502,\"Python\",3],[502,\"Tableau\",4],[502,\"R\",2]]}}", "codeSnippets": [{"lang": "MySQL", "langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, {"lang": "MS SQL Server", "langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, {"lang": "Oracle", "langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, {"lang": "Pandas", "langSlug": "pythondata", "code": "import pandas as pd\n\ndef find_best_candidates(candidates: pd.DataFrame, projects: pd.DataFrame) -> pd.DataFrame:\n    "}, {"lang": "PostgreSQL", "langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}], "similarQuestionList": []}