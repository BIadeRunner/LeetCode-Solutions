{"questionId": "2464", "acRate": 51.05193902745538, "difficulty": "Medium", "freqBar": 40.97205529817753, "frontendQuestionId": "2380", "paidOnly": false, "status": "ac", "title": "Time Needed to Rearrange a Binary String", "topicTags": [{"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Dynamic Programming", "id": "VG9waWNUYWdOb2RlOjEz", "slug": "dynamic-programming"}, {"name": "Simulation", "id": "VG9waWNUYWdOb2RlOjYxMDU1", "slug": "simulation"}], "titleSlug": "time-needed-to-rearrange-a-binary-string", "content": "<p>You are given a binary string <code>s</code>. In one second, <strong>all</strong> occurrences of <code>&quot;01&quot;</code> are <strong>simultaneously</strong> replaced with <code>&quot;10&quot;</code>. This process <strong>repeats</strong> until no occurrences of <code>&quot;01&quot;</code> exist.</p>\n\n<p>Return<em> the number of seconds needed to complete this process.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0110101&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> \nAfter one second, s becomes &quot;1011010&quot;.\nAfter another second, s becomes &quot;1101100&quot;.\nAfter the third second, s becomes &quot;1110100&quot;.\nAfter the fourth second, s becomes &quot;1111000&quot;.\nNo occurrence of &quot;01&quot; exists any longer, and the process needed 4 seconds to complete,\nso we return 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;11100&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nNo occurrence of &quot;01&quot; exists in s, and the processes needed 0 seconds to complete,\nso we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<p>Can you solve this problem in O(n) time complexity?</p>\n", "hints": ["Try replicating the steps from the problem statement.", "Perform the replacements simultaneously, and return the number of times the process repeats."], "exampleTestcases": "\"0110101\"\n\"11100\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int secondsToRemoveOccurrences(string s) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int secondsToRemoveOccurrences(String s) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def secondsToRemoveOccurrences(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def secondsToRemoveOccurrences(self, s: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int secondsToRemoveOccurrences(char* s) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int SecondsToRemoveOccurrences(string s) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar secondsToRemoveOccurrences = function(s) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function secondsToRemoveOccurrences(s: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function secondsToRemoveOccurrences($s) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func secondsToRemoveOccurrences(_ s: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun secondsToRemoveOccurrences(s: String): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int secondsToRemoveOccurrences(String s) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func secondsToRemoveOccurrences(s string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} s\n# @return {Integer}\ndef seconds_to_remove_occurrences(s)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def secondsToRemoveOccurrences(s: String): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn seconds_to_remove_occurrences(s: String) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (seconds-to-remove-occurrences s)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec seconds_to_remove_occurrences(S :: unicode:unicode_binary()) -> integer().\nseconds_to_remove_occurrences(S) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec seconds_to_remove_occurrences(s :: String.t) :: integer\n  def seconds_to_remove_occurrences(s) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "minimum-swaps-to-group-all-1s-together", "title": "Minimum Swaps to Group All 1's Together", "isPaidOnly": true}, {"difficulty": "Medium", "titleSlug": "minimum-swaps-to-group-all-1s-together-ii", "title": "Minimum Swaps to Group All 1's Together II", "isPaidOnly": false}]}