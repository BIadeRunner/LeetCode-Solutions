{"question_id": "999", "problem_slug": "regions-cut-by-slashes", "problem_title": "Regions Cut By Slashes", "content": "An n x n grid is composed of 1 x 1 squares where each 1 x 1 square consists of a '/', '\\', or blank space ' '. These characters divide the square into contiguous regions.\nGiven the grid grid represented as a string array, return the number of regions.\nNote that backslash characters are escaped, so a '\\' is represented as '\\\\'.\n \nExample 1:\n\n\nInput: grid = [\" /\",\"/ \"]\nOutput: 2\n\nExample 2:\n\n\nInput: grid = [\" /\",\"  \"]\nOutput: 1\n\nExample 3:\n\n\nInput: grid = [\"/\\\\\",\"\\\\/\"]\nOutput: 5\nExplanation: Recall that because \\ characters are escaped, \"\\\\/\" refers to \\/, and \"/\\\\\" refers to /\\.\n\n \nConstraints:\n\nn == grid.length == grid[i].length\n1 <= n <= 30\ngrid[i][j] is either '/', '\\', or ' '.\n\n", "hints": [], "exampleTestcases": "[\" /\",\"/ \"]\n[\" /\",\"  \"]\n[\"/\\\\\",\"\\\\/\"]", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    int regionsBySlashes(vector<string>& grid) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public int regionsBySlashes(String[] grid) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def regionsBySlashes(self, grid):\n        \"\"\"\n        :type grid: List[str]\n        :rtype: int\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def regionsBySlashes(self, grid: List[str]) -> int:\n        "}, "C": {"langSlug": "c", "code": "int regionsBySlashes(char** grid, int gridSize) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public int RegionsBySlashes(string[] grid) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string[]} grid\n * @return {number}\n */\nvar regionsBySlashes = function(grid) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function regionsBySlashes(grid: string[]): number {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String[] $grid\n     * @return Integer\n     */\n    function regionsBySlashes($grid) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func regionsBySlashes(_ grid: [String]) -> Int {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun regionsBySlashes(grid: Array<String>): Int {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  int regionsBySlashes(List<String> grid) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func regionsBySlashes(grid []string) int {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String[]} grid\n# @return {Integer}\ndef regions_by_slashes(grid)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def regionsBySlashes(grid: Array[String]): Int = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn regions_by_slashes(grid: Vec<String>) -> i32 {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (regions-by-slashes grid)\n  (-> (listof string?) exact-integer?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec regions_by_slashes(Grid :: [unicode:unicode_binary()]) -> integer().\nregions_by_slashes(Grid) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec regions_by_slashes(grid :: [String.t]) :: integer\n  def regions_by_slashes(grid) do\n    \n  end\nend"}}}