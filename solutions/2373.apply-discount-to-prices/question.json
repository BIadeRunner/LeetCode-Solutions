{"question_id": "2373", "problem_slug": "apply-discount-to-prices", "problem_title": "Apply Discount to Prices", "content": "A sentence is a string of single-space separated words where each word can contain digits, lowercase letters, and the dollar sign '$'. A word represents a price if it is a sequence of digits preceded by a dollar sign.\n\nFor example, \"$100\", \"$23\", and \"$6\" represent prices while \"100\", \"$\", and \"$1e5\" do not.\n\nYou are given a string sentence representing a sentence and an integer discount. For each word representing a price, apply a discount of discount% on the price and update the word in the sentence. All updated prices should be represented with exactly two decimal places.\nReturn a string representing the modified sentence.\nNote that all prices will contain at most 10 digits.\n \nExample 1:\n\nInput: sentence = \"there are $1 $2 and 5$ candies in the shop\", discount = 50\nOutput: \"there are $0.50 $1.00 and 5$ candies in the shop\"\nExplanation: \nThe words which represent prices are \"$1\" and \"$2\". \n- A 50% discount on \"$1\" yields \"$0.50\", so \"$1\" is replaced by \"$0.50\".\n- A 50% discount on \"$2\" yields \"$1\". Since we need to have exactly 2 decimal places after a price, we replace \"$2\" with \"$1.00\".\n\nExample 2:\n\nInput: sentence = \"1 2 $3 4 $5 $6 7 8$ $9 $10$\", discount = 100\nOutput: \"1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$\"\nExplanation: \nApplying a 100% discount on any price will result in 0.\nThe words representing prices are \"$3\", \"$5\", \"$6\", and \"$9\".\nEach of them is replaced by \"$0.00\".\n\n \nConstraints:\n\n1 <= sentence.length <= 105\nsentence consists of lowercase English letters, digits, ' ', and '$'.\nsentence does not have leading or trailing spaces.\nAll words in sentence are separated by a single space.\nAll prices will be positive numbers without leading zeros.\nAll prices will have at most 10 digits.\n0 <= discount <= 100\n\n", "hints": ["Extract each word from the sentence and check if it represents a price.", "For each price, apply the given discount to it and update it."], "exampleTestcases": "\"there are $1 $2 and 5$ candies in the shop\"\n50\n\"1 2 $3 4 $5 $6 7 8$ $9 $10$\"\n100", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    string discountPrices(string sentence, int discount) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public String discountPrices(String sentence, int discount) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def discountPrices(self, sentence, discount):\n        \"\"\"\n        :type sentence: str\n        :type discount: int\n        :rtype: str\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def discountPrices(self, sentence: str, discount: int) -> str:\n        "}, "C": {"langSlug": "c", "code": "char* discountPrices(char* sentence, int discount) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public string DiscountPrices(string sentence, int discount) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} sentence\n * @param {number} discount\n * @return {string}\n */\nvar discountPrices = function(sentence, discount) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function discountPrices(sentence: string, discount: number): string {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $sentence\n     * @param Integer $discount\n     * @return String\n     */\n    function discountPrices($sentence, $discount) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func discountPrices(_ sentence: String, _ discount: Int) -> String {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun discountPrices(sentence: String, discount: Int): String {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  String discountPrices(String sentence, int discount) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func discountPrices(sentence string, discount int) string {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} sentence\n# @param {Integer} discount\n# @return {String}\ndef discount_prices(sentence, discount)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def discountPrices(sentence: String, discount: Int): String = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn discount_prices(sentence: String, discount: i32) -> String {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (discount-prices sentence discount)\n  (-> string? exact-integer? string?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec discount_prices(Sentence :: unicode:unicode_binary(), Discount :: integer()) -> unicode:unicode_binary().\ndiscount_prices(Sentence, Discount) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec discount_prices(sentence :: String.t, discount :: integer) :: String.t\n  def discount_prices(sentence, discount) do\n    \n  end\nend"}}}