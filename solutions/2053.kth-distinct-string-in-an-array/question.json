{"questionId": "2163", "acRate": 82.08953653532537, "difficulty": "Easy", "freqBar": 59.53638296295567, "frontendQuestionId": "2053", "paidOnly": false, "status": "ac", "title": "Kth Distinct String in an Array", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}, {"name": "Counting", "id": "VG9waWNUYWdOb2RlOjYxMDYy", "slug": "counting"}], "titleSlug": "kth-distinct-string-in-an-array", "content": "<p>A <strong>distinct string</strong> is a string that is present only <strong>once</strong> in an array.</p>\n\n<p>Given an array of strings <code>arr</code>, and an integer <code>k</code>, return <em>the </em><code>k<sup>th</sup></code><em> <strong>distinct string</strong> present in </em><code>arr</code>. If there are <strong>fewer</strong> than <code>k</code> distinct strings, return <em>an <strong>empty string </strong></em><code>&quot;&quot;</code>.</p>\n\n<p>Note that the strings are considered in the <strong>order in which they appear</strong> in the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;d&quot;,&quot;b&quot;,&quot;c&quot;,&quot;b&quot;,&quot;c&quot;,&quot;a&quot;], k = 2\n<strong>Output:</strong> &quot;a&quot;\n<strong>Explanation:</strong>\nThe only distinct strings in arr are &quot;d&quot; and &quot;a&quot;.\n&quot;d&quot; appears 1<sup>st</sup>, so it is the 1<sup>st</sup> distinct string.\n&quot;a&quot; appears 2<sup>nd</sup>, so it is the 2<sup>nd</sup> distinct string.\nSince k == 2, &quot;a&quot; is returned. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;aaa&quot;,&quot;aa&quot;,&quot;a&quot;], k = 1\n<strong>Output:</strong> &quot;aaa&quot;\n<strong>Explanation:</strong>\nAll strings in arr are distinct, so the 1<sup>st</sup> string &quot;aaa&quot; is returned.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;a&quot;,&quot;b&quot;,&quot;a&quot;], k = 3\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong>\nThe only distinct string is &quot;b&quot;. Since there are fewer than 3 distinct strings, we return an empty string &quot;&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr[i].length &lt;= 5</code></li>\n\t<li><code>arr[i]</code> consists of lowercase English letters.</li>\n</ul>\n", "hints": ["Try 'mapping' the strings to check if they are unique or not."], "exampleTestcases": "[\"d\",\"b\",\"c\",\"b\",\"c\",\"a\"]\n2\n[\"aaa\",\"aa\",\"a\"]\n1\n[\"a\",\"b\",\"a\"]\n3", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    string kthDistinct(vector<string>& arr, int k) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public String kthDistinct(String[] arr, int k) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def kthDistinct(self, arr, k):\n        \"\"\"\n        :type arr: List[str]\n        :type k: int\n        :rtype: str\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def kthDistinct(self, arr: List[str], k: int) -> str:\n        "}, {"lang": "C", "langSlug": "c", "code": "char* kthDistinct(char** arr, int arrSize, int k) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public string KthDistinct(string[] arr, int k) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string[]} arr\n * @param {number} k\n * @return {string}\n */\nvar kthDistinct = function(arr, k) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function kthDistinct(arr: string[], k: number): string {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String[] $arr\n     * @param Integer $k\n     * @return String\n     */\n    function kthDistinct($arr, $k) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func kthDistinct(_ arr: [String], _ k: Int) -> String {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun kthDistinct(arr: Array<String>, k: Int): String {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  String kthDistinct(List<String> arr, int k) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func kthDistinct(arr []string, k int) string {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String[]} arr\n# @param {Integer} k\n# @return {String}\ndef kth_distinct(arr, k)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def kthDistinct(arr: Array[String], k: Int): String = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn kth_distinct(arr: Vec<String>, k: i32) -> String {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (kth-distinct arr k)\n  (-> (listof string?) exact-integer? string?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec kth_distinct(Arr :: [unicode:unicode_binary()], K :: integer()) -> unicode:unicode_binary().\nkth_distinct(Arr, K) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec kth_distinct(arr :: [String.t], k :: integer) :: String.t\n  def kth_distinct(arr, k) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "count-common-words-with-one-occurrence", "title": "Count Common Words With One Occurrence", "isPaidOnly": false}]}