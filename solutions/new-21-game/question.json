{"questionId": "867", "acRate": 44.94847258005153, "difficulty": "Medium", "freqBar": 30.52811768469609, "frontendQuestionId": "837", "paidOnly": false, "status": "ac", "title": "New 21 Game", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "Dynamic Programming", "id": "VG9waWNUYWdOb2RlOjEz", "slug": "dynamic-programming"}, {"name": "Sliding Window", "id": "VG9waWNUYWdOb2RlOjU1ODIx", "slug": "sliding-window"}, {"name": "Probability and Statistics", "id": "VG9waWNUYWdOb2RlOjYxMDc5", "slug": "probability-and-statistics"}], "titleSlug": "new-21-game", "content": "<p>Alice plays the following game, loosely based on the card game <strong>&quot;21&quot;</strong>.</p>\n\n<p>Alice starts with <code>0</code> points and draws numbers while she has less than <code>k</code> points. During each draw, she gains an integer number of points randomly from the range <code>[1, maxPts]</code>, where <code>maxPts</code> is an integer. Each draw is independent and the outcomes have equal probabilities.</p>\n\n<p>Alice stops drawing numbers when she gets <code>k</code> <strong>or more points</strong>.</p>\n\n<p>Return the probability that Alice has <code>n</code> or fewer points.</p>\n\n<p>Answers within <code>10<sup>-5</sup></code> of the actual answer are considered accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10, k = 1, maxPts = 10\n<strong>Output:</strong> 1.00000\n<strong>Explanation:</strong> Alice gets a single card, then stops.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 6, k = 1, maxPts = 10\n<strong>Output:</strong> 0.60000\n<strong>Explanation:</strong> Alice gets a single card, then stops.\nIn 6 out of 10 possibilities, she is at or below 6 points.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 21, k = 17, maxPts = 10\n<strong>Output:</strong> 0.73278\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= k &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= maxPts &lt;= 10<sup>4</sup></code></li>\n</ul>\n", "hints": [], "exampleTestcases": "10\n1\n10\n6\n1\n10\n21\n17\n10", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    double new21Game(int n, int k, int maxPts) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public double new21Game(int n, int k, int maxPts) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def new21Game(self, n, k, maxPts):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :type maxPts: int\n        :rtype: float\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def new21Game(self, n: int, k: int, maxPts: int) -> float:\n        "}, {"lang": "C", "langSlug": "c", "code": "double new21Game(int n, int k, int maxPts) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public double New21Game(int n, int k, int maxPts) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} n\n * @param {number} k\n * @param {number} maxPts\n * @return {number}\n */\nvar new21Game = function(n, k, maxPts) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function new21Game(n: number, k: number, maxPts: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @param Integer $maxPts\n     * @return Float\n     */\n    function new21Game($n, $k, $maxPts) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func new21Game(_ n: Int, _ k: Int, _ maxPts: Int) -> Double {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun new21Game(n: Int, k: Int, maxPts: Int): Double {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  double new21Game(int n, int k, int maxPts) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func new21Game(n int, k int, maxPts int) float64 {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} n\n# @param {Integer} k\n# @param {Integer} max_pts\n# @return {Float}\ndef new21_game(n, k, max_pts)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def new21Game(n: Int, k: Int, maxPts: Int): Double = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn new21_game(n: i32, k: i32, max_pts: i32) -> f64 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (new21-game n k maxPts)\n  (-> exact-integer? exact-integer? exact-integer? flonum?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec new21_game(N :: integer(), K :: integer(), MaxPts :: integer()) -> float().\nnew21_game(N, K, MaxPts) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec new21_game(n :: integer, k :: integer, max_pts :: integer) :: float\n  def new21_game(n, k, max_pts) do\n    \n  end\nend"}], "similarQuestionList": []}