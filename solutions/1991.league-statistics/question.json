{"question_id": "1991", "problem_slug": "league-statistics", "problem_title": "League Statistics", "content": "Table: Teams\n\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| team_id        | int     |\n| team_name      | varchar |\n+----------------+---------+\nteam_id is the column with unique values for this table.\nEach row contains information about one team in the league.\n\n \nTable: Matches\n\n+-----------------+---------+\n| Column Name     | Type    |\n+-----------------+---------+\n| home_team_id    | int     |\n| away_team_id    | int     |\n| home_team_goals | int     |\n| away_team_goals | int     |\n+-----------------+---------+\n(home_team_id, away_team_id) is the primary key (combination of columns with unique values) for this table.\nEach row contains information about one match.\nhome_team_goals is the number of goals scored by the home team.\naway_team_goals is the number of goals scored by the away team.\nThe winner of the match is the team with the higher number of goals.\n\n \nWrite a solution to report the statistics of the league. The statistics should be built using the played matches where the winning team gets three points and the losing team gets no points. If a match ends with a draw, both teams get one point.\nEach row of the result table should contain:\n\nteam_name - The name of the team in the Teams table.\nmatches_played - The number of matches played as either a home or away team.\npoints - The total points the team has so far.\ngoal_for - The total number of goals scored by the team across all matches.\ngoal_against - The total number of goals scored by opponent teams against this team across all matches.\ngoal_diff - The result of goal_for - goal_against.\n\nReturn the result table ordered by points in descending order. If two or more teams have the same points, order them by goal_diff in descending order. If there is still a tie, order them by team_name in lexicographical order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nTeams table:\n+---------+-----------+\n| team_id | team_name |\n+---------+-----------+\n| 1       | Ajax      |\n| 4       | Dortmund  |\n| 6       | Arsenal   |\n+---------+-----------+\nMatches table:\n+--------------+--------------+-----------------+-----------------+\n| home_team_id | away_team_id | home_team_goals | away_team_goals |\n+--------------+--------------+-----------------+-----------------+\n| 1            | 4            | 0               | 1               |\n| 1            | 6            | 3               | 3               |\n| 4            | 1            | 5               | 2               |\n| 6            | 1            | 0               | 0               |\n+--------------+--------------+-----------------+-----------------+\nOutput: \n+-----------+----------------+--------+----------+--------------+-----------+\n| team_name | matches_played | points | goal_for | goal_against | goal_diff |\n+-----------+----------------+--------+----------+--------------+-----------+\n| Dortmund  | 2              | 6      | 6        | 2            | 4         |\n| Arsenal   | 2              | 2      | 3        | 3            | 0         |\n| Ajax      | 4              | 2      | 5        | 9            | -4        |\n+-----------+----------------+--------+----------+--------------+-----------+\nExplanation: \nAjax (team_id=1) played 4 matches: 2 losses and 2 draws. Total points = 0 + 0 + 1 + 1 = 2.\nDortmund (team_id=4) played 2 matches: 2 wins. Total points = 3 + 3 = 6.\nArsenal (team_id=6) played 2 matches: 2 draws. Total points = 1 + 1 = 2.\nDortmund is the first team in the table. Ajax and Arsenal have the same points, but since Arsenal has a higher goal_diff than Ajax, Arsenal comes before Ajax in the table.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Teams\":[\"team_id\",\"team_name\"],\"Matches\":[\"home_team_id\",\"away_team_id\",\"home_team_goals\",\"away_team_goals\"]},\"rows\":{\"Teams\":[[1,\"Ajax\"],[4,\"Dortmund\"],[6,\"Arsenal\"]],\"Matches\":[[1,4,0,1],[1,6,3,3],[4,1,5,2],[6,1,0,0]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef league_statistics(teams: pd.DataFrame, matches: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}