{"question_id": "2010", "problem_slug": "check-if-word-equals-summation-of-two-words", "problem_title": "Check if Word Equals Summation of Two Words", "content": "The letter value of a letter is its position in the alphabet starting from 0 (i.e. 'a' -> 0, 'b' -> 1, 'c' -> 2, etc.).\nThe numerical value of some string of lowercase English letters s is the concatenation of the letter values of each letter in s, which is then converted into an integer.\n\nFor example, if s = \"acb\", we concatenate each letter's letter value, resulting in \"021\". After converting it, we get 21.\n\nYou are given three strings firstWord, secondWord, and targetWord, each consisting of lowercase English letters 'a' through 'j' inclusive.\nReturn true if the summation of the numerical values of firstWord and secondWord equals the numerical value of targetWord, or false otherwise.\n \nExample 1:\n\nInput: firstWord = \"acb\", secondWord = \"cba\", targetWord = \"cdb\"\nOutput: true\nExplanation:\nThe numerical value of firstWord is \"acb\" -> \"021\" -> 21.\nThe numerical value of secondWord is \"cba\" -> \"210\" -> 210.\nThe numerical value of targetWord is \"cdb\" -> \"231\" -> 231.\nWe return true because 21 + 210 == 231.\n\nExample 2:\n\nInput: firstWord = \"aaa\", secondWord = \"a\", targetWord = \"aab\"\nOutput: false\nExplanation: \nThe numerical value of firstWord is \"aaa\" -> \"000\" -> 0.\nThe numerical value of secondWord is \"a\" -> \"0\" -> 0.\nThe numerical value of targetWord is \"aab\" -> \"001\" -> 1.\nWe return false because 0 + 0 != 1.\n\nExample 3:\n\nInput: firstWord = \"aaa\", secondWord = \"a\", targetWord = \"aaaa\"\nOutput: true\nExplanation: \nThe numerical value of firstWord is \"aaa\" -> \"000\" -> 0.\nThe numerical value of secondWord is \"a\" -> \"0\" -> 0.\nThe numerical value of targetWord is \"aaaa\" -> \"0000\" -> 0.\nWe return true because 0 + 0 == 0.\n\n \nConstraints:\n\n1 <= firstWord.length, secondWord.length, targetWord.length <= 8\nfirstWord, secondWord, and targetWord consist of lowercase English letters from 'a' to 'j' inclusive.\n\n", "hints": ["Convert each character of each word to its numerical value.", "Check if the numerical values satisfies the condition."], "exampleTestcases": "\"acb\"\n\"cba\"\n\"cdb\"\n\"aaa\"\n\"a\"\n\"aab\"\n\"aaa\"\n\"a\"\n\"aaaa\"", "codeSnippets": {"C++": {"langSlug": "cpp", "code": "class Solution {\npublic:\n    bool isSumEqual(string firstWord, string secondWord, string targetWord) {\n        \n    }\n};"}, "Java": {"langSlug": "java", "code": "class Solution {\n    public boolean isSumEqual(String firstWord, String secondWord, String targetWord) {\n        \n    }\n}"}, "Python": {"langSlug": "python", "code": "class Solution(object):\n    def isSumEqual(self, firstWord, secondWord, targetWord):\n        \"\"\"\n        :type firstWord: str\n        :type secondWord: str\n        :type targetWord: str\n        :rtype: bool\n        \"\"\"\n        "}, "Python3": {"langSlug": "python3", "code": "class Solution:\n    def isSumEqual(self, firstWord: str, secondWord: str, targetWord: str) -> bool:\n        "}, "C": {"langSlug": "c", "code": "bool isSumEqual(char* firstWord, char* secondWord, char* targetWord) {\n    \n}"}, "C#": {"langSlug": "csharp", "code": "public class Solution {\n    public bool IsSumEqual(string firstWord, string secondWord, string targetWord) {\n        \n    }\n}"}, "JavaScript": {"langSlug": "javascript", "code": "/**\n * @param {string} firstWord\n * @param {string} secondWord\n * @param {string} targetWord\n * @return {boolean}\n */\nvar isSumEqual = function(firstWord, secondWord, targetWord) {\n    \n};"}, "TypeScript": {"langSlug": "typescript", "code": "function isSumEqual(firstWord: string, secondWord: string, targetWord: string): boolean {\n    \n};"}, "PHP": {"langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $firstWord\n     * @param String $secondWord\n     * @param String $targetWord\n     * @return Boolean\n     */\n    function isSumEqual($firstWord, $secondWord, $targetWord) {\n        \n    }\n}"}, "Swift": {"langSlug": "swift", "code": "class Solution {\n    func isSumEqual(_ firstWord: String, _ secondWord: String, _ targetWord: String) -> Bool {\n        \n    }\n}"}, "Kotlin": {"langSlug": "kotlin", "code": "class Solution {\n    fun isSumEqual(firstWord: String, secondWord: String, targetWord: String): Boolean {\n        \n    }\n}"}, "Dart": {"langSlug": "dart", "code": "class Solution {\n  bool isSumEqual(String firstWord, String secondWord, String targetWord) {\n    \n  }\n}"}, "Go": {"langSlug": "golang", "code": "func isSumEqual(firstWord string, secondWord string, targetWord string) bool {\n    \n}"}, "Ruby": {"langSlug": "ruby", "code": "# @param {String} first_word\n# @param {String} second_word\n# @param {String} target_word\n# @return {Boolean}\ndef is_sum_equal(first_word, second_word, target_word)\n    \nend"}, "Scala": {"langSlug": "scala", "code": "object Solution {\n    def isSumEqual(firstWord: String, secondWord: String, targetWord: String): Boolean = {\n        \n    }\n}"}, "Rust": {"langSlug": "rust", "code": "impl Solution {\n    pub fn is_sum_equal(first_word: String, second_word: String, target_word: String) -> bool {\n        \n    }\n}"}, "Racket": {"langSlug": "racket", "code": "(define/contract (is-sum-equal firstWord secondWord targetWord)\n  (-> string? string? string? boolean?)\n  )"}, "Erlang": {"langSlug": "erlang", "code": "-spec is_sum_equal(FirstWord :: unicode:unicode_binary(), SecondWord :: unicode:unicode_binary(), TargetWord :: unicode:unicode_binary()) -> boolean().\nis_sum_equal(FirstWord, SecondWord, TargetWord) ->\n  ."}, "Elixir": {"langSlug": "elixir", "code": "defmodule Solution do\n  @spec is_sum_equal(first_word :: String.t, second_word :: String.t, target_word :: String.t) :: boolean\n  def is_sum_equal(first_word, second_word, target_word) do\n    \n  end\nend"}}}