{"questionId": "2645", "acRate": 56.883516496422374, "difficulty": "Easy", "freqBar": 84.42316685898163, "frontendQuestionId": "2582", "paidOnly": false, "status": "ac", "title": "Pass the Pillow", "topicTags": [{"name": "Math", "id": "VG9waWNUYWdOb2RlOjg=", "slug": "math"}, {"name": "Simulation", "id": "VG9waWNUYWdOb2RlOjYxMDU1", "slug": "simulation"}], "titleSlug": "pass-the-pillow", "content": "<p>There are <code>n</code> people standing in a line labeled from <code>1</code> to <code>n</code>. The first person in the line is holding a pillow initially. Every second, the person holding the pillow passes it to the next person standing in the line. Once the pillow reaches the end of the line, the direction changes, and people continue passing the pillow in the opposite direction.</p>\n\n<ul>\n\t<li>For example, once the pillow reaches the <code>n<sup>th</sup></code> person they pass it to the <code>n - 1<sup>th</sup></code> person, then to the <code>n - 2<sup>th</sup></code> person and so on.</li>\n</ul>\n\n<p>Given the two positive integers <code>n</code> and <code>time</code>, return <em>the index of the person holding the pillow after </em><code>time</code><em> seconds</em>.</p>\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, time = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> People pass the pillow in the following way: 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 3 -&gt; 2.\nAfter five seconds, the 2<sup>nd</sup> person is holding the pillow.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, time = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> People pass the pillow in the following way: 1 -&gt; 2 -&gt; 3.\nAfter two seconds, the 3<sup>r</sup><sup>d</sup> person is holding the pillow.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= time &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as <a href=\"https://leetcode.com/problems/find-the-child-who-has-the-ball-after-k-seconds/description/\" target=\"_blank\"> 3178: Find the Child Who Has the Ball After K Seconds.</a></p>\n", "hints": ["Maintain two integer variables, direction and i, where direction denotes the current direction in which the pillow should pass, and i denotes an index of the person holding the pillow.", "While time is positive, update the current index with the current direction. If the index reaches the end of the line, multiply direction by - 1."], "exampleTestcases": "4\n5\n3\n2", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int passThePillow(int n, int time) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int passThePillow(int n, int time) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def passThePillow(self, n, time):\n        \"\"\"\n        :type n: int\n        :type time: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def passThePillow(self, n: int, time: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int passThePillow(int n, int time) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int PassThePillow(int n, int time) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number} n\n * @param {number} time\n * @return {number}\n */\nvar passThePillow = function(n, time) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function passThePillow(n: number, time: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $time\n     * @return Integer\n     */\n    function passThePillow($n, $time) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func passThePillow(_ n: Int, _ time: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun passThePillow(n: Int, time: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int passThePillow(int n, int time) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func passThePillow(n int, time int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer} n\n# @param {Integer} time\n# @return {Integer}\ndef pass_the_pillow(n, time)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def passThePillow(n: Int, time: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn pass_the_pillow(n: i32, time: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (pass-the-pillow n time)\n  (-> exact-integer? exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec pass_the_pillow(N :: integer(), Time :: integer()) -> integer().\npass_the_pillow(N, Time) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec pass_the_pillow(n :: integer, time :: integer) :: integer\n  def pass_the_pillow(n, time) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "find-the-student-that-will-replace-the-chalk", "title": "Find the Student that Will Replace the Chalk", "isPaidOnly": false}]}