{"questionId": "1454", "acRate": 76.54979674796748, "difficulty": "Easy", "freqBar": 0.0, "frontendQuestionId": "1332", "paidOnly": false, "status": "ac", "title": "Remove Palindromic Subsequences", "topicTags": [{"name": "Two Pointers", "id": "VG9waWNUYWdOb2RlOjk=", "slug": "two-pointers"}, {"name": "String", "id": "VG9waWNUYWdOb2RlOjEw", "slug": "string"}], "titleSlug": "remove-palindromic-subsequences", "content": "<p>You are given a string <code>s</code> consisting <strong>only</strong> of letters <code>&#39;a&#39;</code> and <code>&#39;b&#39;</code>. In a single step you can remove one <strong>palindromic subsequence</strong> from <code>s</code>.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of steps to make the given string empty</em>.</p>\n\n<p>A string is a <strong>subsequence</strong> of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does <strong>not</strong> necessarily need to be contiguous.</p>\n\n<p>A string is called <strong>palindrome</strong> if is one that reads the same backward as well as forward.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababa&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> s is already a palindrome, so its entirety can be removed in a single step.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;<u>a</u>bb&quot; -&gt; &quot;<u>bb</u>&quot; -&gt; &quot;&quot;. \nRemove palindromic subsequence &quot;a&quot; then &quot;bb&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;baabb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;<u>baa</u>b<u>b</u>&quot; -&gt; &quot;<u>b</u>&quot; -&gt; &quot;&quot;. \nRemove palindromic subsequence &quot;baab&quot; then &quot;b&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;a&#39;</code> or <code>&#39;b&#39;</code>.</li>\n</ul>\n", "hints": ["Use the fact that string contains only 2 characters.", "Are subsequences composed of only one type of letter always palindrome strings ?"], "exampleTestcases": "\"ababa\"\n\"abb\"\n\"baabb\"", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int removePalindromeSub(string s) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int removePalindromeSub(String s) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def removePalindromeSub(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def removePalindromeSub(self, s: str) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int removePalindromeSub(char* s) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int RemovePalindromeSub(string s) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar removePalindromeSub = function(s) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function removePalindromeSub(s: string): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function removePalindromeSub($s) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func removePalindromeSub(_ s: String) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun removePalindromeSub(s: String): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int removePalindromeSub(String s) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func removePalindromeSub(s string) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {String} s\n# @return {Integer}\ndef remove_palindrome_sub(s)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def removePalindromeSub(s: String): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn remove_palindrome_sub(s: String) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (remove-palindrome-sub s)\n  (-> string? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec remove_palindrome_sub(S :: unicode:unicode_binary()) -> integer().\nremove_palindrome_sub(S) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec remove_palindrome_sub(s :: String.t) :: integer\n  def remove_palindrome_sub(s) do\n    \n  end\nend"}], "similarQuestionList": []}