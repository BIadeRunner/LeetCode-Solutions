{"questionId": "2116", "acRate": 84.29968013695544, "difficulty": "Easy", "freqBar": 54.15027038233916, "frontendQuestionId": "2006", "paidOnly": false, "status": "ac", "title": "Count Number of Pairs With Absolute Difference K", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "Counting", "id": "VG9waWNUYWdOb2RlOjYxMDYy", "slug": "counting"}], "titleSlug": "count-number-of-pairs-with-absolute-difference-k", "content": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the number of pairs</em> <code>(i, j)</code> <em>where</em> <code>i &lt; j</code> <em>such that</em> <code>|nums[i] - nums[j]| == k</code>.</p>\n\n<p>The value of <code>|x|</code> is defined as:</p>\n\n<ul>\n\t<li><code>x</code> if <code>x &gt;= 0</code>.</li>\n\t<li><code>-x</code> if <code>x &lt; 0</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,1], k = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The pairs with an absolute difference of 1 are:\n- [<strong><u>1</u></strong>,<strong><u>2</u></strong>,2,1]\n- [<strong><u>1</u></strong>,2,<strong><u>2</u></strong>,1]\n- [1,<strong><u>2</u></strong>,2,<strong><u>1</u></strong>]\n- [1,2,<strong><u>2</u></strong>,<strong><u>1</u></strong>]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3], k = 3\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no pairs with an absolute difference of 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,5,4], k = 2\n<strong>Output:</strong> 3\n<b>Explanation:</b> The pairs with an absolute difference of 2 are:\n- [<strong><u>3</u></strong>,2,<strong><u>1</u></strong>,5,4]\n- [<strong><u>3</u></strong>,2,1,<strong><u>5</u></strong>,4]\n- [3,<strong><u>2</u></strong>,1,5,<strong><u>4</u></strong>]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= k &lt;= 99</code></li>\n</ul>\n", "hints": ["Can we check every possible pair?", "Can we use a nested for loop to solve this problem?"], "exampleTestcases": "[1,2,2,1]\n1\n[1,3]\n3\n[3,2,1,5,4]\n2", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int countKDifference(vector<int>& nums, int k) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int countKDifference(int[] nums, int k) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def countKDifference(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def countKDifference(self, nums: List[int], k: int) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int countKDifference(int* nums, int numsSize, int k) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int CountKDifference(int[] nums, int k) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar countKDifference = function(nums, k) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function countKDifference(nums: number[], k: number): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function countKDifference($nums, $k) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func countKDifference(_ nums: [Int], _ k: Int) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun countKDifference(nums: IntArray, k: Int): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int countKDifference(List<int> nums, int k) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func countKDifference(nums []int, k int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef count_k_difference(nums, k)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def countKDifference(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn count_k_difference(nums: Vec<i32>, k: i32) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (count-k-difference nums k)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec count_k_difference(Nums :: [integer()], K :: integer()) -> integer().\ncount_k_difference(Nums, K) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec count_k_difference(nums :: [integer], k :: integer) :: integer\n  def count_k_difference(nums, k) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "two-sum", "title": "Two Sum", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "k-diff-pairs-in-an-array", "title": "K-diff Pairs in an Array", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "finding-pairs-with-a-certain-sum", "title": "Finding Pairs With a Certain Sum", "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "count-equal-and-divisible-pairs-in-an-array", "title": "Count Equal and Divisible Pairs in an Array", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "count-number-of-bad-pairs", "title": "Count Number of Bad Pairs", "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "count-the-number-of-fair-pairs", "title": "Count the Number of Fair Pairs", "isPaidOnly": false}]}