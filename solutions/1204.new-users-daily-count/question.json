{"question_id": "1204", "problem_slug": "new-users-daily-count", "problem_title": "New Users Daily Count", "content": "Table: Traffic\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | int     |\n| activity      | enum    |\n| activity_date | date    |\n+---------------+---------+\nThis table may have duplicate rows.\nThe activity column is an ENUM (category) type of ('login', 'logout', 'jobs', 'groups', 'homepage').\n\n \nWrite a solution to reports for every date within at most 90 days from today, the number of users that logged in for the first time on that date. Assume today is 2019-06-30.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nTraffic table:\n+---------+----------+---------------+\n| user_id | activity | activity_date |\n+---------+----------+---------------+\n| 1       | login    | 2019-05-01    |\n| 1       | homepage | 2019-05-01    |\n| 1       | logout   | 2019-05-01    |\n| 2       | login    | 2019-06-21    |\n| 2       | logout   | 2019-06-21    |\n| 3       | login    | 2019-01-01    |\n| 3       | jobs     | 2019-01-01    |\n| 3       | logout   | 2019-01-01    |\n| 4       | login    | 2019-06-21    |\n| 4       | groups   | 2019-06-21    |\n| 4       | logout   | 2019-06-21    |\n| 5       | login    | 2019-03-01    |\n| 5       | logout   | 2019-03-01    |\n| 5       | login    | 2019-06-21    |\n| 5       | logout   | 2019-06-21    |\n+---------+----------+---------------+\nOutput: \n+------------+-------------+\n| login_date | user_count  |\n+------------+-------------+\n| 2019-05-01 | 1           |\n| 2019-06-21 | 2           |\n+------------+-------------+\nExplanation: \nNote that we only care about dates with non zero user count.\nThe user with id 5 first logged in on 2019-03-01 so he's not counted on 2019-06-21.\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Traffic\":[\"user_id\",\"activity\",\"activity_date\"]},\"rows\":{\"Traffic\":[[1,\"login\",\"2019-05-01\"],[1,\"homepage\",\"2019-05-01\"],[1,\"logout\",\"2019-05-01\"],[2,\"login\",\"2019-06-21\"],[2,\"logout\",\"2019-06-21\"],[3,\"login\",\"2019-01-01\"],[3,\"jobs\",\"2019-01-01\"],[3,\"logout\",\"2019-01-01\"],[4,\"login\",\"2019-06-21\"],[4,\"groups\",\"2019-06-21\"],[4,\"logout\",\"2019-06-21\"],[5,\"login\",\"2019-03-01\"],[5,\"logout\",\"2019-03-01\"],[5,\"login\",\"2019-06-21\"],[5,\"logout\",\"2019-06-21\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef new_users_daily_count(traffic: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}