{"question_id": "3258", "problem_slug": "classifying-triangles-by-lengths", "problem_title": "Classifying Triangles by Lengths", "content": "Table: Triangles\n\n+-------------+------+ \n| Column Name | Type | \n+-------------+------+ \n| A           | int  | \n| B           | int  |\n| C           | int  |\n+-------------+------+\n(A, B, C) is the primary key for this table.\nEach row include the lengths of each of a triangle's three sides.\n\nWrite a query to find the type of triangle. Output one of the following for each row:\n\nEquilateral: It's a triangle with 3 sides of equal length.\nIsosceles: It's a triangle with 2 sides of equal length.\nScalene: It's a triangle with 3 sides of differing lengths.\nNot A Triangle: The given values of A, B, and C don't form a triangle.\n\nReturn the result table in any order.\nThe result format is in the following example.\nÂ \nExample 1:\n\nInput: \nTriangles table:\n+----+----+----+\n| A  | B  | C  |\n+----+----+----+\n| 20 | 20 | 23 |\n| 20 | 20 | 20 |\n| 20 | 21 | 22 |\n| 13 | 14 | 30 |\n+----+----+----+\nOutput: \n+----------------+\n| triangle_type  | \n+----------------+\n| Isosceles      | \n| Equilateral    |\n| Scalene        |\n| Not A Triangle |\n+----------------+\nExplanation: \n- Values in the first row from an Isosceles triangle, because A = B.\n- Values in the second row from an Equilateral triangle, because A = B = C.\n- Values in the third row from an Scalene triangle, because A != B != C.\n- Values in the fourth row cannot form a triangle, because the combined value of sides A and B is not larger than that of side C.\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Triangles\":[\"A\",\"B\",\"C\"]},\"rows\":{\"Triangles\":[[20,20,23],[20,20,20],[20,21,22],[13,14,30]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef type_of_triangle(triangles: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}