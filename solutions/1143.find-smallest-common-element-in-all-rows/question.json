{"questionId": "1143", "acRate": 76.45864289252104, "difficulty": "Medium", "freqBar": 35.08750492706422, "frontendQuestionId": "1198", "paidOnly": true, "status": "ac", "title": "Find Smallest Common Element in All Rows", "topicTags": [{"name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array"}, {"name": "Hash Table", "id": "VG9waWNUYWdOb2RlOjY=", "slug": "hash-table"}, {"name": "Binary Search", "id": "VG9waWNUYWdOb2RlOjEx", "slug": "binary-search"}, {"name": "Matrix", "id": "VG9waWNUYWdOb2RlOjYxMDUz", "slug": "matrix"}, {"name": "Counting", "id": "VG9waWNUYWdOb2RlOjYxMDYy", "slug": "counting"}], "titleSlug": "find-smallest-common-element-in-all-rows", "content": "<p>Given an <code>m x n</code> matrix <code>mat</code> where every row is sorted in <strong>strictly</strong> <strong>increasing</strong> order, return <em>the <strong>smallest common element</strong> in all rows</em>.</p>\n\n<p>If there is no common element, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,2,3,4,5],[2,4,5,8,10],[3,5,7,9,11],[1,3,5,7,9]]\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> mat = [[1,2,3],[2,3,4],[2,3,5]]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>1 &lt;= mat[i][j] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>mat[i]</code> is sorted in strictly increasing order.</li>\n</ul>\n", "hints": ["Notice that each row has no duplicates.", "Is counting the frequency of elements enough to find the answer?", "Use a data structure to count the frequency of elements.", "Find an element whose frequency equals the number of rows."], "exampleTestcases": "[[1,2,3,4,5],[2,4,5,8,10],[3,5,7,9,11],[1,3,5,7,9]]\n[[1,2,3],[2,3,4],[2,3,5]]", "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int smallestCommonElement(vector<vector<int>>& mat) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int smallestCommonElement(int[][] mat) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def smallestCommonElement(self, mat):\n        \"\"\"\n        :type mat: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def smallestCommonElement(self, mat: List[List[int]]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int smallestCommonElement(int** mat, int matSize, int* matColSize) {\n    \n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int SmallestCommonElement(int[][] mat) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[][]} mat\n * @return {number}\n */\nvar smallestCommonElement = function(mat) {\n    \n};"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function smallestCommonElement(mat: number[][]): number {\n    \n};"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[][] $mat\n     * @return Integer\n     */\n    function smallestCommonElement($mat) {\n        \n    }\n}"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func smallestCommonElement(_ mat: [[Int]]) -> Int {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun smallestCommonElement(mat: Array<IntArray>): Int {\n        \n    }\n}"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int smallestCommonElement(List<List<int>> mat) {\n    \n  }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func smallestCommonElement(mat [][]int) int {\n    \n}"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[][]} mat\n# @return {Integer}\ndef smallest_common_element(mat)\n    \nend"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def smallestCommonElement(mat: Array[Array[Int]]): Int = {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn smallest_common_element(mat: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (smallest-common-element mat)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec smallest_common_element(Mat :: [[integer()]]) -> integer().\nsmallest_common_element(Mat) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec smallest_common_element(mat :: [[integer]]) :: integer\n  def smallest_common_element(mat) do\n    \n  end\nend"}], "similarQuestionList": [{"difficulty": "Easy", "titleSlug": "intersection-of-multiple-arrays", "title": "Intersection of Multiple Arrays", "isPaidOnly": false}]}