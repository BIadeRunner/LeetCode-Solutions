{"question_id": "1198", "problem_slug": "unpopular-books", "problem_title": "Unpopular Books", "content": "Table: Books\n\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| book_id        | int     |\n| name           | varchar |\n| available_from | date    |\n+----------------+---------+\nbook_id is the primary key (column with unique values) of this table.\n\n \nTable: Orders\n\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| order_id       | int     |\n| book_id        | int     |\n| quantity       | int     |\n| dispatch_date  | date    |\n+----------------+---------+\norder_id is the primary key (column with unique values) of this table.\nbook_id is a foreign key (reference column) to the Books table.\n\n \nWrite a solution to report the books that have sold less than 10 copies in the last year, excluding books that have been available for less than one month from today. Assume today is 2019-06-23.\nReturn the result table in any order.\nThe result format is in the following example.\n \nExample 1:\n\nInput: \nBooks table:\n+---------+--------------------+----------------+\n| book_id | name               | available_from |\n+---------+--------------------+----------------+\n| 1       | \"Kalila And Demna\" | 2010-01-01     |\n| 2       | \"28 Letters\"       | 2012-05-12     |\n| 3       | \"The Hobbit\"       | 2019-06-10     |\n| 4       | \"13 Reasons Why\"   | 2019-06-01     |\n| 5       | \"The Hunger Games\" | 2008-09-21     |\n+---------+--------------------+----------------+\nOrders table:\n+----------+---------+----------+---------------+\n| order_id | book_id | quantity | dispatch_date |\n+----------+---------+----------+---------------+\n| 1        | 1       | 2        | 2018-07-26    |\n| 2        | 1       | 1        | 2018-11-05    |\n| 3        | 3       | 8        | 2019-06-11    |\n| 4        | 4       | 6        | 2019-06-05    |\n| 5        | 4       | 5        | 2019-06-20    |\n| 6        | 5       | 9        | 2009-02-02    |\n| 7        | 5       | 8        | 2010-04-13    |\n+----------+---------+----------+---------------+\nOutput: \n+-----------+--------------------+\n| book_id   | name               |\n+-----------+--------------------+\n| 1         | \"Kalila And Demna\" |\n| 2         | \"28 Letters\"       |\n| 5         | \"The Hunger Games\" |\n+-----------+--------------------+\n\n", "hints": [], "exampleTestcases": "{\"headers\":{\"Books\":[\"book_id\",\"name\",\"available_from\"],\"Orders\":[\"order_id\",\"book_id\",\"quantity\",\"dispatch_date\"]},\"rows\":{\"Books\":[[1,\"Kalila And Demna\",\"2010-01-01\"],[2,\"28 Letters\",\"2012-05-12\"],[3,\"The Hobbit\",\"2019-06-10\"],[4,\"13 Reasons Why\",\"2019-06-01\"],[5,\"The Hunger Games\",\"2008-09-21\"]],\"Orders\":[[1,1,2,\"2018-07-26\"],[2,1,1,\"2018-11-05\"],[3,3,8,\"2019-06-11\"],[4,4,6,\"2019-06-05\"],[5,4,5,\"2019-06-20\"],[6,5,9,\"2009-02-02\"],[7,5,8,\"2010-04-13\"]]}}", "codeSnippets": {"MySQL": {"langSlug": "mysql", "code": "# Write your MySQL query statement below\n"}, "MS SQL Server": {"langSlug": "mssql", "code": "/* Write your T-SQL query statement below */\n"}, "Oracle": {"langSlug": "oraclesql", "code": "/* Write your PL/SQL query statement below */\n"}, "Pandas": {"langSlug": "pythondata", "code": "import pandas as pd\n\ndef unpopular_books(books: pd.DataFrame, orders: pd.DataFrame) -> pd.DataFrame:\n    "}, "PostgreSQL": {"langSlug": "postgresql", "code": "-- Write your PostgreSQL query statement below\n"}}}